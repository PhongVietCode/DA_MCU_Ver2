
DA_MCU_Ver2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002558  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000024  08002664  08002664  00012664  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002688  08002688  0002006c  2**0
                  CONTENTS
  4 .ARM          00000000  08002688  08002688  0002006c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002688  08002688  0002006c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002688  08002688  00012688  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800268c  0800268c  0001268c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000006c  20000000  08002690  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000e4  2000006c  080026fc  0002006c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000150  080026fc  00020150  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020095  2**0
                  CONTENTS, READONLY
 13 .debug_info   00008341  00000000  00000000  000200d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001aa4  00000000  00000000  00028419  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000a18  00000000  00000000  00029ec0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000007b7  00000000  00000000  0002a8d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00016ea5  00000000  00000000  0002b08f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000b44a  00000000  00000000  00041f34  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008474c  00000000  00000000  0004d37e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00002860  00000000  00000000  000d1acc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000062  00000000  00000000  000d432c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	2000006c 	.word	0x2000006c
 8000128:	00000000 	.word	0x00000000
 800012c:	0800264c 	.word	0x0800264c

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000070 	.word	0x20000070
 8000148:	0800264c 	.word	0x0800264c

0800014c <isButtonPress>:

// flag for buttons
static int button_flag[NO_OF_BUTTONS];
static int button_flag_long[NO_OF_BUTTONS];
int isButtonPress(int index)
{
 800014c:	b480      	push	{r7}
 800014e:	b083      	sub	sp, #12
 8000150:	af00      	add	r7, sp, #0
 8000152:	6078      	str	r0, [r7, #4]
    // if press, turn off the flag and return 1
    if (button_flag[index] == 1)
 8000154:	4a09      	ldr	r2, [pc, #36]	; (800017c <isButtonPress+0x30>)
 8000156:	687b      	ldr	r3, [r7, #4]
 8000158:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800015c:	2b01      	cmp	r3, #1
 800015e:	d106      	bne.n	800016e <isButtonPress+0x22>
    {
        button_flag[index] = 0;
 8000160:	4a06      	ldr	r2, [pc, #24]	; (800017c <isButtonPress+0x30>)
 8000162:	687b      	ldr	r3, [r7, #4]
 8000164:	2100      	movs	r1, #0
 8000166:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        return 1;
 800016a:	2301      	movs	r3, #1
 800016c:	e000      	b.n	8000170 <isButtonPress+0x24>
    }

    // if not just return 0
    return 0;
 800016e:	2300      	movs	r3, #0
}
 8000170:	4618      	mov	r0, r3
 8000172:	370c      	adds	r7, #12
 8000174:	46bd      	mov	sp, r7
 8000176:	bc80      	pop	{r7}
 8000178:	4770      	bx	lr
 800017a:	bf00      	nop
 800017c:	200000c4 	.word	0x200000c4

08000180 <isButtonLongPress>:
int isButtonLongPress(int index){
 8000180:	b480      	push	{r7}
 8000182:	b083      	sub	sp, #12
 8000184:	af00      	add	r7, sp, #0
 8000186:	6078      	str	r0, [r7, #4]
	// if press return 1 and turn off flag
	 if (button_flag_long[index] == 1)
 8000188:	4a09      	ldr	r2, [pc, #36]	; (80001b0 <isButtonLongPress+0x30>)
 800018a:	687b      	ldr	r3, [r7, #4]
 800018c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000190:	2b01      	cmp	r3, #1
 8000192:	d106      	bne.n	80001a2 <isButtonLongPress+0x22>
	{
		button_flag_long[index] = 0;
 8000194:	4a06      	ldr	r2, [pc, #24]	; (80001b0 <isButtonLongPress+0x30>)
 8000196:	687b      	ldr	r3, [r7, #4]
 8000198:	2100      	movs	r1, #0
 800019a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		return 1;
 800019e:	2301      	movs	r3, #1
 80001a0:	e000      	b.n	80001a4 <isButtonLongPress+0x24>
	}
	// if not just return 0
	return 0;
 80001a2:	2300      	movs	r3, #0
}
 80001a4:	4618      	mov	r0, r3
 80001a6:	370c      	adds	r7, #12
 80001a8:	46bd      	mov	sp, r7
 80001aa:	bc80      	pop	{r7}
 80001ac:	4770      	bx	lr
 80001ae:	bf00      	nop
 80001b0:	200000d0 	.word	0x200000d0

080001b4 <button_reading>:
    {
        button_flag[index] = 1;
    }
}
void button_reading()
{
 80001b4:	b580      	push	{r7, lr}
 80001b6:	b082      	sub	sp, #8
 80001b8:	af00      	add	r7, sp, #0
    for (int i = 0; i < NO_OF_BUTTONS; i++)
 80001ba:	2300      	movs	r3, #0
 80001bc:	607b      	str	r3, [r7, #4]
 80001be:	e0d9      	b.n	8000374 <button_reading+0x1c0>
    {
        // debounce button
        debounce_3[i] = debounce_2[i];
 80001c0:	4a70      	ldr	r2, [pc, #448]	; (8000384 <button_reading+0x1d0>)
 80001c2:	687b      	ldr	r3, [r7, #4]
 80001c4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80001c8:	496f      	ldr	r1, [pc, #444]	; (8000388 <button_reading+0x1d4>)
 80001ca:	687b      	ldr	r3, [r7, #4]
 80001cc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        debounce_2[i] = debounce_1[i];
 80001d0:	4a6e      	ldr	r2, [pc, #440]	; (800038c <button_reading+0x1d8>)
 80001d2:	687b      	ldr	r3, [r7, #4]
 80001d4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80001d8:	496a      	ldr	r1, [pc, #424]	; (8000384 <button_reading+0x1d0>)
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        // read pin button state
        switch (i)
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	2b02      	cmp	r3, #2
 80001e4:	d020      	beq.n	8000228 <button_reading+0x74>
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	2b02      	cmp	r3, #2
 80001ea:	dc28      	bgt.n	800023e <button_reading+0x8a>
 80001ec:	687b      	ldr	r3, [r7, #4]
 80001ee:	2b00      	cmp	r3, #0
 80001f0:	d003      	beq.n	80001fa <button_reading+0x46>
 80001f2:	687b      	ldr	r3, [r7, #4]
 80001f4:	2b01      	cmp	r3, #1
 80001f6:	d00b      	beq.n	8000210 <button_reading+0x5c>
            break;
        case 2:
            debounce_1[i] = HAL_GPIO_ReadPin(BUTTON_3_GPIO_Port, BUTTON_3_Pin);
            break;
        default:
            break;
 80001f8:	e021      	b.n	800023e <button_reading+0x8a>
            debounce_1[i] = HAL_GPIO_ReadPin(BUTTON_1_GPIO_Port, BUTTON_1_Pin);
 80001fa:	2108      	movs	r1, #8
 80001fc:	4864      	ldr	r0, [pc, #400]	; (8000390 <button_reading+0x1dc>)
 80001fe:	f001 f9ed 	bl	80015dc <HAL_GPIO_ReadPin>
 8000202:	4603      	mov	r3, r0
 8000204:	4619      	mov	r1, r3
 8000206:	4a61      	ldr	r2, [pc, #388]	; (800038c <button_reading+0x1d8>)
 8000208:	687b      	ldr	r3, [r7, #4]
 800020a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
            break;
 800020e:	e017      	b.n	8000240 <button_reading+0x8c>
            debounce_1[i] = HAL_GPIO_ReadPin(BUTTON_2_GPIO_Port, BUTTON_2_Pin);
 8000210:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000214:	485f      	ldr	r0, [pc, #380]	; (8000394 <button_reading+0x1e0>)
 8000216:	f001 f9e1 	bl	80015dc <HAL_GPIO_ReadPin>
 800021a:	4603      	mov	r3, r0
 800021c:	4619      	mov	r1, r3
 800021e:	4a5b      	ldr	r2, [pc, #364]	; (800038c <button_reading+0x1d8>)
 8000220:	687b      	ldr	r3, [r7, #4]
 8000222:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
            break;
 8000226:	e00b      	b.n	8000240 <button_reading+0x8c>
            debounce_1[i] = HAL_GPIO_ReadPin(BUTTON_3_GPIO_Port, BUTTON_3_Pin);
 8000228:	2104      	movs	r1, #4
 800022a:	485a      	ldr	r0, [pc, #360]	; (8000394 <button_reading+0x1e0>)
 800022c:	f001 f9d6 	bl	80015dc <HAL_GPIO_ReadPin>
 8000230:	4603      	mov	r3, r0
 8000232:	4619      	mov	r1, r3
 8000234:	4a55      	ldr	r2, [pc, #340]	; (800038c <button_reading+0x1d8>)
 8000236:	687b      	ldr	r3, [r7, #4]
 8000238:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
            break;
 800023c:	e000      	b.n	8000240 <button_reading+0x8c>
            break;
 800023e:	bf00      	nop
        }

        // pass debouncing
        if ((debounce_3[i] == debounce_2[i]) && (debounce_2[i] == debounce_1[i]))
 8000240:	4a51      	ldr	r2, [pc, #324]	; (8000388 <button_reading+0x1d4>)
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000248:	494e      	ldr	r1, [pc, #312]	; (8000384 <button_reading+0x1d0>)
 800024a:	687b      	ldr	r3, [r7, #4]
 800024c:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000250:	429a      	cmp	r2, r3
 8000252:	f040 808c 	bne.w	800036e <button_reading+0x1ba>
 8000256:	4a4b      	ldr	r2, [pc, #300]	; (8000384 <button_reading+0x1d0>)
 8000258:	687b      	ldr	r3, [r7, #4]
 800025a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800025e:	494b      	ldr	r1, [pc, #300]	; (800038c <button_reading+0x1d8>)
 8000260:	687b      	ldr	r3, [r7, #4]
 8000262:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000266:	429a      	cmp	r2, r3
 8000268:	f040 8081 	bne.w	800036e <button_reading+0x1ba>
        {
            current_button_state[i] = debounce_1[i];
 800026c:	4a47      	ldr	r2, [pc, #284]	; (800038c <button_reading+0x1d8>)
 800026e:	687b      	ldr	r3, [r7, #4]
 8000270:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000274:	4948      	ldr	r1, [pc, #288]	; (8000398 <button_reading+0x1e4>)
 8000276:	687b      	ldr	r3, [r7, #4]
 8000278:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

            // fsm
            switch (button_state_save[i])
 800027c:	4a47      	ldr	r2, [pc, #284]	; (800039c <button_reading+0x1e8>)
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000284:	2b0d      	cmp	r3, #13
 8000286:	d046      	beq.n	8000316 <button_reading+0x162>
 8000288:	2b0d      	cmp	r3, #13
 800028a:	dc69      	bgt.n	8000360 <button_reading+0x1ac>
 800028c:	2b0b      	cmp	r3, #11
 800028e:	d00d      	beq.n	80002ac <button_reading+0xf8>
 8000290:	2b0c      	cmp	r3, #12
 8000292:	d165      	bne.n	8000360 <button_reading+0x1ac>
            {
            case BUTTON_IS_RELEASED:
                /* code */
                if (current_button_state[i] == PRESS_STATE)
 8000294:	4a40      	ldr	r2, [pc, #256]	; (8000398 <button_reading+0x1e4>)
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800029c:	2b00      	cmp	r3, #0
 800029e:	d161      	bne.n	8000364 <button_reading+0x1b0>
                {
                    button_state_save[i] = BUTTON_IS_PRESSED;
 80002a0:	4a3e      	ldr	r2, [pc, #248]	; (800039c <button_reading+0x1e8>)
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	210b      	movs	r1, #11
 80002a6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

                }
                break;
 80002aa:	e05b      	b.n	8000364 <button_reading+0x1b0>

            case BUTTON_IS_PRESSED:
                /* code */
            	if (current_button_state[i] == RELEASED_STATE)
 80002ac:	4a3a      	ldr	r2, [pc, #232]	; (8000398 <button_reading+0x1e4>)
 80002ae:	687b      	ldr	r3, [r7, #4]
 80002b0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80002b4:	2b01      	cmp	r3, #1
 80002b6:	d10f      	bne.n	80002d8 <button_reading+0x124>
			   {
            		button_flag[i] = 1;
 80002b8:	4a39      	ldr	r2, [pc, #228]	; (80003a0 <button_reading+0x1ec>)
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	2101      	movs	r1, #1
 80002be:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
            		counter_for_button_pressed[i] = 0;
 80002c2:	4a38      	ldr	r2, [pc, #224]	; (80003a4 <button_reading+0x1f0>)
 80002c4:	687b      	ldr	r3, [r7, #4]
 80002c6:	2100      	movs	r1, #0
 80002c8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
				   button_state_save[i] = BUTTON_IS_RELEASED;
 80002cc:	4a33      	ldr	r2, [pc, #204]	; (800039c <button_reading+0x1e8>)
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	210c      	movs	r1, #12
 80002d2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
				   return;
 80002d6:	e051      	b.n	800037c <button_reading+0x1c8>
			   }
                counter_for_button_pressed[i]++;
 80002d8:	4a32      	ldr	r2, [pc, #200]	; (80003a4 <button_reading+0x1f0>)
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80002e0:	1c5a      	adds	r2, r3, #1
 80002e2:	4930      	ldr	r1, [pc, #192]	; (80003a4 <button_reading+0x1f0>)
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
                if (counter_for_button_pressed[i] >= WAITING_TIME / TIME_CYCLE)
 80002ea:	4a2e      	ldr	r2, [pc, #184]	; (80003a4 <button_reading+0x1f0>)
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80002f2:	2b63      	cmp	r3, #99	; 0x63
 80002f4:	dd38      	ble.n	8000368 <button_reading+0x1b4>
                {
                    button_state_save[i] = BUTTON_IS_LONG_PRESSED;
 80002f6:	4a29      	ldr	r2, [pc, #164]	; (800039c <button_reading+0x1e8>)
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	210d      	movs	r1, #13
 80002fc:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                    counter_for_button_pressed[i] = 0;
 8000300:	4a28      	ldr	r2, [pc, #160]	; (80003a4 <button_reading+0x1f0>)
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	2100      	movs	r1, #0
 8000306:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                    button_flag_long[i] = 1;
 800030a:	4a27      	ldr	r2, [pc, #156]	; (80003a8 <button_reading+0x1f4>)
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	2101      	movs	r1, #1
 8000310:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                }

                break;
 8000314:	e028      	b.n	8000368 <button_reading+0x1b4>

            case BUTTON_IS_LONG_PRESSED:
                /* code */
                if (current_button_state[i] == RELEASED_STATE)
 8000316:	4a20      	ldr	r2, [pc, #128]	; (8000398 <button_reading+0x1e4>)
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800031e:	2b01      	cmp	r3, #1
 8000320:	d109      	bne.n	8000336 <button_reading+0x182>
                {
                    button_state_save[i] = BUTTON_IS_RELEASED;
 8000322:	4a1e      	ldr	r2, [pc, #120]	; (800039c <button_reading+0x1e8>)
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	210c      	movs	r1, #12
 8000328:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                    counter_for_button_pressed[i] = 0;
 800032c:	4a1d      	ldr	r2, [pc, #116]	; (80003a4 <button_reading+0x1f0>)
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	2100      	movs	r1, #0
 8000332:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                }
                counter_for_button_pressed[i]++;
 8000336:	4a1b      	ldr	r2, [pc, #108]	; (80003a4 <button_reading+0x1f0>)
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800033e:	1c5a      	adds	r2, r3, #1
 8000340:	4918      	ldr	r1, [pc, #96]	; (80003a4 <button_reading+0x1f0>)
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
                if (counter_for_button_pressed[i] == TIME_OUT_FOR_KEY_PRESSED / TIME_CYCLE)
 8000348:	4a16      	ldr	r2, [pc, #88]	; (80003a4 <button_reading+0x1f0>)
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000350:	2b14      	cmp	r3, #20
 8000352:	d10b      	bne.n	800036c <button_reading+0x1b8>
                {
                    counter_for_button_pressed[i] = 0;
 8000354:	4a13      	ldr	r2, [pc, #76]	; (80003a4 <button_reading+0x1f0>)
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	2100      	movs	r1, #0
 800035a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                }
                break;
 800035e:	e005      	b.n	800036c <button_reading+0x1b8>
            default:
                break;
 8000360:	bf00      	nop
 8000362:	e004      	b.n	800036e <button_reading+0x1ba>
                break;
 8000364:	bf00      	nop
 8000366:	e002      	b.n	800036e <button_reading+0x1ba>
                break;
 8000368:	bf00      	nop
 800036a:	e000      	b.n	800036e <button_reading+0x1ba>
                break;
 800036c:	bf00      	nop
    for (int i = 0; i < NO_OF_BUTTONS; i++)
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	3301      	adds	r3, #1
 8000372:	607b      	str	r3, [r7, #4]
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	2b02      	cmp	r3, #2
 8000378:	f77f af22 	ble.w	80001c0 <button_reading+0xc>
            }
        }
    }
}
 800037c:	3708      	adds	r7, #8
 800037e:	46bd      	mov	sp, r7
 8000380:	bd80      	pop	{r7, pc}
 8000382:	bf00      	nop
 8000384:	200000a0 	.word	0x200000a0
 8000388:	200000ac 	.word	0x200000ac
 800038c:	20000094 	.word	0x20000094
 8000390:	40010c00 	.word	0x40010c00
 8000394:	40010800 	.word	0x40010800
 8000398:	20000088 	.word	0x20000088
 800039c:	20000000 	.word	0x20000000
 80003a0:	200000c4 	.word	0x200000c4
 80003a4:	200000b8 	.word	0x200000b8
 80003a8:	200000d0 	.word	0x200000d0

080003ac <offAllLedMode>:

GPIO_TypeDef *portArr[] = {LED12_GPIO_Port,LED1_GPIO_Port, LED2_GPIO_Port, LED3_GPIO_Port, LED4_GPIO_Port,
                           LED5_GPIO_Port, LED6_GPIO_Port, LED7_GPIO_Port, LED8_GPIO_Port, LED9_GPIO_Port,
                           LED10_GPIO_Port, LED11_GPIO_Port, LED12_GPIO_Port};

void offAllLedMode(){
 80003ac:	b580      	push	{r7, lr}
 80003ae:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(MODE1_GPIO_Port, MODE1_Pin, 1);
 80003b0:	2201      	movs	r2, #1
 80003b2:	2101      	movs	r1, #1
 80003b4:	4807      	ldr	r0, [pc, #28]	; (80003d4 <offAllLedMode+0x28>)
 80003b6:	f001 f928 	bl	800160a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(MODE2_GPIO_Port, MODE2_Pin, 1);
 80003ba:	2201      	movs	r2, #1
 80003bc:	2102      	movs	r1, #2
 80003be:	4806      	ldr	r0, [pc, #24]	; (80003d8 <offAllLedMode+0x2c>)
 80003c0:	f001 f923 	bl	800160a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(MODE3_GPIO_Port, MODE3_Pin, 1);
 80003c4:	2201      	movs	r2, #1
 80003c6:	2101      	movs	r1, #1
 80003c8:	4803      	ldr	r0, [pc, #12]	; (80003d8 <offAllLedMode+0x2c>)
 80003ca:	f001 f91e 	bl	800160a <HAL_GPIO_WritePin>
}
 80003ce:	bf00      	nop
 80003d0:	bd80      	pop	{r7, pc}
 80003d2:	bf00      	nop
 80003d4:	40010c00 	.word	0x40010c00
 80003d8:	40011000 	.word	0x40011000

080003dc <changeLedMode>:
void changeLedMode(){
 80003dc:	b580      	push	{r7, lr}
 80003de:	af00      	add	r7, sp, #0
	switch(currentMode){
 80003e0:	4b17      	ldr	r3, [pc, #92]	; (8000440 <changeLedMode+0x64>)
 80003e2:	781b      	ldrb	r3, [r3, #0]
 80003e4:	2b02      	cmp	r3, #2
 80003e6:	d01c      	beq.n	8000422 <changeLedMode+0x46>
 80003e8:	2b02      	cmp	r3, #2
 80003ea:	dc25      	bgt.n	8000438 <changeLedMode+0x5c>
 80003ec:	2b00      	cmp	r3, #0
 80003ee:	d002      	beq.n	80003f6 <changeLedMode+0x1a>
 80003f0:	2b01      	cmp	r3, #1
 80003f2:	d00b      	beq.n	800040c <changeLedMode+0x30>
	case CHANGE_SECOND:
		HAL_GPIO_WritePin(MODE2_GPIO_Port, MODE2_Pin, 1);
		HAL_GPIO_WritePin(MODE3_GPIO_Port, MODE3_Pin, 0);
			break;
	default:
		break;
 80003f4:	e020      	b.n	8000438 <changeLedMode+0x5c>
		HAL_GPIO_WritePin(MODE3_GPIO_Port, MODE3_Pin, 1);
 80003f6:	2201      	movs	r2, #1
 80003f8:	2101      	movs	r1, #1
 80003fa:	4812      	ldr	r0, [pc, #72]	; (8000444 <changeLedMode+0x68>)
 80003fc:	f001 f905 	bl	800160a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(MODE1_GPIO_Port, MODE1_Pin, 0);
 8000400:	2200      	movs	r2, #0
 8000402:	2101      	movs	r1, #1
 8000404:	4810      	ldr	r0, [pc, #64]	; (8000448 <changeLedMode+0x6c>)
 8000406:	f001 f900 	bl	800160a <HAL_GPIO_WritePin>
		break;
 800040a:	e016      	b.n	800043a <changeLedMode+0x5e>
		HAL_GPIO_WritePin(MODE1_GPIO_Port, MODE1_Pin, 1);
 800040c:	2201      	movs	r2, #1
 800040e:	2101      	movs	r1, #1
 8000410:	480d      	ldr	r0, [pc, #52]	; (8000448 <changeLedMode+0x6c>)
 8000412:	f001 f8fa 	bl	800160a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(MODE2_GPIO_Port, MODE2_Pin, 0);
 8000416:	2200      	movs	r2, #0
 8000418:	2102      	movs	r1, #2
 800041a:	480a      	ldr	r0, [pc, #40]	; (8000444 <changeLedMode+0x68>)
 800041c:	f001 f8f5 	bl	800160a <HAL_GPIO_WritePin>
			break;
 8000420:	e00b      	b.n	800043a <changeLedMode+0x5e>
		HAL_GPIO_WritePin(MODE2_GPIO_Port, MODE2_Pin, 1);
 8000422:	2201      	movs	r2, #1
 8000424:	2102      	movs	r1, #2
 8000426:	4807      	ldr	r0, [pc, #28]	; (8000444 <changeLedMode+0x68>)
 8000428:	f001 f8ef 	bl	800160a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(MODE3_GPIO_Port, MODE3_Pin, 0);
 800042c:	2200      	movs	r2, #0
 800042e:	2101      	movs	r1, #1
 8000430:	4804      	ldr	r0, [pc, #16]	; (8000444 <changeLedMode+0x68>)
 8000432:	f001 f8ea 	bl	800160a <HAL_GPIO_WritePin>
			break;
 8000436:	e000      	b.n	800043a <changeLedMode+0x5e>
		break;
 8000438:	bf00      	nop
	}
}
 800043a:	bf00      	nop
 800043c:	bd80      	pop	{r7, pc}
 800043e:	bf00      	nop
 8000440:	200000e9 	.word	0x200000e9
 8000444:	40011000 	.word	0x40011000
 8000448:	40010c00 	.word	0x40010c00

0800044c <clearAllCLock>:
// ======= LED CLOCK =========
void clearAllCLock()
{
 800044c:	b580      	push	{r7, lr}
 800044e:	af00      	add	r7, sp, #0
  HAL_GPIO_WritePin(portArr[0], pinArr[0], 1);
 8000450:	4b34      	ldr	r3, [pc, #208]	; (8000524 <clearAllCLock+0xd8>)
 8000452:	681b      	ldr	r3, [r3, #0]
 8000454:	4a34      	ldr	r2, [pc, #208]	; (8000528 <clearAllCLock+0xdc>)
 8000456:	8811      	ldrh	r1, [r2, #0]
 8000458:	2201      	movs	r2, #1
 800045a:	4618      	mov	r0, r3
 800045c:	f001 f8d5 	bl	800160a <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(portArr[1], pinArr[1], 1);
 8000460:	4b30      	ldr	r3, [pc, #192]	; (8000524 <clearAllCLock+0xd8>)
 8000462:	685b      	ldr	r3, [r3, #4]
 8000464:	4a30      	ldr	r2, [pc, #192]	; (8000528 <clearAllCLock+0xdc>)
 8000466:	8851      	ldrh	r1, [r2, #2]
 8000468:	2201      	movs	r2, #1
 800046a:	4618      	mov	r0, r3
 800046c:	f001 f8cd 	bl	800160a <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(portArr[2], pinArr[2], 1);
 8000470:	4b2c      	ldr	r3, [pc, #176]	; (8000524 <clearAllCLock+0xd8>)
 8000472:	689b      	ldr	r3, [r3, #8]
 8000474:	4a2c      	ldr	r2, [pc, #176]	; (8000528 <clearAllCLock+0xdc>)
 8000476:	8891      	ldrh	r1, [r2, #4]
 8000478:	2201      	movs	r2, #1
 800047a:	4618      	mov	r0, r3
 800047c:	f001 f8c5 	bl	800160a <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(portArr[3], pinArr[3], 1);
 8000480:	4b28      	ldr	r3, [pc, #160]	; (8000524 <clearAllCLock+0xd8>)
 8000482:	68db      	ldr	r3, [r3, #12]
 8000484:	4a28      	ldr	r2, [pc, #160]	; (8000528 <clearAllCLock+0xdc>)
 8000486:	88d1      	ldrh	r1, [r2, #6]
 8000488:	2201      	movs	r2, #1
 800048a:	4618      	mov	r0, r3
 800048c:	f001 f8bd 	bl	800160a <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(portArr[4], pinArr[4], 1);
 8000490:	4b24      	ldr	r3, [pc, #144]	; (8000524 <clearAllCLock+0xd8>)
 8000492:	691b      	ldr	r3, [r3, #16]
 8000494:	4a24      	ldr	r2, [pc, #144]	; (8000528 <clearAllCLock+0xdc>)
 8000496:	8911      	ldrh	r1, [r2, #8]
 8000498:	2201      	movs	r2, #1
 800049a:	4618      	mov	r0, r3
 800049c:	f001 f8b5 	bl	800160a <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(portArr[5], pinArr[5], 1);
 80004a0:	4b20      	ldr	r3, [pc, #128]	; (8000524 <clearAllCLock+0xd8>)
 80004a2:	695b      	ldr	r3, [r3, #20]
 80004a4:	4a20      	ldr	r2, [pc, #128]	; (8000528 <clearAllCLock+0xdc>)
 80004a6:	8951      	ldrh	r1, [r2, #10]
 80004a8:	2201      	movs	r2, #1
 80004aa:	4618      	mov	r0, r3
 80004ac:	f001 f8ad 	bl	800160a <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(portArr[6], pinArr[6], 1);
 80004b0:	4b1c      	ldr	r3, [pc, #112]	; (8000524 <clearAllCLock+0xd8>)
 80004b2:	699b      	ldr	r3, [r3, #24]
 80004b4:	4a1c      	ldr	r2, [pc, #112]	; (8000528 <clearAllCLock+0xdc>)
 80004b6:	8991      	ldrh	r1, [r2, #12]
 80004b8:	2201      	movs	r2, #1
 80004ba:	4618      	mov	r0, r3
 80004bc:	f001 f8a5 	bl	800160a <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(portArr[7], pinArr[7], 1);
 80004c0:	4b18      	ldr	r3, [pc, #96]	; (8000524 <clearAllCLock+0xd8>)
 80004c2:	69db      	ldr	r3, [r3, #28]
 80004c4:	4a18      	ldr	r2, [pc, #96]	; (8000528 <clearAllCLock+0xdc>)
 80004c6:	89d1      	ldrh	r1, [r2, #14]
 80004c8:	2201      	movs	r2, #1
 80004ca:	4618      	mov	r0, r3
 80004cc:	f001 f89d 	bl	800160a <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(portArr[8], pinArr[8], 1);
 80004d0:	4b14      	ldr	r3, [pc, #80]	; (8000524 <clearAllCLock+0xd8>)
 80004d2:	6a1b      	ldr	r3, [r3, #32]
 80004d4:	4a14      	ldr	r2, [pc, #80]	; (8000528 <clearAllCLock+0xdc>)
 80004d6:	8a11      	ldrh	r1, [r2, #16]
 80004d8:	2201      	movs	r2, #1
 80004da:	4618      	mov	r0, r3
 80004dc:	f001 f895 	bl	800160a <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(portArr[9], pinArr[9], 1);
 80004e0:	4b10      	ldr	r3, [pc, #64]	; (8000524 <clearAllCLock+0xd8>)
 80004e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004e4:	4a10      	ldr	r2, [pc, #64]	; (8000528 <clearAllCLock+0xdc>)
 80004e6:	8a51      	ldrh	r1, [r2, #18]
 80004e8:	2201      	movs	r2, #1
 80004ea:	4618      	mov	r0, r3
 80004ec:	f001 f88d 	bl	800160a <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(portArr[10], pinArr[10], 1);
 80004f0:	4b0c      	ldr	r3, [pc, #48]	; (8000524 <clearAllCLock+0xd8>)
 80004f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80004f4:	4a0c      	ldr	r2, [pc, #48]	; (8000528 <clearAllCLock+0xdc>)
 80004f6:	8a91      	ldrh	r1, [r2, #20]
 80004f8:	2201      	movs	r2, #1
 80004fa:	4618      	mov	r0, r3
 80004fc:	f001 f885 	bl	800160a <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(portArr[11], pinArr[11], 1);
 8000500:	4b08      	ldr	r3, [pc, #32]	; (8000524 <clearAllCLock+0xd8>)
 8000502:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000504:	4a08      	ldr	r2, [pc, #32]	; (8000528 <clearAllCLock+0xdc>)
 8000506:	8ad1      	ldrh	r1, [r2, #22]
 8000508:	2201      	movs	r2, #1
 800050a:	4618      	mov	r0, r3
 800050c:	f001 f87d 	bl	800160a <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(portArr[12], pinArr[12], 1);
 8000510:	4b04      	ldr	r3, [pc, #16]	; (8000524 <clearAllCLock+0xd8>)
 8000512:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000514:	4a04      	ldr	r2, [pc, #16]	; (8000528 <clearAllCLock+0xdc>)
 8000516:	8b11      	ldrh	r1, [r2, #24]
 8000518:	2201      	movs	r2, #1
 800051a:	4618      	mov	r0, r3
 800051c:	f001 f875 	bl	800160a <HAL_GPIO_WritePin>
}
 8000520:	bf00      	nop
 8000522:	bd80      	pop	{r7, pc}
 8000524:	20000028 	.word	0x20000028
 8000528:	2000000c 	.word	0x2000000c

0800052c <setNumberOnClock>:
void setNumberOnClock(int num)
{
 800052c:	b580      	push	{r7, lr}
 800052e:	b082      	sub	sp, #8
 8000530:	af00      	add	r7, sp, #0
 8000532:	6078      	str	r0, [r7, #4]
	HAL_GPIO_WritePin(portArr[num], pinArr[num], 0);
 8000534:	4a07      	ldr	r2, [pc, #28]	; (8000554 <setNumberOnClock+0x28>)
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800053c:	4a06      	ldr	r2, [pc, #24]	; (8000558 <setNumberOnClock+0x2c>)
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000544:	2200      	movs	r2, #0
 8000546:	4619      	mov	r1, r3
 8000548:	f001 f85f 	bl	800160a <HAL_GPIO_WritePin>
}
 800054c:	bf00      	nop
 800054e:	3708      	adds	r7, #8
 8000550:	46bd      	mov	sp, r7
 8000552:	bd80      	pop	{r7, pc}
 8000554:	20000028 	.word	0x20000028
 8000558:	2000000c 	.word	0x2000000c

0800055c <clearNumberOnClock>:
void clearNumberOnClock(int num)
{
 800055c:	b580      	push	{r7, lr}
 800055e:	b082      	sub	sp, #8
 8000560:	af00      	add	r7, sp, #0
 8000562:	6078      	str	r0, [r7, #4]
	HAL_GPIO_WritePin(portArr[num], pinArr[num], 1);
 8000564:	4a07      	ldr	r2, [pc, #28]	; (8000584 <clearNumberOnClock+0x28>)
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800056c:	4a06      	ldr	r2, [pc, #24]	; (8000588 <clearNumberOnClock+0x2c>)
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000574:	2201      	movs	r2, #1
 8000576:	4619      	mov	r1, r3
 8000578:	f001 f847 	bl	800160a <HAL_GPIO_WritePin>
}
 800057c:	bf00      	nop
 800057e:	3708      	adds	r7, #8
 8000580:	46bd      	mov	sp, r7
 8000582:	bd80      	pop	{r7, pc}
 8000584:	20000028 	.word	0x20000028
 8000588:	2000000c 	.word	0x2000000c

0800058c <init_clock>:
int second =0 , minute =0, hour=0;
enum ClockState currentState = NORMAL_STATE;
enum ClockMode currentMode = CHANGE_HOUR;
int _step = 1;
// ======= INIT MODE ==========
void init_clock(int _second,int _minute, int _hour){
 800058c:	b580      	push	{r7, lr}
 800058e:	b084      	sub	sp, #16
 8000590:	af00      	add	r7, sp, #0
 8000592:	60f8      	str	r0, [r7, #12]
 8000594:	60b9      	str	r1, [r7, #8]
 8000596:	607a      	str	r2, [r7, #4]
	clearAllCLock();
 8000598:	f7ff ff58 	bl	800044c <clearAllCLock>
	offAllLedMode();
 800059c:	f7ff ff06 	bl	80003ac <offAllLedMode>
	currentState = NORMAL_STATE;
 80005a0:	4b15      	ldr	r3, [pc, #84]	; (80005f8 <init_clock+0x6c>)
 80005a2:	2200      	movs	r2, #0
 80005a4:	701a      	strb	r2, [r3, #0]
	currentMode = CHANGE_HOUR;
 80005a6:	4b15      	ldr	r3, [pc, #84]	; (80005fc <init_clock+0x70>)
 80005a8:	2200      	movs	r2, #0
 80005aa:	701a      	strb	r2, [r3, #0]
	changeLedMode();
 80005ac:	f7ff ff16 	bl	80003dc <changeLedMode>
	second = _second;
 80005b0:	4a13      	ldr	r2, [pc, #76]	; (8000600 <init_clock+0x74>)
 80005b2:	68fb      	ldr	r3, [r7, #12]
 80005b4:	6013      	str	r3, [r2, #0]
	minute = _minute;
 80005b6:	4a13      	ldr	r2, [pc, #76]	; (8000604 <init_clock+0x78>)
 80005b8:	68bb      	ldr	r3, [r7, #8]
 80005ba:	6013      	str	r3, [r2, #0]
	hour = _hour;
 80005bc:	4a12      	ldr	r2, [pc, #72]	; (8000608 <init_clock+0x7c>)
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	6013      	str	r3, [r2, #0]
	setNumberOnClock(_second/5);
 80005c2:	68fb      	ldr	r3, [r7, #12]
 80005c4:	4a11      	ldr	r2, [pc, #68]	; (800060c <init_clock+0x80>)
 80005c6:	fb82 1203 	smull	r1, r2, r2, r3
 80005ca:	1052      	asrs	r2, r2, #1
 80005cc:	17db      	asrs	r3, r3, #31
 80005ce:	1ad3      	subs	r3, r2, r3
 80005d0:	4618      	mov	r0, r3
 80005d2:	f7ff ffab 	bl	800052c <setNumberOnClock>
	setNumberOnClock(_minute/5);
 80005d6:	68bb      	ldr	r3, [r7, #8]
 80005d8:	4a0c      	ldr	r2, [pc, #48]	; (800060c <init_clock+0x80>)
 80005da:	fb82 1203 	smull	r1, r2, r2, r3
 80005de:	1052      	asrs	r2, r2, #1
 80005e0:	17db      	asrs	r3, r3, #31
 80005e2:	1ad3      	subs	r3, r2, r3
 80005e4:	4618      	mov	r0, r3
 80005e6:	f7ff ffa1 	bl	800052c <setNumberOnClock>
	setNumberOnClock(_hour);
 80005ea:	6878      	ldr	r0, [r7, #4]
 80005ec:	f7ff ff9e 	bl	800052c <setNumberOnClock>
}
 80005f0:	bf00      	nop
 80005f2:	3710      	adds	r7, #16
 80005f4:	46bd      	mov	sp, r7
 80005f6:	bd80      	pop	{r7, pc}
 80005f8:	200000e8 	.word	0x200000e8
 80005fc:	200000e9 	.word	0x200000e9
 8000600:	200000dc 	.word	0x200000dc
 8000604:	200000e0 	.word	0x200000e0
 8000608:	200000e4 	.word	0x200000e4
 800060c:	66666667 	.word	0x66666667

08000610 <setupClock>:
// ======= SETUP CLOCK ===========
void setupClock(int step){
 8000610:	b580      	push	{r7, lr}
 8000612:	b082      	sub	sp, #8
 8000614:	af00      	add	r7, sp, #0
 8000616:	6078      	str	r0, [r7, #4]
	if(currentState == NORMAL_STATE) return;
 8000618:	4b89      	ldr	r3, [pc, #548]	; (8000840 <setupClock+0x230>)
 800061a:	781b      	ldrb	r3, [r3, #0]
 800061c:	2b00      	cmp	r3, #0
 800061e:	f000 8172 	beq.w	8000906 <setupClock+0x2f6>
	switch(currentMode){
 8000622:	4b88      	ldr	r3, [pc, #544]	; (8000844 <setupClock+0x234>)
 8000624:	781b      	ldrb	r3, [r3, #0]
 8000626:	2b02      	cmp	r3, #2
 8000628:	f000 80a3 	beq.w	8000772 <setupClock+0x162>
 800062c:	2b02      	cmp	r3, #2
 800062e:	f300 8147 	bgt.w	80008c0 <setupClock+0x2b0>
 8000632:	2b00      	cmp	r3, #0
 8000634:	d002      	beq.n	800063c <setupClock+0x2c>
 8000636:	2b01      	cmp	r3, #1
 8000638:	d034      	beq.n	80006a4 <setupClock+0x94>
					}
				}
			}
			break;
		default:
			break;
 800063a:	e141      	b.n	80008c0 <setupClock+0x2b0>
			if(hour != minute/5 && hour != second/5)
 800063c:	4b82      	ldr	r3, [pc, #520]	; (8000848 <setupClock+0x238>)
 800063e:	681b      	ldr	r3, [r3, #0]
 8000640:	4a82      	ldr	r2, [pc, #520]	; (800084c <setupClock+0x23c>)
 8000642:	fb82 1203 	smull	r1, r2, r2, r3
 8000646:	1052      	asrs	r2, r2, #1
 8000648:	17db      	asrs	r3, r3, #31
 800064a:	1ad2      	subs	r2, r2, r3
 800064c:	4b80      	ldr	r3, [pc, #512]	; (8000850 <setupClock+0x240>)
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	429a      	cmp	r2, r3
 8000652:	d010      	beq.n	8000676 <setupClock+0x66>
 8000654:	4b7f      	ldr	r3, [pc, #508]	; (8000854 <setupClock+0x244>)
 8000656:	681b      	ldr	r3, [r3, #0]
 8000658:	4a7c      	ldr	r2, [pc, #496]	; (800084c <setupClock+0x23c>)
 800065a:	fb82 1203 	smull	r1, r2, r2, r3
 800065e:	1052      	asrs	r2, r2, #1
 8000660:	17db      	asrs	r3, r3, #31
 8000662:	1ad2      	subs	r2, r2, r3
 8000664:	4b7a      	ldr	r3, [pc, #488]	; (8000850 <setupClock+0x240>)
 8000666:	681b      	ldr	r3, [r3, #0]
 8000668:	429a      	cmp	r2, r3
 800066a:	d004      	beq.n	8000676 <setupClock+0x66>
				clearNumberOnClock(hour);
 800066c:	4b78      	ldr	r3, [pc, #480]	; (8000850 <setupClock+0x240>)
 800066e:	681b      	ldr	r3, [r3, #0]
 8000670:	4618      	mov	r0, r3
 8000672:	f7ff ff73 	bl	800055c <clearNumberOnClock>
			hour+=step;
 8000676:	4b76      	ldr	r3, [pc, #472]	; (8000850 <setupClock+0x240>)
 8000678:	681a      	ldr	r2, [r3, #0]
 800067a:	687b      	ldr	r3, [r7, #4]
 800067c:	4413      	add	r3, r2
 800067e:	4a74      	ldr	r2, [pc, #464]	; (8000850 <setupClock+0x240>)
 8000680:	6013      	str	r3, [r2, #0]
			if(hour >= 12){
 8000682:	4b73      	ldr	r3, [pc, #460]	; (8000850 <setupClock+0x240>)
 8000684:	681b      	ldr	r3, [r3, #0]
 8000686:	2b0b      	cmp	r3, #11
 8000688:	dd03      	ble.n	8000692 <setupClock+0x82>
				hour = 0;
 800068a:	4b71      	ldr	r3, [pc, #452]	; (8000850 <setupClock+0x240>)
 800068c:	2200      	movs	r2, #0
 800068e:	601a      	str	r2, [r3, #0]
			break;
 8000690:	e118      	b.n	80008c4 <setupClock+0x2b4>
			else if(hour < 0){
 8000692:	4b6f      	ldr	r3, [pc, #444]	; (8000850 <setupClock+0x240>)
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	2b00      	cmp	r3, #0
 8000698:	f280 8114 	bge.w	80008c4 <setupClock+0x2b4>
				hour = 11;
 800069c:	4b6c      	ldr	r3, [pc, #432]	; (8000850 <setupClock+0x240>)
 800069e:	220b      	movs	r2, #11
 80006a0:	601a      	str	r2, [r3, #0]
			break;
 80006a2:	e10f      	b.n	80008c4 <setupClock+0x2b4>
			if(hour != minute/5 && minute/5 != second/5)
 80006a4:	4b68      	ldr	r3, [pc, #416]	; (8000848 <setupClock+0x238>)
 80006a6:	681b      	ldr	r3, [r3, #0]
 80006a8:	4a68      	ldr	r2, [pc, #416]	; (800084c <setupClock+0x23c>)
 80006aa:	fb82 1203 	smull	r1, r2, r2, r3
 80006ae:	1052      	asrs	r2, r2, #1
 80006b0:	17db      	asrs	r3, r3, #31
 80006b2:	1ad2      	subs	r2, r2, r3
 80006b4:	4b66      	ldr	r3, [pc, #408]	; (8000850 <setupClock+0x240>)
 80006b6:	681b      	ldr	r3, [r3, #0]
 80006b8:	429a      	cmp	r2, r3
 80006ba:	d01c      	beq.n	80006f6 <setupClock+0xe6>
 80006bc:	4b62      	ldr	r3, [pc, #392]	; (8000848 <setupClock+0x238>)
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	4a62      	ldr	r2, [pc, #392]	; (800084c <setupClock+0x23c>)
 80006c2:	fb82 1203 	smull	r1, r2, r2, r3
 80006c6:	1052      	asrs	r2, r2, #1
 80006c8:	17db      	asrs	r3, r3, #31
 80006ca:	1ad2      	subs	r2, r2, r3
 80006cc:	4b61      	ldr	r3, [pc, #388]	; (8000854 <setupClock+0x244>)
 80006ce:	681b      	ldr	r3, [r3, #0]
 80006d0:	495e      	ldr	r1, [pc, #376]	; (800084c <setupClock+0x23c>)
 80006d2:	fb81 0103 	smull	r0, r1, r1, r3
 80006d6:	1049      	asrs	r1, r1, #1
 80006d8:	17db      	asrs	r3, r3, #31
 80006da:	1acb      	subs	r3, r1, r3
 80006dc:	429a      	cmp	r2, r3
 80006de:	d00a      	beq.n	80006f6 <setupClock+0xe6>
				clearNumberOnClock(minute / 5);
 80006e0:	4b59      	ldr	r3, [pc, #356]	; (8000848 <setupClock+0x238>)
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	4a59      	ldr	r2, [pc, #356]	; (800084c <setupClock+0x23c>)
 80006e6:	fb82 1203 	smull	r1, r2, r2, r3
 80006ea:	1052      	asrs	r2, r2, #1
 80006ec:	17db      	asrs	r3, r3, #31
 80006ee:	1ad3      	subs	r3, r2, r3
 80006f0:	4618      	mov	r0, r3
 80006f2:	f7ff ff33 	bl	800055c <clearNumberOnClock>
			minute+=step*5;
 80006f6:	687a      	ldr	r2, [r7, #4]
 80006f8:	4613      	mov	r3, r2
 80006fa:	009b      	lsls	r3, r3, #2
 80006fc:	441a      	add	r2, r3
 80006fe:	4b52      	ldr	r3, [pc, #328]	; (8000848 <setupClock+0x238>)
 8000700:	681b      	ldr	r3, [r3, #0]
 8000702:	4413      	add	r3, r2
 8000704:	4a50      	ldr	r2, [pc, #320]	; (8000848 <setupClock+0x238>)
 8000706:	6013      	str	r3, [r2, #0]
			if(minute >= 60){
 8000708:	4b4f      	ldr	r3, [pc, #316]	; (8000848 <setupClock+0x238>)
 800070a:	681b      	ldr	r3, [r3, #0]
 800070c:	2b3b      	cmp	r3, #59	; 0x3b
 800070e:	dd15      	ble.n	800073c <setupClock+0x12c>
				minute = 1;
 8000710:	4b4d      	ldr	r3, [pc, #308]	; (8000848 <setupClock+0x238>)
 8000712:	2201      	movs	r2, #1
 8000714:	601a      	str	r2, [r3, #0]
				clearNumberOnClock(hour);
 8000716:	4b4e      	ldr	r3, [pc, #312]	; (8000850 <setupClock+0x240>)
 8000718:	681b      	ldr	r3, [r3, #0]
 800071a:	4618      	mov	r0, r3
 800071c:	f7ff ff1e 	bl	800055c <clearNumberOnClock>
				hour++;
 8000720:	4b4b      	ldr	r3, [pc, #300]	; (8000850 <setupClock+0x240>)
 8000722:	681b      	ldr	r3, [r3, #0]
 8000724:	3301      	adds	r3, #1
 8000726:	4a4a      	ldr	r2, [pc, #296]	; (8000850 <setupClock+0x240>)
 8000728:	6013      	str	r3, [r2, #0]
				if(hour >= 12){
 800072a:	4b49      	ldr	r3, [pc, #292]	; (8000850 <setupClock+0x240>)
 800072c:	681b      	ldr	r3, [r3, #0]
 800072e:	2b0b      	cmp	r3, #11
 8000730:	f340 80ca 	ble.w	80008c8 <setupClock+0x2b8>
					hour = 0;
 8000734:	4b46      	ldr	r3, [pc, #280]	; (8000850 <setupClock+0x240>)
 8000736:	2200      	movs	r2, #0
 8000738:	601a      	str	r2, [r3, #0]
			break;
 800073a:	e0c5      	b.n	80008c8 <setupClock+0x2b8>
			else if(minute <= 0){
 800073c:	4b42      	ldr	r3, [pc, #264]	; (8000848 <setupClock+0x238>)
 800073e:	681b      	ldr	r3, [r3, #0]
 8000740:	2b00      	cmp	r3, #0
 8000742:	f300 80c1 	bgt.w	80008c8 <setupClock+0x2b8>
				minute = 59;
 8000746:	4b40      	ldr	r3, [pc, #256]	; (8000848 <setupClock+0x238>)
 8000748:	223b      	movs	r2, #59	; 0x3b
 800074a:	601a      	str	r2, [r3, #0]
				clearNumberOnClock(hour);
 800074c:	4b40      	ldr	r3, [pc, #256]	; (8000850 <setupClock+0x240>)
 800074e:	681b      	ldr	r3, [r3, #0]
 8000750:	4618      	mov	r0, r3
 8000752:	f7ff ff03 	bl	800055c <clearNumberOnClock>
				hour--;
 8000756:	4b3e      	ldr	r3, [pc, #248]	; (8000850 <setupClock+0x240>)
 8000758:	681b      	ldr	r3, [r3, #0]
 800075a:	3b01      	subs	r3, #1
 800075c:	4a3c      	ldr	r2, [pc, #240]	; (8000850 <setupClock+0x240>)
 800075e:	6013      	str	r3, [r2, #0]
				if(hour < 0){
 8000760:	4b3b      	ldr	r3, [pc, #236]	; (8000850 <setupClock+0x240>)
 8000762:	681b      	ldr	r3, [r3, #0]
 8000764:	2b00      	cmp	r3, #0
 8000766:	f280 80af 	bge.w	80008c8 <setupClock+0x2b8>
					hour = 11;
 800076a:	4b39      	ldr	r3, [pc, #228]	; (8000850 <setupClock+0x240>)
 800076c:	220b      	movs	r2, #11
 800076e:	601a      	str	r2, [r3, #0]
			break;
 8000770:	e0aa      	b.n	80008c8 <setupClock+0x2b8>
			if(second/5 != hour && minute/5 != second/5)
 8000772:	4b38      	ldr	r3, [pc, #224]	; (8000854 <setupClock+0x244>)
 8000774:	681b      	ldr	r3, [r3, #0]
 8000776:	4a35      	ldr	r2, [pc, #212]	; (800084c <setupClock+0x23c>)
 8000778:	fb82 1203 	smull	r1, r2, r2, r3
 800077c:	1052      	asrs	r2, r2, #1
 800077e:	17db      	asrs	r3, r3, #31
 8000780:	1ad2      	subs	r2, r2, r3
 8000782:	4b33      	ldr	r3, [pc, #204]	; (8000850 <setupClock+0x240>)
 8000784:	681b      	ldr	r3, [r3, #0]
 8000786:	429a      	cmp	r2, r3
 8000788:	d01c      	beq.n	80007c4 <setupClock+0x1b4>
 800078a:	4b2f      	ldr	r3, [pc, #188]	; (8000848 <setupClock+0x238>)
 800078c:	681b      	ldr	r3, [r3, #0]
 800078e:	4a2f      	ldr	r2, [pc, #188]	; (800084c <setupClock+0x23c>)
 8000790:	fb82 1203 	smull	r1, r2, r2, r3
 8000794:	1052      	asrs	r2, r2, #1
 8000796:	17db      	asrs	r3, r3, #31
 8000798:	1ad2      	subs	r2, r2, r3
 800079a:	4b2e      	ldr	r3, [pc, #184]	; (8000854 <setupClock+0x244>)
 800079c:	681b      	ldr	r3, [r3, #0]
 800079e:	492b      	ldr	r1, [pc, #172]	; (800084c <setupClock+0x23c>)
 80007a0:	fb81 0103 	smull	r0, r1, r1, r3
 80007a4:	1049      	asrs	r1, r1, #1
 80007a6:	17db      	asrs	r3, r3, #31
 80007a8:	1acb      	subs	r3, r1, r3
 80007aa:	429a      	cmp	r2, r3
 80007ac:	d00a      	beq.n	80007c4 <setupClock+0x1b4>
				clearNumberOnClock(second / 5);
 80007ae:	4b29      	ldr	r3, [pc, #164]	; (8000854 <setupClock+0x244>)
 80007b0:	681b      	ldr	r3, [r3, #0]
 80007b2:	4a26      	ldr	r2, [pc, #152]	; (800084c <setupClock+0x23c>)
 80007b4:	fb82 1203 	smull	r1, r2, r2, r3
 80007b8:	1052      	asrs	r2, r2, #1
 80007ba:	17db      	asrs	r3, r3, #31
 80007bc:	1ad3      	subs	r3, r2, r3
 80007be:	4618      	mov	r0, r3
 80007c0:	f7ff fecc 	bl	800055c <clearNumberOnClock>
			second+=step*5;
 80007c4:	687a      	ldr	r2, [r7, #4]
 80007c6:	4613      	mov	r3, r2
 80007c8:	009b      	lsls	r3, r3, #2
 80007ca:	441a      	add	r2, r3
 80007cc:	4b21      	ldr	r3, [pc, #132]	; (8000854 <setupClock+0x244>)
 80007ce:	681b      	ldr	r3, [r3, #0]
 80007d0:	4413      	add	r3, r2
 80007d2:	4a20      	ldr	r2, [pc, #128]	; (8000854 <setupClock+0x244>)
 80007d4:	6013      	str	r3, [r2, #0]
			if(second > 60){
 80007d6:	4b1f      	ldr	r3, [pc, #124]	; (8000854 <setupClock+0x244>)
 80007d8:	681b      	ldr	r3, [r3, #0]
 80007da:	2b3c      	cmp	r3, #60	; 0x3c
 80007dc:	dd3c      	ble.n	8000858 <setupClock+0x248>
				second = 1;
 80007de:	4b1d      	ldr	r3, [pc, #116]	; (8000854 <setupClock+0x244>)
 80007e0:	2201      	movs	r2, #1
 80007e2:	601a      	str	r2, [r3, #0]
				clearNumberOnClock(minute / 5);
 80007e4:	4b18      	ldr	r3, [pc, #96]	; (8000848 <setupClock+0x238>)
 80007e6:	681b      	ldr	r3, [r3, #0]
 80007e8:	4a18      	ldr	r2, [pc, #96]	; (800084c <setupClock+0x23c>)
 80007ea:	fb82 1203 	smull	r1, r2, r2, r3
 80007ee:	1052      	asrs	r2, r2, #1
 80007f0:	17db      	asrs	r3, r3, #31
 80007f2:	1ad3      	subs	r3, r2, r3
 80007f4:	4618      	mov	r0, r3
 80007f6:	f7ff feb1 	bl	800055c <clearNumberOnClock>
				minute+=step*5;
 80007fa:	687a      	ldr	r2, [r7, #4]
 80007fc:	4613      	mov	r3, r2
 80007fe:	009b      	lsls	r3, r3, #2
 8000800:	441a      	add	r2, r3
 8000802:	4b11      	ldr	r3, [pc, #68]	; (8000848 <setupClock+0x238>)
 8000804:	681b      	ldr	r3, [r3, #0]
 8000806:	4413      	add	r3, r2
 8000808:	4a0f      	ldr	r2, [pc, #60]	; (8000848 <setupClock+0x238>)
 800080a:	6013      	str	r3, [r2, #0]
				if(minute >= 60){
 800080c:	4b0e      	ldr	r3, [pc, #56]	; (8000848 <setupClock+0x238>)
 800080e:	681b      	ldr	r3, [r3, #0]
 8000810:	2b3b      	cmp	r3, #59	; 0x3b
 8000812:	dd5b      	ble.n	80008cc <setupClock+0x2bc>
					minute = 1;
 8000814:	4b0c      	ldr	r3, [pc, #48]	; (8000848 <setupClock+0x238>)
 8000816:	2201      	movs	r2, #1
 8000818:	601a      	str	r2, [r3, #0]
					clearNumberOnClock(hour);
 800081a:	4b0d      	ldr	r3, [pc, #52]	; (8000850 <setupClock+0x240>)
 800081c:	681b      	ldr	r3, [r3, #0]
 800081e:	4618      	mov	r0, r3
 8000820:	f7ff fe9c 	bl	800055c <clearNumberOnClock>
					hour++;
 8000824:	4b0a      	ldr	r3, [pc, #40]	; (8000850 <setupClock+0x240>)
 8000826:	681b      	ldr	r3, [r3, #0]
 8000828:	3301      	adds	r3, #1
 800082a:	4a09      	ldr	r2, [pc, #36]	; (8000850 <setupClock+0x240>)
 800082c:	6013      	str	r3, [r2, #0]
					if(hour >= 12){
 800082e:	4b08      	ldr	r3, [pc, #32]	; (8000850 <setupClock+0x240>)
 8000830:	681b      	ldr	r3, [r3, #0]
 8000832:	2b0b      	cmp	r3, #11
 8000834:	dd4a      	ble.n	80008cc <setupClock+0x2bc>
						hour = 0;
 8000836:	4b06      	ldr	r3, [pc, #24]	; (8000850 <setupClock+0x240>)
 8000838:	2200      	movs	r2, #0
 800083a:	601a      	str	r2, [r3, #0]
			break;
 800083c:	e046      	b.n	80008cc <setupClock+0x2bc>
 800083e:	bf00      	nop
 8000840:	200000e8 	.word	0x200000e8
 8000844:	200000e9 	.word	0x200000e9
 8000848:	200000e0 	.word	0x200000e0
 800084c:	66666667 	.word	0x66666667
 8000850:	200000e4 	.word	0x200000e4
 8000854:	200000dc 	.word	0x200000dc
			else if(second < 0){
 8000858:	4b2d      	ldr	r3, [pc, #180]	; (8000910 <setupClock+0x300>)
 800085a:	681b      	ldr	r3, [r3, #0]
 800085c:	2b00      	cmp	r3, #0
 800085e:	da35      	bge.n	80008cc <setupClock+0x2bc>
				second = 59;
 8000860:	4b2b      	ldr	r3, [pc, #172]	; (8000910 <setupClock+0x300>)
 8000862:	223b      	movs	r2, #59	; 0x3b
 8000864:	601a      	str	r2, [r3, #0]
				clearNumberOnClock(minute / 5);
 8000866:	4b2b      	ldr	r3, [pc, #172]	; (8000914 <setupClock+0x304>)
 8000868:	681b      	ldr	r3, [r3, #0]
 800086a:	4a2b      	ldr	r2, [pc, #172]	; (8000918 <setupClock+0x308>)
 800086c:	fb82 1203 	smull	r1, r2, r2, r3
 8000870:	1052      	asrs	r2, r2, #1
 8000872:	17db      	asrs	r3, r3, #31
 8000874:	1ad3      	subs	r3, r2, r3
 8000876:	4618      	mov	r0, r3
 8000878:	f7ff fe70 	bl	800055c <clearNumberOnClock>
				minute+=step*5;
 800087c:	687a      	ldr	r2, [r7, #4]
 800087e:	4613      	mov	r3, r2
 8000880:	009b      	lsls	r3, r3, #2
 8000882:	441a      	add	r2, r3
 8000884:	4b23      	ldr	r3, [pc, #140]	; (8000914 <setupClock+0x304>)
 8000886:	681b      	ldr	r3, [r3, #0]
 8000888:	4413      	add	r3, r2
 800088a:	4a22      	ldr	r2, [pc, #136]	; (8000914 <setupClock+0x304>)
 800088c:	6013      	str	r3, [r2, #0]
				if(minute <= 0){
 800088e:	4b21      	ldr	r3, [pc, #132]	; (8000914 <setupClock+0x304>)
 8000890:	681b      	ldr	r3, [r3, #0]
 8000892:	2b00      	cmp	r3, #0
 8000894:	dc1a      	bgt.n	80008cc <setupClock+0x2bc>
					minute = 59;
 8000896:	4b1f      	ldr	r3, [pc, #124]	; (8000914 <setupClock+0x304>)
 8000898:	223b      	movs	r2, #59	; 0x3b
 800089a:	601a      	str	r2, [r3, #0]
					clearNumberOnClock(hour);
 800089c:	4b1f      	ldr	r3, [pc, #124]	; (800091c <setupClock+0x30c>)
 800089e:	681b      	ldr	r3, [r3, #0]
 80008a0:	4618      	mov	r0, r3
 80008a2:	f7ff fe5b 	bl	800055c <clearNumberOnClock>
					hour--;
 80008a6:	4b1d      	ldr	r3, [pc, #116]	; (800091c <setupClock+0x30c>)
 80008a8:	681b      	ldr	r3, [r3, #0]
 80008aa:	3b01      	subs	r3, #1
 80008ac:	4a1b      	ldr	r2, [pc, #108]	; (800091c <setupClock+0x30c>)
 80008ae:	6013      	str	r3, [r2, #0]
					if(hour < 0){
 80008b0:	4b1a      	ldr	r3, [pc, #104]	; (800091c <setupClock+0x30c>)
 80008b2:	681b      	ldr	r3, [r3, #0]
 80008b4:	2b00      	cmp	r3, #0
 80008b6:	da09      	bge.n	80008cc <setupClock+0x2bc>
						hour = 11;
 80008b8:	4b18      	ldr	r3, [pc, #96]	; (800091c <setupClock+0x30c>)
 80008ba:	220b      	movs	r2, #11
 80008bc:	601a      	str	r2, [r3, #0]
			break;
 80008be:	e005      	b.n	80008cc <setupClock+0x2bc>
			break;
 80008c0:	bf00      	nop
 80008c2:	e004      	b.n	80008ce <setupClock+0x2be>
			break;
 80008c4:	bf00      	nop
 80008c6:	e002      	b.n	80008ce <setupClock+0x2be>
			break;
 80008c8:	bf00      	nop
 80008ca:	e000      	b.n	80008ce <setupClock+0x2be>
			break;
 80008cc:	bf00      	nop
	}
	setNumberOnClock(hour);
 80008ce:	4b13      	ldr	r3, [pc, #76]	; (800091c <setupClock+0x30c>)
 80008d0:	681b      	ldr	r3, [r3, #0]
 80008d2:	4618      	mov	r0, r3
 80008d4:	f7ff fe2a 	bl	800052c <setNumberOnClock>
	setNumberOnClock(minute / 5);
 80008d8:	4b0e      	ldr	r3, [pc, #56]	; (8000914 <setupClock+0x304>)
 80008da:	681b      	ldr	r3, [r3, #0]
 80008dc:	4a0e      	ldr	r2, [pc, #56]	; (8000918 <setupClock+0x308>)
 80008de:	fb82 1203 	smull	r1, r2, r2, r3
 80008e2:	1052      	asrs	r2, r2, #1
 80008e4:	17db      	asrs	r3, r3, #31
 80008e6:	1ad3      	subs	r3, r2, r3
 80008e8:	4618      	mov	r0, r3
 80008ea:	f7ff fe1f 	bl	800052c <setNumberOnClock>
	setNumberOnClock(second / 5);
 80008ee:	4b08      	ldr	r3, [pc, #32]	; (8000910 <setupClock+0x300>)
 80008f0:	681b      	ldr	r3, [r3, #0]
 80008f2:	4a09      	ldr	r2, [pc, #36]	; (8000918 <setupClock+0x308>)
 80008f4:	fb82 1203 	smull	r1, r2, r2, r3
 80008f8:	1052      	asrs	r2, r2, #1
 80008fa:	17db      	asrs	r3, r3, #31
 80008fc:	1ad3      	subs	r3, r2, r3
 80008fe:	4618      	mov	r0, r3
 8000900:	f7ff fe14 	bl	800052c <setNumberOnClock>
 8000904:	e000      	b.n	8000908 <setupClock+0x2f8>
	if(currentState == NORMAL_STATE) return;
 8000906:	bf00      	nop
}
 8000908:	3708      	adds	r7, #8
 800090a:	46bd      	mov	sp, r7
 800090c:	bd80      	pop	{r7, pc}
 800090e:	bf00      	nop
 8000910:	200000dc 	.word	0x200000dc
 8000914:	200000e0 	.word	0x200000e0
 8000918:	66666667 	.word	0x66666667
 800091c:	200000e4 	.word	0x200000e4

08000920 <checkButtonClock>:
// ====== CHECK BUTTON FUNCTION ======
void checkButtonClock(){
 8000920:	b580      	push	{r7, lr}
 8000922:	af00      	add	r7, sp, #0
	if(isButtonLongPress(0)){
 8000924:	2000      	movs	r0, #0
 8000926:	f7ff fc2b 	bl	8000180 <isButtonLongPress>
 800092a:	4603      	mov	r3, r0
 800092c:	2b00      	cmp	r3, #0
 800092e:	d00c      	beq.n	800094a <checkButtonClock+0x2a>
		currentState = 1 - currentState;
 8000930:	4b23      	ldr	r3, [pc, #140]	; (80009c0 <checkButtonClock+0xa0>)
 8000932:	781b      	ldrb	r3, [r3, #0]
 8000934:	f1c3 0301 	rsb	r3, r3, #1
 8000938:	b2da      	uxtb	r2, r3
 800093a:	4b21      	ldr	r3, [pc, #132]	; (80009c0 <checkButtonClock+0xa0>)
 800093c:	701a      	strb	r2, [r3, #0]
		if(currentState == CHANGE_STATE){
 800093e:	4b20      	ldr	r3, [pc, #128]	; (80009c0 <checkButtonClock+0xa0>)
 8000940:	781b      	ldrb	r3, [r3, #0]
 8000942:	2b01      	cmp	r3, #1
 8000944:	d101      	bne.n	800094a <checkButtonClock+0x2a>
			changeLedMode();
 8000946:	f7ff fd49 	bl	80003dc <changeLedMode>
		}
	}
	if(isButtonPress(0)){
 800094a:	2000      	movs	r0, #0
 800094c:	f7ff fbfe 	bl	800014c <isButtonPress>
 8000950:	4603      	mov	r3, r0
 8000952:	2b00      	cmp	r3, #0
 8000954:	d019      	beq.n	800098a <checkButtonClock+0x6a>
		if(currentState == CHANGE_STATE){
 8000956:	4b1a      	ldr	r3, [pc, #104]	; (80009c0 <checkButtonClock+0xa0>)
 8000958:	781b      	ldrb	r3, [r3, #0]
 800095a:	2b01      	cmp	r3, #1
 800095c:	d12d      	bne.n	80009ba <checkButtonClock+0x9a>
			currentMode++;
 800095e:	4b19      	ldr	r3, [pc, #100]	; (80009c4 <checkButtonClock+0xa4>)
 8000960:	781b      	ldrb	r3, [r3, #0]
 8000962:	3301      	adds	r3, #1
 8000964:	b2da      	uxtb	r2, r3
 8000966:	4b17      	ldr	r3, [pc, #92]	; (80009c4 <checkButtonClock+0xa4>)
 8000968:	701a      	strb	r2, [r3, #0]
			currentMode %= 3;
 800096a:	4b16      	ldr	r3, [pc, #88]	; (80009c4 <checkButtonClock+0xa4>)
 800096c:	781a      	ldrb	r2, [r3, #0]
 800096e:	4b16      	ldr	r3, [pc, #88]	; (80009c8 <checkButtonClock+0xa8>)
 8000970:	fba3 1302 	umull	r1, r3, r3, r2
 8000974:	0859      	lsrs	r1, r3, #1
 8000976:	460b      	mov	r3, r1
 8000978:	005b      	lsls	r3, r3, #1
 800097a:	440b      	add	r3, r1
 800097c:	1ad3      	subs	r3, r2, r3
 800097e:	b2da      	uxtb	r2, r3
 8000980:	4b10      	ldr	r3, [pc, #64]	; (80009c4 <checkButtonClock+0xa4>)
 8000982:	701a      	strb	r2, [r3, #0]
			changeLedMode();
 8000984:	f7ff fd2a 	bl	80003dc <changeLedMode>
		setupClock(_step);
	}
	else if(isButtonPress(2)){
		setupClock(-_step);
	}
}
 8000988:	e017      	b.n	80009ba <checkButtonClock+0x9a>
	else if(isButtonPress(1)){
 800098a:	2001      	movs	r0, #1
 800098c:	f7ff fbde 	bl	800014c <isButtonPress>
 8000990:	4603      	mov	r3, r0
 8000992:	2b00      	cmp	r3, #0
 8000994:	d005      	beq.n	80009a2 <checkButtonClock+0x82>
		setupClock(_step);
 8000996:	4b0d      	ldr	r3, [pc, #52]	; (80009cc <checkButtonClock+0xac>)
 8000998:	681b      	ldr	r3, [r3, #0]
 800099a:	4618      	mov	r0, r3
 800099c:	f7ff fe38 	bl	8000610 <setupClock>
}
 80009a0:	e00b      	b.n	80009ba <checkButtonClock+0x9a>
	else if(isButtonPress(2)){
 80009a2:	2002      	movs	r0, #2
 80009a4:	f7ff fbd2 	bl	800014c <isButtonPress>
 80009a8:	4603      	mov	r3, r0
 80009aa:	2b00      	cmp	r3, #0
 80009ac:	d005      	beq.n	80009ba <checkButtonClock+0x9a>
		setupClock(-_step);
 80009ae:	4b07      	ldr	r3, [pc, #28]	; (80009cc <checkButtonClock+0xac>)
 80009b0:	681b      	ldr	r3, [r3, #0]
 80009b2:	425b      	negs	r3, r3
 80009b4:	4618      	mov	r0, r3
 80009b6:	f7ff fe2b 	bl	8000610 <setupClock>
}
 80009ba:	bf00      	nop
 80009bc:	bd80      	pop	{r7, pc}
 80009be:	bf00      	nop
 80009c0:	200000e8 	.word	0x200000e8
 80009c4:	200000e9 	.word	0x200000e9
 80009c8:	aaaaaaab 	.word	0xaaaaaaab
 80009cc:	2000005c 	.word	0x2000005c

080009d0 <fsm_clock>:
// ======= MAIN FSM =======
void fsm_clock(){
 80009d0:	b580      	push	{r7, lr}
 80009d2:	af00      	add	r7, sp, #0
	if(currentState == CHANGE_STATE) return;
 80009d4:	4b41      	ldr	r3, [pc, #260]	; (8000adc <fsm_clock+0x10c>)
 80009d6:	781b      	ldrb	r3, [r3, #0]
 80009d8:	2b01      	cmp	r3, #1
 80009da:	d07d      	beq.n	8000ad8 <fsm_clock+0x108>
	offAllLedMode();
 80009dc:	f7ff fce6 	bl	80003ac <offAllLedMode>
	currentMode = CHANGE_HOUR;
 80009e0:	4b3f      	ldr	r3, [pc, #252]	; (8000ae0 <fsm_clock+0x110>)
 80009e2:	2200      	movs	r2, #0
 80009e4:	701a      	strb	r2, [r3, #0]
	if (second/5 != minute/5 && second/5 != hour)
 80009e6:	4b3f      	ldr	r3, [pc, #252]	; (8000ae4 <fsm_clock+0x114>)
 80009e8:	681b      	ldr	r3, [r3, #0]
 80009ea:	4a3f      	ldr	r2, [pc, #252]	; (8000ae8 <fsm_clock+0x118>)
 80009ec:	fb82 1203 	smull	r1, r2, r2, r3
 80009f0:	1052      	asrs	r2, r2, #1
 80009f2:	17db      	asrs	r3, r3, #31
 80009f4:	1ad2      	subs	r2, r2, r3
 80009f6:	4b3d      	ldr	r3, [pc, #244]	; (8000aec <fsm_clock+0x11c>)
 80009f8:	681b      	ldr	r3, [r3, #0]
 80009fa:	493b      	ldr	r1, [pc, #236]	; (8000ae8 <fsm_clock+0x118>)
 80009fc:	fb81 0103 	smull	r0, r1, r1, r3
 8000a00:	1049      	asrs	r1, r1, #1
 8000a02:	17db      	asrs	r3, r3, #31
 8000a04:	1acb      	subs	r3, r1, r3
 8000a06:	429a      	cmp	r2, r3
 8000a08:	d016      	beq.n	8000a38 <fsm_clock+0x68>
 8000a0a:	4b36      	ldr	r3, [pc, #216]	; (8000ae4 <fsm_clock+0x114>)
 8000a0c:	681b      	ldr	r3, [r3, #0]
 8000a0e:	4a36      	ldr	r2, [pc, #216]	; (8000ae8 <fsm_clock+0x118>)
 8000a10:	fb82 1203 	smull	r1, r2, r2, r3
 8000a14:	1052      	asrs	r2, r2, #1
 8000a16:	17db      	asrs	r3, r3, #31
 8000a18:	1ad2      	subs	r2, r2, r3
 8000a1a:	4b35      	ldr	r3, [pc, #212]	; (8000af0 <fsm_clock+0x120>)
 8000a1c:	681b      	ldr	r3, [r3, #0]
 8000a1e:	429a      	cmp	r2, r3
 8000a20:	d00a      	beq.n	8000a38 <fsm_clock+0x68>
	{
	  clearNumberOnClock(second/5);
 8000a22:	4b30      	ldr	r3, [pc, #192]	; (8000ae4 <fsm_clock+0x114>)
 8000a24:	681b      	ldr	r3, [r3, #0]
 8000a26:	4a30      	ldr	r2, [pc, #192]	; (8000ae8 <fsm_clock+0x118>)
 8000a28:	fb82 1203 	smull	r1, r2, r2, r3
 8000a2c:	1052      	asrs	r2, r2, #1
 8000a2e:	17db      	asrs	r3, r3, #31
 8000a30:	1ad3      	subs	r3, r2, r3
 8000a32:	4618      	mov	r0, r3
 8000a34:	f7ff fd92 	bl	800055c <clearNumberOnClock>
	}
	second++;
 8000a38:	4b2a      	ldr	r3, [pc, #168]	; (8000ae4 <fsm_clock+0x114>)
 8000a3a:	681b      	ldr	r3, [r3, #0]
 8000a3c:	3301      	adds	r3, #1
 8000a3e:	4a29      	ldr	r2, [pc, #164]	; (8000ae4 <fsm_clock+0x114>)
 8000a40:	6013      	str	r3, [r2, #0]
	if (second >= 60)
 8000a42:	4b28      	ldr	r3, [pc, #160]	; (8000ae4 <fsm_clock+0x114>)
 8000a44:	681b      	ldr	r3, [r3, #0]
 8000a46:	2b3b      	cmp	r3, #59	; 0x3b
 8000a48:	dd12      	ble.n	8000a70 <fsm_clock+0xa0>
	{
	  second = 0;
 8000a4a:	4b26      	ldr	r3, [pc, #152]	; (8000ae4 <fsm_clock+0x114>)
 8000a4c:	2200      	movs	r2, #0
 8000a4e:	601a      	str	r2, [r3, #0]
	  clearNumberOnClock(minute/5);
 8000a50:	4b26      	ldr	r3, [pc, #152]	; (8000aec <fsm_clock+0x11c>)
 8000a52:	681b      	ldr	r3, [r3, #0]
 8000a54:	4a24      	ldr	r2, [pc, #144]	; (8000ae8 <fsm_clock+0x118>)
 8000a56:	fb82 1203 	smull	r1, r2, r2, r3
 8000a5a:	1052      	asrs	r2, r2, #1
 8000a5c:	17db      	asrs	r3, r3, #31
 8000a5e:	1ad3      	subs	r3, r2, r3
 8000a60:	4618      	mov	r0, r3
 8000a62:	f7ff fd7b 	bl	800055c <clearNumberOnClock>
	  minute+=5;
 8000a66:	4b21      	ldr	r3, [pc, #132]	; (8000aec <fsm_clock+0x11c>)
 8000a68:	681b      	ldr	r3, [r3, #0]
 8000a6a:	3305      	adds	r3, #5
 8000a6c:	4a1f      	ldr	r2, [pc, #124]	; (8000aec <fsm_clock+0x11c>)
 8000a6e:	6013      	str	r3, [r2, #0]
	}
	if (minute >= 60)
 8000a70:	4b1e      	ldr	r3, [pc, #120]	; (8000aec <fsm_clock+0x11c>)
 8000a72:	681b      	ldr	r3, [r3, #0]
 8000a74:	2b3b      	cmp	r3, #59	; 0x3b
 8000a76:	dd0c      	ble.n	8000a92 <fsm_clock+0xc2>
	{
	  minute = 0;
 8000a78:	4b1c      	ldr	r3, [pc, #112]	; (8000aec <fsm_clock+0x11c>)
 8000a7a:	2200      	movs	r2, #0
 8000a7c:	601a      	str	r2, [r3, #0]
	  clearNumberOnClock(hour);
 8000a7e:	4b1c      	ldr	r3, [pc, #112]	; (8000af0 <fsm_clock+0x120>)
 8000a80:	681b      	ldr	r3, [r3, #0]
 8000a82:	4618      	mov	r0, r3
 8000a84:	f7ff fd6a 	bl	800055c <clearNumberOnClock>
	  hour+=1;
 8000a88:	4b19      	ldr	r3, [pc, #100]	; (8000af0 <fsm_clock+0x120>)
 8000a8a:	681b      	ldr	r3, [r3, #0]
 8000a8c:	3301      	adds	r3, #1
 8000a8e:	4a18      	ldr	r2, [pc, #96]	; (8000af0 <fsm_clock+0x120>)
 8000a90:	6013      	str	r3, [r2, #0]
	}
	if (hour >= 12)
 8000a92:	4b17      	ldr	r3, [pc, #92]	; (8000af0 <fsm_clock+0x120>)
 8000a94:	681b      	ldr	r3, [r3, #0]
 8000a96:	2b0b      	cmp	r3, #11
 8000a98:	dd02      	ble.n	8000aa0 <fsm_clock+0xd0>
	  hour = 0;
 8000a9a:	4b15      	ldr	r3, [pc, #84]	; (8000af0 <fsm_clock+0x120>)
 8000a9c:	2200      	movs	r2, #0
 8000a9e:	601a      	str	r2, [r3, #0]
	setNumberOnClock(hour);
 8000aa0:	4b13      	ldr	r3, [pc, #76]	; (8000af0 <fsm_clock+0x120>)
 8000aa2:	681b      	ldr	r3, [r3, #0]
 8000aa4:	4618      	mov	r0, r3
 8000aa6:	f7ff fd41 	bl	800052c <setNumberOnClock>
	setNumberOnClock(minute/5);
 8000aaa:	4b10      	ldr	r3, [pc, #64]	; (8000aec <fsm_clock+0x11c>)
 8000aac:	681b      	ldr	r3, [r3, #0]
 8000aae:	4a0e      	ldr	r2, [pc, #56]	; (8000ae8 <fsm_clock+0x118>)
 8000ab0:	fb82 1203 	smull	r1, r2, r2, r3
 8000ab4:	1052      	asrs	r2, r2, #1
 8000ab6:	17db      	asrs	r3, r3, #31
 8000ab8:	1ad3      	subs	r3, r2, r3
 8000aba:	4618      	mov	r0, r3
 8000abc:	f7ff fd36 	bl	800052c <setNumberOnClock>
	setNumberOnClock(second/5);
 8000ac0:	4b08      	ldr	r3, [pc, #32]	; (8000ae4 <fsm_clock+0x114>)
 8000ac2:	681b      	ldr	r3, [r3, #0]
 8000ac4:	4a08      	ldr	r2, [pc, #32]	; (8000ae8 <fsm_clock+0x118>)
 8000ac6:	fb82 1203 	smull	r1, r2, r2, r3
 8000aca:	1052      	asrs	r2, r2, #1
 8000acc:	17db      	asrs	r3, r3, #31
 8000ace:	1ad3      	subs	r3, r2, r3
 8000ad0:	4618      	mov	r0, r3
 8000ad2:	f7ff fd2b 	bl	800052c <setNumberOnClock>
 8000ad6:	e000      	b.n	8000ada <fsm_clock+0x10a>
	if(currentState == CHANGE_STATE) return;
 8000ad8:	bf00      	nop
}
 8000ada:	bd80      	pop	{r7, pc}
 8000adc:	200000e8 	.word	0x200000e8
 8000ae0:	200000e9 	.word	0x200000e9
 8000ae4:	200000dc 	.word	0x200000dc
 8000ae8:	66666667 	.word	0x66666667
 8000aec:	200000e0 	.word	0x200000e0
 8000af0:	200000e4 	.word	0x200000e4

08000af4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000af4:	b580      	push	{r7, lr}
 8000af6:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000af8:	f000 fa7c 	bl	8000ff4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000afc:	f000 f822 	bl	8000b44 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000b00:	f000 f8a8 	bl	8000c54 <MX_GPIO_Init>
  MX_TIM2_Init();
 8000b04:	f000 f85a 	bl	8000bbc <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8000b08:	480c      	ldr	r0, [pc, #48]	; (8000b3c <main+0x48>)
 8000b0a:	f001 f9c5 	bl	8001e98 <HAL_TIM_Base_Start_IT>
  setTimer1(100);
 8000b0e:	2064      	movs	r0, #100	; 0x64
 8000b10:	f000 f9d0 	bl	8000eb4 <setTimer1>
  setTimer2(10);
 8000b14:	200a      	movs	r0, #10
 8000b16:	f000 f9e9 	bl	8000eec <setTimer2>
  init_clock(31, 59, 11);
 8000b1a:	220b      	movs	r2, #11
 8000b1c:	213b      	movs	r1, #59	; 0x3b
 8000b1e:	201f      	movs	r0, #31
 8000b20:	f7ff fd34 	bl	800058c <init_clock>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  if(timer1_flag == 1){
 8000b24:	4b06      	ldr	r3, [pc, #24]	; (8000b40 <main+0x4c>)
 8000b26:	681b      	ldr	r3, [r3, #0]
 8000b28:	2b01      	cmp	r3, #1
 8000b2a:	d104      	bne.n	8000b36 <main+0x42>
		  fsm_clock();
 8000b2c:	f7ff ff50 	bl	80009d0 <fsm_clock>
		  setTimer1(100);
 8000b30:	2064      	movs	r0, #100	; 0x64
 8000b32:	f000 f9bf 	bl	8000eb4 <setTimer1>
	  }
	  checkButtonClock();
 8000b36:	f7ff fef3 	bl	8000920 <checkButtonClock>
	  if(timer1_flag == 1){
 8000b3a:	e7f3      	b.n	8000b24 <main+0x30>
 8000b3c:	200000ec 	.word	0x200000ec
 8000b40:	20000134 	.word	0x20000134

08000b44 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000b44:	b580      	push	{r7, lr}
 8000b46:	b090      	sub	sp, #64	; 0x40
 8000b48:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000b4a:	f107 0318 	add.w	r3, r7, #24
 8000b4e:	2228      	movs	r2, #40	; 0x28
 8000b50:	2100      	movs	r1, #0
 8000b52:	4618      	mov	r0, r3
 8000b54:	f001 fd4e 	bl	80025f4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000b58:	1d3b      	adds	r3, r7, #4
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	601a      	str	r2, [r3, #0]
 8000b5e:	605a      	str	r2, [r3, #4]
 8000b60:	609a      	str	r2, [r3, #8]
 8000b62:	60da      	str	r2, [r3, #12]
 8000b64:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000b66:	2302      	movs	r3, #2
 8000b68:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000b6a:	2301      	movs	r3, #1
 8000b6c:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000b6e:	2310      	movs	r3, #16
 8000b70:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000b72:	2300      	movs	r3, #0
 8000b74:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b76:	f107 0318 	add.w	r3, r7, #24
 8000b7a:	4618      	mov	r0, r3
 8000b7c:	f000 fd5e 	bl	800163c <HAL_RCC_OscConfig>
 8000b80:	4603      	mov	r3, r0
 8000b82:	2b00      	cmp	r3, #0
 8000b84:	d001      	beq.n	8000b8a <SystemClock_Config+0x46>
  {
    Error_Handler();
 8000b86:	f000 f901 	bl	8000d8c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b8a:	230f      	movs	r3, #15
 8000b8c:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000b8e:	2300      	movs	r3, #0
 8000b90:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000b92:	2300      	movs	r3, #0
 8000b94:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000b96:	2300      	movs	r3, #0
 8000b98:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000b9a:	2300      	movs	r3, #0
 8000b9c:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000b9e:	1d3b      	adds	r3, r7, #4
 8000ba0:	2100      	movs	r1, #0
 8000ba2:	4618      	mov	r0, r3
 8000ba4:	f000 ffcc 	bl	8001b40 <HAL_RCC_ClockConfig>
 8000ba8:	4603      	mov	r3, r0
 8000baa:	2b00      	cmp	r3, #0
 8000bac:	d001      	beq.n	8000bb2 <SystemClock_Config+0x6e>
  {
    Error_Handler();
 8000bae:	f000 f8ed 	bl	8000d8c <Error_Handler>
  }
}
 8000bb2:	bf00      	nop
 8000bb4:	3740      	adds	r7, #64	; 0x40
 8000bb6:	46bd      	mov	sp, r7
 8000bb8:	bd80      	pop	{r7, pc}
	...

08000bbc <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000bbc:	b580      	push	{r7, lr}
 8000bbe:	b086      	sub	sp, #24
 8000bc0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000bc2:	f107 0308 	add.w	r3, r7, #8
 8000bc6:	2200      	movs	r2, #0
 8000bc8:	601a      	str	r2, [r3, #0]
 8000bca:	605a      	str	r2, [r3, #4]
 8000bcc:	609a      	str	r2, [r3, #8]
 8000bce:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000bd0:	463b      	mov	r3, r7
 8000bd2:	2200      	movs	r2, #0
 8000bd4:	601a      	str	r2, [r3, #0]
 8000bd6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000bd8:	4b1d      	ldr	r3, [pc, #116]	; (8000c50 <MX_TIM2_Init+0x94>)
 8000bda:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000bde:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7999;
 8000be0:	4b1b      	ldr	r3, [pc, #108]	; (8000c50 <MX_TIM2_Init+0x94>)
 8000be2:	f641 723f 	movw	r2, #7999	; 0x1f3f
 8000be6:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000be8:	4b19      	ldr	r3, [pc, #100]	; (8000c50 <MX_TIM2_Init+0x94>)
 8000bea:	2200      	movs	r2, #0
 8000bec:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9;
 8000bee:	4b18      	ldr	r3, [pc, #96]	; (8000c50 <MX_TIM2_Init+0x94>)
 8000bf0:	2209      	movs	r2, #9
 8000bf2:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000bf4:	4b16      	ldr	r3, [pc, #88]	; (8000c50 <MX_TIM2_Init+0x94>)
 8000bf6:	2200      	movs	r2, #0
 8000bf8:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000bfa:	4b15      	ldr	r3, [pc, #84]	; (8000c50 <MX_TIM2_Init+0x94>)
 8000bfc:	2200      	movs	r2, #0
 8000bfe:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000c00:	4813      	ldr	r0, [pc, #76]	; (8000c50 <MX_TIM2_Init+0x94>)
 8000c02:	f001 f8f9 	bl	8001df8 <HAL_TIM_Base_Init>
 8000c06:	4603      	mov	r3, r0
 8000c08:	2b00      	cmp	r3, #0
 8000c0a:	d001      	beq.n	8000c10 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8000c0c:	f000 f8be 	bl	8000d8c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000c10:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000c14:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000c16:	f107 0308 	add.w	r3, r7, #8
 8000c1a:	4619      	mov	r1, r3
 8000c1c:	480c      	ldr	r0, [pc, #48]	; (8000c50 <MX_TIM2_Init+0x94>)
 8000c1e:	f001 fa95 	bl	800214c <HAL_TIM_ConfigClockSource>
 8000c22:	4603      	mov	r3, r0
 8000c24:	2b00      	cmp	r3, #0
 8000c26:	d001      	beq.n	8000c2c <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8000c28:	f000 f8b0 	bl	8000d8c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000c2c:	2300      	movs	r3, #0
 8000c2e:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000c30:	2300      	movs	r3, #0
 8000c32:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000c34:	463b      	mov	r3, r7
 8000c36:	4619      	mov	r1, r3
 8000c38:	4805      	ldr	r0, [pc, #20]	; (8000c50 <MX_TIM2_Init+0x94>)
 8000c3a:	f001 fc6b 	bl	8002514 <HAL_TIMEx_MasterConfigSynchronization>
 8000c3e:	4603      	mov	r3, r0
 8000c40:	2b00      	cmp	r3, #0
 8000c42:	d001      	beq.n	8000c48 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8000c44:	f000 f8a2 	bl	8000d8c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000c48:	bf00      	nop
 8000c4a:	3718      	adds	r7, #24
 8000c4c:	46bd      	mov	sp, r7
 8000c4e:	bd80      	pop	{r7, pc}
 8000c50:	200000ec 	.word	0x200000ec

08000c54 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000c54:	b580      	push	{r7, lr}
 8000c56:	b088      	sub	sp, #32
 8000c58:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c5a:	f107 0310 	add.w	r3, r7, #16
 8000c5e:	2200      	movs	r2, #0
 8000c60:	601a      	str	r2, [r3, #0]
 8000c62:	605a      	str	r2, [r3, #4]
 8000c64:	609a      	str	r2, [r3, #8]
 8000c66:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c68:	4b3e      	ldr	r3, [pc, #248]	; (8000d64 <MX_GPIO_Init+0x110>)
 8000c6a:	699b      	ldr	r3, [r3, #24]
 8000c6c:	4a3d      	ldr	r2, [pc, #244]	; (8000d64 <MX_GPIO_Init+0x110>)
 8000c6e:	f043 0308 	orr.w	r3, r3, #8
 8000c72:	6193      	str	r3, [r2, #24]
 8000c74:	4b3b      	ldr	r3, [pc, #236]	; (8000d64 <MX_GPIO_Init+0x110>)
 8000c76:	699b      	ldr	r3, [r3, #24]
 8000c78:	f003 0308 	and.w	r3, r3, #8
 8000c7c:	60fb      	str	r3, [r7, #12]
 8000c7e:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000c80:	4b38      	ldr	r3, [pc, #224]	; (8000d64 <MX_GPIO_Init+0x110>)
 8000c82:	699b      	ldr	r3, [r3, #24]
 8000c84:	4a37      	ldr	r2, [pc, #220]	; (8000d64 <MX_GPIO_Init+0x110>)
 8000c86:	f043 0304 	orr.w	r3, r3, #4
 8000c8a:	6193      	str	r3, [r2, #24]
 8000c8c:	4b35      	ldr	r3, [pc, #212]	; (8000d64 <MX_GPIO_Init+0x110>)
 8000c8e:	699b      	ldr	r3, [r3, #24]
 8000c90:	f003 0304 	and.w	r3, r3, #4
 8000c94:	60bb      	str	r3, [r7, #8]
 8000c96:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000c98:	4b32      	ldr	r3, [pc, #200]	; (8000d64 <MX_GPIO_Init+0x110>)
 8000c9a:	699b      	ldr	r3, [r3, #24]
 8000c9c:	4a31      	ldr	r2, [pc, #196]	; (8000d64 <MX_GPIO_Init+0x110>)
 8000c9e:	f043 0310 	orr.w	r3, r3, #16
 8000ca2:	6193      	str	r3, [r2, #24]
 8000ca4:	4b2f      	ldr	r3, [pc, #188]	; (8000d64 <MX_GPIO_Init+0x110>)
 8000ca6:	699b      	ldr	r3, [r3, #24]
 8000ca8:	f003 0310 	and.w	r3, r3, #16
 8000cac:	607b      	str	r3, [r7, #4]
 8000cae:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED2_Pin|LED7_Pin|LED1_Pin|LED8_Pin
 8000cb0:	2200      	movs	r2, #0
 8000cb2:	f240 7171 	movw	r1, #1905	; 0x771
 8000cb6:	482c      	ldr	r0, [pc, #176]	; (8000d68 <MX_GPIO_Init+0x114>)
 8000cb8:	f000 fca7 	bl	800160a <HAL_GPIO_WritePin>
                          |LED11_Pin|MODE1_Pin|LED6_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LED9_Pin|LED5_Pin|LED3_Pin|LED4_Pin
 8000cbc:	2200      	movs	r2, #0
 8000cbe:	f44f 7178 	mov.w	r1, #992	; 0x3e0
 8000cc2:	482a      	ldr	r0, [pc, #168]	; (8000d6c <MX_GPIO_Init+0x118>)
 8000cc4:	f000 fca1 	bl	800160a <HAL_GPIO_WritePin>
                          |LED12_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, MODE2_Pin|MODE3_Pin|LED10_Pin, GPIO_PIN_RESET);
 8000cc8:	2200      	movs	r2, #0
 8000cca:	2183      	movs	r1, #131	; 0x83
 8000ccc:	4828      	ldr	r0, [pc, #160]	; (8000d70 <MX_GPIO_Init+0x11c>)
 8000cce:	f000 fc9c 	bl	800160a <HAL_GPIO_WritePin>

  /*Configure GPIO pins : LED2_Pin LED7_Pin LED1_Pin LED8_Pin
                           LED11_Pin MODE1_Pin LED6_Pin */
  GPIO_InitStruct.Pin = LED2_Pin|LED7_Pin|LED1_Pin|LED8_Pin
 8000cd2:	f240 7371 	movw	r3, #1905	; 0x771
 8000cd6:	613b      	str	r3, [r7, #16]
                          |LED11_Pin|MODE1_Pin|LED6_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000cd8:	2301      	movs	r3, #1
 8000cda:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cdc:	2300      	movs	r3, #0
 8000cde:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ce0:	2302      	movs	r3, #2
 8000ce2:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ce4:	f107 0310 	add.w	r3, r7, #16
 8000ce8:	4619      	mov	r1, r3
 8000cea:	481f      	ldr	r0, [pc, #124]	; (8000d68 <MX_GPIO_Init+0x114>)
 8000cec:	f000 faf2 	bl	80012d4 <HAL_GPIO_Init>

  /*Configure GPIO pin : BUTTON_1_Pin */
  GPIO_InitStruct.Pin = BUTTON_1_Pin;
 8000cf0:	2308      	movs	r3, #8
 8000cf2:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000cf4:	2300      	movs	r3, #0
 8000cf6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000cf8:	2301      	movs	r3, #1
 8000cfa:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(BUTTON_1_GPIO_Port, &GPIO_InitStruct);
 8000cfc:	f107 0310 	add.w	r3, r7, #16
 8000d00:	4619      	mov	r1, r3
 8000d02:	4819      	ldr	r0, [pc, #100]	; (8000d68 <MX_GPIO_Init+0x114>)
 8000d04:	f000 fae6 	bl	80012d4 <HAL_GPIO_Init>

  /*Configure GPIO pins : BUTTON_2_Pin BUTTON_3_Pin */
  GPIO_InitStruct.Pin = BUTTON_2_Pin|BUTTON_3_Pin;
 8000d08:	f240 4304 	movw	r3, #1028	; 0x404
 8000d0c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000d0e:	2300      	movs	r3, #0
 8000d10:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000d12:	2301      	movs	r3, #1
 8000d14:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d16:	f107 0310 	add.w	r3, r7, #16
 8000d1a:	4619      	mov	r1, r3
 8000d1c:	4813      	ldr	r0, [pc, #76]	; (8000d6c <MX_GPIO_Init+0x118>)
 8000d1e:	f000 fad9 	bl	80012d4 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED9_Pin LED5_Pin LED3_Pin LED4_Pin
                           LED12_Pin */
  GPIO_InitStruct.Pin = LED9_Pin|LED5_Pin|LED3_Pin|LED4_Pin
 8000d22:	f44f 7378 	mov.w	r3, #992	; 0x3e0
 8000d26:	613b      	str	r3, [r7, #16]
                          |LED12_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d28:	2301      	movs	r3, #1
 8000d2a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d2c:	2300      	movs	r3, #0
 8000d2e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d30:	2302      	movs	r3, #2
 8000d32:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d34:	f107 0310 	add.w	r3, r7, #16
 8000d38:	4619      	mov	r1, r3
 8000d3a:	480c      	ldr	r0, [pc, #48]	; (8000d6c <MX_GPIO_Init+0x118>)
 8000d3c:	f000 faca 	bl	80012d4 <HAL_GPIO_Init>

  /*Configure GPIO pins : MODE2_Pin MODE3_Pin LED10_Pin */
  GPIO_InitStruct.Pin = MODE2_Pin|MODE3_Pin|LED10_Pin;
 8000d40:	2383      	movs	r3, #131	; 0x83
 8000d42:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d44:	2301      	movs	r3, #1
 8000d46:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d48:	2300      	movs	r3, #0
 8000d4a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d4c:	2302      	movs	r3, #2
 8000d4e:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d50:	f107 0310 	add.w	r3, r7, #16
 8000d54:	4619      	mov	r1, r3
 8000d56:	4806      	ldr	r0, [pc, #24]	; (8000d70 <MX_GPIO_Init+0x11c>)
 8000d58:	f000 fabc 	bl	80012d4 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000d5c:	bf00      	nop
 8000d5e:	3720      	adds	r7, #32
 8000d60:	46bd      	mov	sp, r7
 8000d62:	bd80      	pop	{r7, pc}
 8000d64:	40021000 	.word	0x40021000
 8000d68:	40010c00 	.word	0x40010c00
 8000d6c:	40010800 	.word	0x40010800
 8000d70:	40011000 	.word	0x40011000

08000d74 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim){
 8000d74:	b580      	push	{r7, lr}
 8000d76:	b082      	sub	sp, #8
 8000d78:	af00      	add	r7, sp, #0
 8000d7a:	6078      	str	r0, [r7, #4]
	button_reading();
 8000d7c:	f7ff fa1a 	bl	80001b4 <button_reading>
	timerRun();
 8000d80:	f000 f8d0 	bl	8000f24 <timerRun>

}
 8000d84:	bf00      	nop
 8000d86:	3708      	adds	r7, #8
 8000d88:	46bd      	mov	sp, r7
 8000d8a:	bd80      	pop	{r7, pc}

08000d8c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000d8c:	b480      	push	{r7}
 8000d8e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000d90:	b672      	cpsid	i
}
 8000d92:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000d94:	e7fe      	b.n	8000d94 <Error_Handler+0x8>
	...

08000d98 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000d98:	b480      	push	{r7}
 8000d9a:	b085      	sub	sp, #20
 8000d9c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000d9e:	4b15      	ldr	r3, [pc, #84]	; (8000df4 <HAL_MspInit+0x5c>)
 8000da0:	699b      	ldr	r3, [r3, #24]
 8000da2:	4a14      	ldr	r2, [pc, #80]	; (8000df4 <HAL_MspInit+0x5c>)
 8000da4:	f043 0301 	orr.w	r3, r3, #1
 8000da8:	6193      	str	r3, [r2, #24]
 8000daa:	4b12      	ldr	r3, [pc, #72]	; (8000df4 <HAL_MspInit+0x5c>)
 8000dac:	699b      	ldr	r3, [r3, #24]
 8000dae:	f003 0301 	and.w	r3, r3, #1
 8000db2:	60bb      	str	r3, [r7, #8]
 8000db4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000db6:	4b0f      	ldr	r3, [pc, #60]	; (8000df4 <HAL_MspInit+0x5c>)
 8000db8:	69db      	ldr	r3, [r3, #28]
 8000dba:	4a0e      	ldr	r2, [pc, #56]	; (8000df4 <HAL_MspInit+0x5c>)
 8000dbc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000dc0:	61d3      	str	r3, [r2, #28]
 8000dc2:	4b0c      	ldr	r3, [pc, #48]	; (8000df4 <HAL_MspInit+0x5c>)
 8000dc4:	69db      	ldr	r3, [r3, #28]
 8000dc6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000dca:	607b      	str	r3, [r7, #4]
 8000dcc:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8000dce:	4b0a      	ldr	r3, [pc, #40]	; (8000df8 <HAL_MspInit+0x60>)
 8000dd0:	685b      	ldr	r3, [r3, #4]
 8000dd2:	60fb      	str	r3, [r7, #12]
 8000dd4:	68fb      	ldr	r3, [r7, #12]
 8000dd6:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000dda:	60fb      	str	r3, [r7, #12]
 8000ddc:	68fb      	ldr	r3, [r7, #12]
 8000dde:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000de2:	60fb      	str	r3, [r7, #12]
 8000de4:	4a04      	ldr	r2, [pc, #16]	; (8000df8 <HAL_MspInit+0x60>)
 8000de6:	68fb      	ldr	r3, [r7, #12]
 8000de8:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000dea:	bf00      	nop
 8000dec:	3714      	adds	r7, #20
 8000dee:	46bd      	mov	sp, r7
 8000df0:	bc80      	pop	{r7}
 8000df2:	4770      	bx	lr
 8000df4:	40021000 	.word	0x40021000
 8000df8:	40010000 	.word	0x40010000

08000dfc <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8000dfc:	b580      	push	{r7, lr}
 8000dfe:	b084      	sub	sp, #16
 8000e00:	af00      	add	r7, sp, #0
 8000e02:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8000e04:	687b      	ldr	r3, [r7, #4]
 8000e06:	681b      	ldr	r3, [r3, #0]
 8000e08:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8000e0c:	d113      	bne.n	8000e36 <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8000e0e:	4b0c      	ldr	r3, [pc, #48]	; (8000e40 <HAL_TIM_Base_MspInit+0x44>)
 8000e10:	69db      	ldr	r3, [r3, #28]
 8000e12:	4a0b      	ldr	r2, [pc, #44]	; (8000e40 <HAL_TIM_Base_MspInit+0x44>)
 8000e14:	f043 0301 	orr.w	r3, r3, #1
 8000e18:	61d3      	str	r3, [r2, #28]
 8000e1a:	4b09      	ldr	r3, [pc, #36]	; (8000e40 <HAL_TIM_Base_MspInit+0x44>)
 8000e1c:	69db      	ldr	r3, [r3, #28]
 8000e1e:	f003 0301 	and.w	r3, r3, #1
 8000e22:	60fb      	str	r3, [r7, #12]
 8000e24:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8000e26:	2200      	movs	r2, #0
 8000e28:	2100      	movs	r1, #0
 8000e2a:	201c      	movs	r0, #28
 8000e2c:	f000 fa1b 	bl	8001266 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8000e30:	201c      	movs	r0, #28
 8000e32:	f000 fa34 	bl	800129e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 8000e36:	bf00      	nop
 8000e38:	3710      	adds	r7, #16
 8000e3a:	46bd      	mov	sp, r7
 8000e3c:	bd80      	pop	{r7, pc}
 8000e3e:	bf00      	nop
 8000e40:	40021000 	.word	0x40021000

08000e44 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000e44:	b480      	push	{r7}
 8000e46:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000e48:	e7fe      	b.n	8000e48 <NMI_Handler+0x4>

08000e4a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000e4a:	b480      	push	{r7}
 8000e4c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000e4e:	e7fe      	b.n	8000e4e <HardFault_Handler+0x4>

08000e50 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000e50:	b480      	push	{r7}
 8000e52:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000e54:	e7fe      	b.n	8000e54 <MemManage_Handler+0x4>

08000e56 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000e56:	b480      	push	{r7}
 8000e58:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000e5a:	e7fe      	b.n	8000e5a <BusFault_Handler+0x4>

08000e5c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000e5c:	b480      	push	{r7}
 8000e5e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000e60:	e7fe      	b.n	8000e60 <UsageFault_Handler+0x4>

08000e62 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000e62:	b480      	push	{r7}
 8000e64:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000e66:	bf00      	nop
 8000e68:	46bd      	mov	sp, r7
 8000e6a:	bc80      	pop	{r7}
 8000e6c:	4770      	bx	lr

08000e6e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000e6e:	b480      	push	{r7}
 8000e70:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000e72:	bf00      	nop
 8000e74:	46bd      	mov	sp, r7
 8000e76:	bc80      	pop	{r7}
 8000e78:	4770      	bx	lr

08000e7a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000e7a:	b480      	push	{r7}
 8000e7c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000e7e:	bf00      	nop
 8000e80:	46bd      	mov	sp, r7
 8000e82:	bc80      	pop	{r7}
 8000e84:	4770      	bx	lr

08000e86 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000e86:	b580      	push	{r7, lr}
 8000e88:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000e8a:	f000 f8f9 	bl	8001080 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000e8e:	bf00      	nop
 8000e90:	bd80      	pop	{r7, pc}
	...

08000e94 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8000e94:	b580      	push	{r7, lr}
 8000e96:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8000e98:	4802      	ldr	r0, [pc, #8]	; (8000ea4 <TIM2_IRQHandler+0x10>)
 8000e9a:	f001 f84f 	bl	8001f3c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8000e9e:	bf00      	nop
 8000ea0:	bd80      	pop	{r7, pc}
 8000ea2:	bf00      	nop
 8000ea4:	200000ec 	.word	0x200000ec

08000ea8 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8000ea8:	b480      	push	{r7}
 8000eaa:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000eac:	bf00      	nop
 8000eae:	46bd      	mov	sp, r7
 8000eb0:	bc80      	pop	{r7}
 8000eb2:	4770      	bx	lr

08000eb4 <setTimer1>:

int timer3_flag = 0;
int timer3_duration;


void setTimer1(int duration){
 8000eb4:	b480      	push	{r7}
 8000eb6:	b083      	sub	sp, #12
 8000eb8:	af00      	add	r7, sp, #0
 8000eba:	6078      	str	r0, [r7, #4]
    timer1_duration = duration / TIME_CYCLE;
 8000ebc:	687b      	ldr	r3, [r7, #4]
 8000ebe:	4a08      	ldr	r2, [pc, #32]	; (8000ee0 <setTimer1+0x2c>)
 8000ec0:	fb82 1203 	smull	r1, r2, r2, r3
 8000ec4:	1092      	asrs	r2, r2, #2
 8000ec6:	17db      	asrs	r3, r3, #31
 8000ec8:	1ad3      	subs	r3, r2, r3
 8000eca:	4a06      	ldr	r2, [pc, #24]	; (8000ee4 <setTimer1+0x30>)
 8000ecc:	6013      	str	r3, [r2, #0]
    timer1_flag = 0;
 8000ece:	4b06      	ldr	r3, [pc, #24]	; (8000ee8 <setTimer1+0x34>)
 8000ed0:	2200      	movs	r2, #0
 8000ed2:	601a      	str	r2, [r3, #0]
}
 8000ed4:	bf00      	nop
 8000ed6:	370c      	adds	r7, #12
 8000ed8:	46bd      	mov	sp, r7
 8000eda:	bc80      	pop	{r7}
 8000edc:	4770      	bx	lr
 8000ede:	bf00      	nop
 8000ee0:	66666667 	.word	0x66666667
 8000ee4:	20000138 	.word	0x20000138
 8000ee8:	20000134 	.word	0x20000134

08000eec <setTimer2>:

void setTimer2(int duration){
 8000eec:	b480      	push	{r7}
 8000eee:	b083      	sub	sp, #12
 8000ef0:	af00      	add	r7, sp, #0
 8000ef2:	6078      	str	r0, [r7, #4]
    timer2_duration = duration / TIME_CYCLE;
 8000ef4:	687b      	ldr	r3, [r7, #4]
 8000ef6:	4a08      	ldr	r2, [pc, #32]	; (8000f18 <setTimer2+0x2c>)
 8000ef8:	fb82 1203 	smull	r1, r2, r2, r3
 8000efc:	1092      	asrs	r2, r2, #2
 8000efe:	17db      	asrs	r3, r3, #31
 8000f00:	1ad3      	subs	r3, r2, r3
 8000f02:	4a06      	ldr	r2, [pc, #24]	; (8000f1c <setTimer2+0x30>)
 8000f04:	6013      	str	r3, [r2, #0]
    timer2_flag = 0;
 8000f06:	4b06      	ldr	r3, [pc, #24]	; (8000f20 <setTimer2+0x34>)
 8000f08:	2200      	movs	r2, #0
 8000f0a:	601a      	str	r2, [r3, #0]
}
 8000f0c:	bf00      	nop
 8000f0e:	370c      	adds	r7, #12
 8000f10:	46bd      	mov	sp, r7
 8000f12:	bc80      	pop	{r7}
 8000f14:	4770      	bx	lr
 8000f16:	bf00      	nop
 8000f18:	66666667 	.word	0x66666667
 8000f1c:	20000140 	.word	0x20000140
 8000f20:	2000013c 	.word	0x2000013c

08000f24 <timerRun>:

void setTimer3(int duration){
    timer3_duration = duration / TIME_CYCLE;
    timer3_flag = 0;
}
void timerRun(){
 8000f24:	b480      	push	{r7}
 8000f26:	af00      	add	r7, sp, #0
    if(timer1_duration > 0){
 8000f28:	4b19      	ldr	r3, [pc, #100]	; (8000f90 <timerRun+0x6c>)
 8000f2a:	681b      	ldr	r3, [r3, #0]
 8000f2c:	2b00      	cmp	r3, #0
 8000f2e:	dd0b      	ble.n	8000f48 <timerRun+0x24>
        timer1_duration--;
 8000f30:	4b17      	ldr	r3, [pc, #92]	; (8000f90 <timerRun+0x6c>)
 8000f32:	681b      	ldr	r3, [r3, #0]
 8000f34:	3b01      	subs	r3, #1
 8000f36:	4a16      	ldr	r2, [pc, #88]	; (8000f90 <timerRun+0x6c>)
 8000f38:	6013      	str	r3, [r2, #0]
        if(timer1_duration <= 0){
 8000f3a:	4b15      	ldr	r3, [pc, #84]	; (8000f90 <timerRun+0x6c>)
 8000f3c:	681b      	ldr	r3, [r3, #0]
 8000f3e:	2b00      	cmp	r3, #0
 8000f40:	dc02      	bgt.n	8000f48 <timerRun+0x24>
            timer1_flag = 1;
 8000f42:	4b14      	ldr	r3, [pc, #80]	; (8000f94 <timerRun+0x70>)
 8000f44:	2201      	movs	r2, #1
 8000f46:	601a      	str	r2, [r3, #0]
        }
    }
     if(timer2_duration > 0){
 8000f48:	4b13      	ldr	r3, [pc, #76]	; (8000f98 <timerRun+0x74>)
 8000f4a:	681b      	ldr	r3, [r3, #0]
 8000f4c:	2b00      	cmp	r3, #0
 8000f4e:	dd0b      	ble.n	8000f68 <timerRun+0x44>
        timer2_duration--;
 8000f50:	4b11      	ldr	r3, [pc, #68]	; (8000f98 <timerRun+0x74>)
 8000f52:	681b      	ldr	r3, [r3, #0]
 8000f54:	3b01      	subs	r3, #1
 8000f56:	4a10      	ldr	r2, [pc, #64]	; (8000f98 <timerRun+0x74>)
 8000f58:	6013      	str	r3, [r2, #0]
        if(timer2_duration <= 0){
 8000f5a:	4b0f      	ldr	r3, [pc, #60]	; (8000f98 <timerRun+0x74>)
 8000f5c:	681b      	ldr	r3, [r3, #0]
 8000f5e:	2b00      	cmp	r3, #0
 8000f60:	dc02      	bgt.n	8000f68 <timerRun+0x44>
            timer2_flag = 1;
 8000f62:	4b0e      	ldr	r3, [pc, #56]	; (8000f9c <timerRun+0x78>)
 8000f64:	2201      	movs	r2, #1
 8000f66:	601a      	str	r2, [r3, #0]
            
        }
    }
    if(timer3_duration > 0){
 8000f68:	4b0d      	ldr	r3, [pc, #52]	; (8000fa0 <timerRun+0x7c>)
 8000f6a:	681b      	ldr	r3, [r3, #0]
 8000f6c:	2b00      	cmp	r3, #0
 8000f6e:	dd0b      	ble.n	8000f88 <timerRun+0x64>
        timer3_duration--;
 8000f70:	4b0b      	ldr	r3, [pc, #44]	; (8000fa0 <timerRun+0x7c>)
 8000f72:	681b      	ldr	r3, [r3, #0]
 8000f74:	3b01      	subs	r3, #1
 8000f76:	4a0a      	ldr	r2, [pc, #40]	; (8000fa0 <timerRun+0x7c>)
 8000f78:	6013      	str	r3, [r2, #0]
        if(timer3_duration <= 0){
 8000f7a:	4b09      	ldr	r3, [pc, #36]	; (8000fa0 <timerRun+0x7c>)
 8000f7c:	681b      	ldr	r3, [r3, #0]
 8000f7e:	2b00      	cmp	r3, #0
 8000f80:	dc02      	bgt.n	8000f88 <timerRun+0x64>
            timer3_flag = 1;
 8000f82:	4b08      	ldr	r3, [pc, #32]	; (8000fa4 <timerRun+0x80>)
 8000f84:	2201      	movs	r2, #1
 8000f86:	601a      	str	r2, [r3, #0]
            
        }
    }
}
 8000f88:	bf00      	nop
 8000f8a:	46bd      	mov	sp, r7
 8000f8c:	bc80      	pop	{r7}
 8000f8e:	4770      	bx	lr
 8000f90:	20000138 	.word	0x20000138
 8000f94:	20000134 	.word	0x20000134
 8000f98:	20000140 	.word	0x20000140
 8000f9c:	2000013c 	.word	0x2000013c
 8000fa0:	20000148 	.word	0x20000148
 8000fa4:	20000144 	.word	0x20000144

08000fa8 <Reset_Handler>:
 8000fa8:	f7ff ff7e 	bl	8000ea8 <SystemInit>
 8000fac:	480b      	ldr	r0, [pc, #44]	; (8000fdc <LoopFillZerobss+0xe>)
 8000fae:	490c      	ldr	r1, [pc, #48]	; (8000fe0 <LoopFillZerobss+0x12>)
 8000fb0:	4a0c      	ldr	r2, [pc, #48]	; (8000fe4 <LoopFillZerobss+0x16>)
 8000fb2:	2300      	movs	r3, #0
 8000fb4:	e002      	b.n	8000fbc <LoopCopyDataInit>

08000fb6 <CopyDataInit>:
 8000fb6:	58d4      	ldr	r4, [r2, r3]
 8000fb8:	50c4      	str	r4, [r0, r3]
 8000fba:	3304      	adds	r3, #4

08000fbc <LoopCopyDataInit>:
 8000fbc:	18c4      	adds	r4, r0, r3
 8000fbe:	428c      	cmp	r4, r1
 8000fc0:	d3f9      	bcc.n	8000fb6 <CopyDataInit>
 8000fc2:	4a09      	ldr	r2, [pc, #36]	; (8000fe8 <LoopFillZerobss+0x1a>)
 8000fc4:	4c09      	ldr	r4, [pc, #36]	; (8000fec <LoopFillZerobss+0x1e>)
 8000fc6:	2300      	movs	r3, #0
 8000fc8:	e001      	b.n	8000fce <LoopFillZerobss>

08000fca <FillZerobss>:
 8000fca:	6013      	str	r3, [r2, #0]
 8000fcc:	3204      	adds	r2, #4

08000fce <LoopFillZerobss>:
 8000fce:	42a2      	cmp	r2, r4
 8000fd0:	d3fb      	bcc.n	8000fca <FillZerobss>
 8000fd2:	f001 fb17 	bl	8002604 <__libc_init_array>
 8000fd6:	f7ff fd8d 	bl	8000af4 <main>
 8000fda:	4770      	bx	lr
 8000fdc:	20000000 	.word	0x20000000
 8000fe0:	2000006c 	.word	0x2000006c
 8000fe4:	08002690 	.word	0x08002690
 8000fe8:	2000006c 	.word	0x2000006c
 8000fec:	20000150 	.word	0x20000150

08000ff0 <ADC1_2_IRQHandler>:
 8000ff0:	e7fe      	b.n	8000ff0 <ADC1_2_IRQHandler>
	...

08000ff4 <HAL_Init>:
 8000ff4:	b580      	push	{r7, lr}
 8000ff6:	af00      	add	r7, sp, #0
 8000ff8:	4b08      	ldr	r3, [pc, #32]	; (800101c <HAL_Init+0x28>)
 8000ffa:	681b      	ldr	r3, [r3, #0]
 8000ffc:	4a07      	ldr	r2, [pc, #28]	; (800101c <HAL_Init+0x28>)
 8000ffe:	f043 0310 	orr.w	r3, r3, #16
 8001002:	6013      	str	r3, [r2, #0]
 8001004:	2003      	movs	r0, #3
 8001006:	f000 f923 	bl	8001250 <HAL_NVIC_SetPriorityGrouping>
 800100a:	200f      	movs	r0, #15
 800100c:	f000 f808 	bl	8001020 <HAL_InitTick>
 8001010:	f7ff fec2 	bl	8000d98 <HAL_MspInit>
 8001014:	2300      	movs	r3, #0
 8001016:	4618      	mov	r0, r3
 8001018:	bd80      	pop	{r7, pc}
 800101a:	bf00      	nop
 800101c:	40022000 	.word	0x40022000

08001020 <HAL_InitTick>:
 8001020:	b580      	push	{r7, lr}
 8001022:	b082      	sub	sp, #8
 8001024:	af00      	add	r7, sp, #0
 8001026:	6078      	str	r0, [r7, #4]
 8001028:	4b12      	ldr	r3, [pc, #72]	; (8001074 <HAL_InitTick+0x54>)
 800102a:	681a      	ldr	r2, [r3, #0]
 800102c:	4b12      	ldr	r3, [pc, #72]	; (8001078 <HAL_InitTick+0x58>)
 800102e:	781b      	ldrb	r3, [r3, #0]
 8001030:	4619      	mov	r1, r3
 8001032:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001036:	fbb3 f3f1 	udiv	r3, r3, r1
 800103a:	fbb2 f3f3 	udiv	r3, r2, r3
 800103e:	4618      	mov	r0, r3
 8001040:	f000 f93b 	bl	80012ba <HAL_SYSTICK_Config>
 8001044:	4603      	mov	r3, r0
 8001046:	2b00      	cmp	r3, #0
 8001048:	d001      	beq.n	800104e <HAL_InitTick+0x2e>
 800104a:	2301      	movs	r3, #1
 800104c:	e00e      	b.n	800106c <HAL_InitTick+0x4c>
 800104e:	687b      	ldr	r3, [r7, #4]
 8001050:	2b0f      	cmp	r3, #15
 8001052:	d80a      	bhi.n	800106a <HAL_InitTick+0x4a>
 8001054:	2200      	movs	r2, #0
 8001056:	6879      	ldr	r1, [r7, #4]
 8001058:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800105c:	f000 f903 	bl	8001266 <HAL_NVIC_SetPriority>
 8001060:	4a06      	ldr	r2, [pc, #24]	; (800107c <HAL_InitTick+0x5c>)
 8001062:	687b      	ldr	r3, [r7, #4]
 8001064:	6013      	str	r3, [r2, #0]
 8001066:	2300      	movs	r3, #0
 8001068:	e000      	b.n	800106c <HAL_InitTick+0x4c>
 800106a:	2301      	movs	r3, #1
 800106c:	4618      	mov	r0, r3
 800106e:	3708      	adds	r7, #8
 8001070:	46bd      	mov	sp, r7
 8001072:	bd80      	pop	{r7, pc}
 8001074:	20000060 	.word	0x20000060
 8001078:	20000068 	.word	0x20000068
 800107c:	20000064 	.word	0x20000064

08001080 <HAL_IncTick>:
 8001080:	b480      	push	{r7}
 8001082:	af00      	add	r7, sp, #0
 8001084:	4b05      	ldr	r3, [pc, #20]	; (800109c <HAL_IncTick+0x1c>)
 8001086:	781b      	ldrb	r3, [r3, #0]
 8001088:	461a      	mov	r2, r3
 800108a:	4b05      	ldr	r3, [pc, #20]	; (80010a0 <HAL_IncTick+0x20>)
 800108c:	681b      	ldr	r3, [r3, #0]
 800108e:	4413      	add	r3, r2
 8001090:	4a03      	ldr	r2, [pc, #12]	; (80010a0 <HAL_IncTick+0x20>)
 8001092:	6013      	str	r3, [r2, #0]
 8001094:	bf00      	nop
 8001096:	46bd      	mov	sp, r7
 8001098:	bc80      	pop	{r7}
 800109a:	4770      	bx	lr
 800109c:	20000068 	.word	0x20000068
 80010a0:	2000014c 	.word	0x2000014c

080010a4 <HAL_GetTick>:
 80010a4:	b480      	push	{r7}
 80010a6:	af00      	add	r7, sp, #0
 80010a8:	4b02      	ldr	r3, [pc, #8]	; (80010b4 <HAL_GetTick+0x10>)
 80010aa:	681b      	ldr	r3, [r3, #0]
 80010ac:	4618      	mov	r0, r3
 80010ae:	46bd      	mov	sp, r7
 80010b0:	bc80      	pop	{r7}
 80010b2:	4770      	bx	lr
 80010b4:	2000014c 	.word	0x2000014c

080010b8 <__NVIC_SetPriorityGrouping>:
 80010b8:	b480      	push	{r7}
 80010ba:	b085      	sub	sp, #20
 80010bc:	af00      	add	r7, sp, #0
 80010be:	6078      	str	r0, [r7, #4]
 80010c0:	687b      	ldr	r3, [r7, #4]
 80010c2:	f003 0307 	and.w	r3, r3, #7
 80010c6:	60fb      	str	r3, [r7, #12]
 80010c8:	4b0c      	ldr	r3, [pc, #48]	; (80010fc <__NVIC_SetPriorityGrouping+0x44>)
 80010ca:	68db      	ldr	r3, [r3, #12]
 80010cc:	60bb      	str	r3, [r7, #8]
 80010ce:	68ba      	ldr	r2, [r7, #8]
 80010d0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80010d4:	4013      	ands	r3, r2
 80010d6:	60bb      	str	r3, [r7, #8]
 80010d8:	68fb      	ldr	r3, [r7, #12]
 80010da:	021a      	lsls	r2, r3, #8
 80010dc:	68bb      	ldr	r3, [r7, #8]
 80010de:	4313      	orrs	r3, r2
 80010e0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80010e4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80010e8:	60bb      	str	r3, [r7, #8]
 80010ea:	4a04      	ldr	r2, [pc, #16]	; (80010fc <__NVIC_SetPriorityGrouping+0x44>)
 80010ec:	68bb      	ldr	r3, [r7, #8]
 80010ee:	60d3      	str	r3, [r2, #12]
 80010f0:	bf00      	nop
 80010f2:	3714      	adds	r7, #20
 80010f4:	46bd      	mov	sp, r7
 80010f6:	bc80      	pop	{r7}
 80010f8:	4770      	bx	lr
 80010fa:	bf00      	nop
 80010fc:	e000ed00 	.word	0xe000ed00

08001100 <__NVIC_GetPriorityGrouping>:
 8001100:	b480      	push	{r7}
 8001102:	af00      	add	r7, sp, #0
 8001104:	4b04      	ldr	r3, [pc, #16]	; (8001118 <__NVIC_GetPriorityGrouping+0x18>)
 8001106:	68db      	ldr	r3, [r3, #12]
 8001108:	0a1b      	lsrs	r3, r3, #8
 800110a:	f003 0307 	and.w	r3, r3, #7
 800110e:	4618      	mov	r0, r3
 8001110:	46bd      	mov	sp, r7
 8001112:	bc80      	pop	{r7}
 8001114:	4770      	bx	lr
 8001116:	bf00      	nop
 8001118:	e000ed00 	.word	0xe000ed00

0800111c <__NVIC_EnableIRQ>:
 800111c:	b480      	push	{r7}
 800111e:	b083      	sub	sp, #12
 8001120:	af00      	add	r7, sp, #0
 8001122:	4603      	mov	r3, r0
 8001124:	71fb      	strb	r3, [r7, #7]
 8001126:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800112a:	2b00      	cmp	r3, #0
 800112c:	db0b      	blt.n	8001146 <__NVIC_EnableIRQ+0x2a>
 800112e:	79fb      	ldrb	r3, [r7, #7]
 8001130:	f003 021f 	and.w	r2, r3, #31
 8001134:	4906      	ldr	r1, [pc, #24]	; (8001150 <__NVIC_EnableIRQ+0x34>)
 8001136:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800113a:	095b      	lsrs	r3, r3, #5
 800113c:	2001      	movs	r0, #1
 800113e:	fa00 f202 	lsl.w	r2, r0, r2
 8001142:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001146:	bf00      	nop
 8001148:	370c      	adds	r7, #12
 800114a:	46bd      	mov	sp, r7
 800114c:	bc80      	pop	{r7}
 800114e:	4770      	bx	lr
 8001150:	e000e100 	.word	0xe000e100

08001154 <__NVIC_SetPriority>:
 8001154:	b480      	push	{r7}
 8001156:	b083      	sub	sp, #12
 8001158:	af00      	add	r7, sp, #0
 800115a:	4603      	mov	r3, r0
 800115c:	6039      	str	r1, [r7, #0]
 800115e:	71fb      	strb	r3, [r7, #7]
 8001160:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001164:	2b00      	cmp	r3, #0
 8001166:	db0a      	blt.n	800117e <__NVIC_SetPriority+0x2a>
 8001168:	683b      	ldr	r3, [r7, #0]
 800116a:	b2da      	uxtb	r2, r3
 800116c:	490c      	ldr	r1, [pc, #48]	; (80011a0 <__NVIC_SetPriority+0x4c>)
 800116e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001172:	0112      	lsls	r2, r2, #4
 8001174:	b2d2      	uxtb	r2, r2
 8001176:	440b      	add	r3, r1
 8001178:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800117c:	e00a      	b.n	8001194 <__NVIC_SetPriority+0x40>
 800117e:	683b      	ldr	r3, [r7, #0]
 8001180:	b2da      	uxtb	r2, r3
 8001182:	4908      	ldr	r1, [pc, #32]	; (80011a4 <__NVIC_SetPriority+0x50>)
 8001184:	79fb      	ldrb	r3, [r7, #7]
 8001186:	f003 030f 	and.w	r3, r3, #15
 800118a:	3b04      	subs	r3, #4
 800118c:	0112      	lsls	r2, r2, #4
 800118e:	b2d2      	uxtb	r2, r2
 8001190:	440b      	add	r3, r1
 8001192:	761a      	strb	r2, [r3, #24]
 8001194:	bf00      	nop
 8001196:	370c      	adds	r7, #12
 8001198:	46bd      	mov	sp, r7
 800119a:	bc80      	pop	{r7}
 800119c:	4770      	bx	lr
 800119e:	bf00      	nop
 80011a0:	e000e100 	.word	0xe000e100
 80011a4:	e000ed00 	.word	0xe000ed00

080011a8 <NVIC_EncodePriority>:
 80011a8:	b480      	push	{r7}
 80011aa:	b089      	sub	sp, #36	; 0x24
 80011ac:	af00      	add	r7, sp, #0
 80011ae:	60f8      	str	r0, [r7, #12]
 80011b0:	60b9      	str	r1, [r7, #8]
 80011b2:	607a      	str	r2, [r7, #4]
 80011b4:	68fb      	ldr	r3, [r7, #12]
 80011b6:	f003 0307 	and.w	r3, r3, #7
 80011ba:	61fb      	str	r3, [r7, #28]
 80011bc:	69fb      	ldr	r3, [r7, #28]
 80011be:	f1c3 0307 	rsb	r3, r3, #7
 80011c2:	2b04      	cmp	r3, #4
 80011c4:	bf28      	it	cs
 80011c6:	2304      	movcs	r3, #4
 80011c8:	61bb      	str	r3, [r7, #24]
 80011ca:	69fb      	ldr	r3, [r7, #28]
 80011cc:	3304      	adds	r3, #4
 80011ce:	2b06      	cmp	r3, #6
 80011d0:	d902      	bls.n	80011d8 <NVIC_EncodePriority+0x30>
 80011d2:	69fb      	ldr	r3, [r7, #28]
 80011d4:	3b03      	subs	r3, #3
 80011d6:	e000      	b.n	80011da <NVIC_EncodePriority+0x32>
 80011d8:	2300      	movs	r3, #0
 80011da:	617b      	str	r3, [r7, #20]
 80011dc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80011e0:	69bb      	ldr	r3, [r7, #24]
 80011e2:	fa02 f303 	lsl.w	r3, r2, r3
 80011e6:	43da      	mvns	r2, r3
 80011e8:	68bb      	ldr	r3, [r7, #8]
 80011ea:	401a      	ands	r2, r3
 80011ec:	697b      	ldr	r3, [r7, #20]
 80011ee:	409a      	lsls	r2, r3
 80011f0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80011f4:	697b      	ldr	r3, [r7, #20]
 80011f6:	fa01 f303 	lsl.w	r3, r1, r3
 80011fa:	43d9      	mvns	r1, r3
 80011fc:	687b      	ldr	r3, [r7, #4]
 80011fe:	400b      	ands	r3, r1
 8001200:	4313      	orrs	r3, r2
 8001202:	4618      	mov	r0, r3
 8001204:	3724      	adds	r7, #36	; 0x24
 8001206:	46bd      	mov	sp, r7
 8001208:	bc80      	pop	{r7}
 800120a:	4770      	bx	lr

0800120c <SysTick_Config>:
 800120c:	b580      	push	{r7, lr}
 800120e:	b082      	sub	sp, #8
 8001210:	af00      	add	r7, sp, #0
 8001212:	6078      	str	r0, [r7, #4]
 8001214:	687b      	ldr	r3, [r7, #4]
 8001216:	3b01      	subs	r3, #1
 8001218:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800121c:	d301      	bcc.n	8001222 <SysTick_Config+0x16>
 800121e:	2301      	movs	r3, #1
 8001220:	e00f      	b.n	8001242 <SysTick_Config+0x36>
 8001222:	4a0a      	ldr	r2, [pc, #40]	; (800124c <SysTick_Config+0x40>)
 8001224:	687b      	ldr	r3, [r7, #4]
 8001226:	3b01      	subs	r3, #1
 8001228:	6053      	str	r3, [r2, #4]
 800122a:	210f      	movs	r1, #15
 800122c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001230:	f7ff ff90 	bl	8001154 <__NVIC_SetPriority>
 8001234:	4b05      	ldr	r3, [pc, #20]	; (800124c <SysTick_Config+0x40>)
 8001236:	2200      	movs	r2, #0
 8001238:	609a      	str	r2, [r3, #8]
 800123a:	4b04      	ldr	r3, [pc, #16]	; (800124c <SysTick_Config+0x40>)
 800123c:	2207      	movs	r2, #7
 800123e:	601a      	str	r2, [r3, #0]
 8001240:	2300      	movs	r3, #0
 8001242:	4618      	mov	r0, r3
 8001244:	3708      	adds	r7, #8
 8001246:	46bd      	mov	sp, r7
 8001248:	bd80      	pop	{r7, pc}
 800124a:	bf00      	nop
 800124c:	e000e010 	.word	0xe000e010

08001250 <HAL_NVIC_SetPriorityGrouping>:
 8001250:	b580      	push	{r7, lr}
 8001252:	b082      	sub	sp, #8
 8001254:	af00      	add	r7, sp, #0
 8001256:	6078      	str	r0, [r7, #4]
 8001258:	6878      	ldr	r0, [r7, #4]
 800125a:	f7ff ff2d 	bl	80010b8 <__NVIC_SetPriorityGrouping>
 800125e:	bf00      	nop
 8001260:	3708      	adds	r7, #8
 8001262:	46bd      	mov	sp, r7
 8001264:	bd80      	pop	{r7, pc}

08001266 <HAL_NVIC_SetPriority>:
 8001266:	b580      	push	{r7, lr}
 8001268:	b086      	sub	sp, #24
 800126a:	af00      	add	r7, sp, #0
 800126c:	4603      	mov	r3, r0
 800126e:	60b9      	str	r1, [r7, #8]
 8001270:	607a      	str	r2, [r7, #4]
 8001272:	73fb      	strb	r3, [r7, #15]
 8001274:	2300      	movs	r3, #0
 8001276:	617b      	str	r3, [r7, #20]
 8001278:	f7ff ff42 	bl	8001100 <__NVIC_GetPriorityGrouping>
 800127c:	6178      	str	r0, [r7, #20]
 800127e:	687a      	ldr	r2, [r7, #4]
 8001280:	68b9      	ldr	r1, [r7, #8]
 8001282:	6978      	ldr	r0, [r7, #20]
 8001284:	f7ff ff90 	bl	80011a8 <NVIC_EncodePriority>
 8001288:	4602      	mov	r2, r0
 800128a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800128e:	4611      	mov	r1, r2
 8001290:	4618      	mov	r0, r3
 8001292:	f7ff ff5f 	bl	8001154 <__NVIC_SetPriority>
 8001296:	bf00      	nop
 8001298:	3718      	adds	r7, #24
 800129a:	46bd      	mov	sp, r7
 800129c:	bd80      	pop	{r7, pc}

0800129e <HAL_NVIC_EnableIRQ>:
 800129e:	b580      	push	{r7, lr}
 80012a0:	b082      	sub	sp, #8
 80012a2:	af00      	add	r7, sp, #0
 80012a4:	4603      	mov	r3, r0
 80012a6:	71fb      	strb	r3, [r7, #7]
 80012a8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80012ac:	4618      	mov	r0, r3
 80012ae:	f7ff ff35 	bl	800111c <__NVIC_EnableIRQ>
 80012b2:	bf00      	nop
 80012b4:	3708      	adds	r7, #8
 80012b6:	46bd      	mov	sp, r7
 80012b8:	bd80      	pop	{r7, pc}

080012ba <HAL_SYSTICK_Config>:
 80012ba:	b580      	push	{r7, lr}
 80012bc:	b082      	sub	sp, #8
 80012be:	af00      	add	r7, sp, #0
 80012c0:	6078      	str	r0, [r7, #4]
 80012c2:	6878      	ldr	r0, [r7, #4]
 80012c4:	f7ff ffa2 	bl	800120c <SysTick_Config>
 80012c8:	4603      	mov	r3, r0
 80012ca:	4618      	mov	r0, r3
 80012cc:	3708      	adds	r7, #8
 80012ce:	46bd      	mov	sp, r7
 80012d0:	bd80      	pop	{r7, pc}
	...

080012d4 <HAL_GPIO_Init>:
 80012d4:	b480      	push	{r7}
 80012d6:	b08b      	sub	sp, #44	; 0x2c
 80012d8:	af00      	add	r7, sp, #0
 80012da:	6078      	str	r0, [r7, #4]
 80012dc:	6039      	str	r1, [r7, #0]
 80012de:	2300      	movs	r3, #0
 80012e0:	627b      	str	r3, [r7, #36]	; 0x24
 80012e2:	2300      	movs	r3, #0
 80012e4:	623b      	str	r3, [r7, #32]
 80012e6:	e169      	b.n	80015bc <HAL_GPIO_Init+0x2e8>
 80012e8:	2201      	movs	r2, #1
 80012ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80012ec:	fa02 f303 	lsl.w	r3, r2, r3
 80012f0:	61fb      	str	r3, [r7, #28]
 80012f2:	683b      	ldr	r3, [r7, #0]
 80012f4:	681b      	ldr	r3, [r3, #0]
 80012f6:	69fa      	ldr	r2, [r7, #28]
 80012f8:	4013      	ands	r3, r2
 80012fa:	61bb      	str	r3, [r7, #24]
 80012fc:	69ba      	ldr	r2, [r7, #24]
 80012fe:	69fb      	ldr	r3, [r7, #28]
 8001300:	429a      	cmp	r2, r3
 8001302:	f040 8158 	bne.w	80015b6 <HAL_GPIO_Init+0x2e2>
 8001306:	683b      	ldr	r3, [r7, #0]
 8001308:	685b      	ldr	r3, [r3, #4]
 800130a:	4a9a      	ldr	r2, [pc, #616]	; (8001574 <HAL_GPIO_Init+0x2a0>)
 800130c:	4293      	cmp	r3, r2
 800130e:	d05e      	beq.n	80013ce <HAL_GPIO_Init+0xfa>
 8001310:	4a98      	ldr	r2, [pc, #608]	; (8001574 <HAL_GPIO_Init+0x2a0>)
 8001312:	4293      	cmp	r3, r2
 8001314:	d875      	bhi.n	8001402 <HAL_GPIO_Init+0x12e>
 8001316:	4a98      	ldr	r2, [pc, #608]	; (8001578 <HAL_GPIO_Init+0x2a4>)
 8001318:	4293      	cmp	r3, r2
 800131a:	d058      	beq.n	80013ce <HAL_GPIO_Init+0xfa>
 800131c:	4a96      	ldr	r2, [pc, #600]	; (8001578 <HAL_GPIO_Init+0x2a4>)
 800131e:	4293      	cmp	r3, r2
 8001320:	d86f      	bhi.n	8001402 <HAL_GPIO_Init+0x12e>
 8001322:	4a96      	ldr	r2, [pc, #600]	; (800157c <HAL_GPIO_Init+0x2a8>)
 8001324:	4293      	cmp	r3, r2
 8001326:	d052      	beq.n	80013ce <HAL_GPIO_Init+0xfa>
 8001328:	4a94      	ldr	r2, [pc, #592]	; (800157c <HAL_GPIO_Init+0x2a8>)
 800132a:	4293      	cmp	r3, r2
 800132c:	d869      	bhi.n	8001402 <HAL_GPIO_Init+0x12e>
 800132e:	4a94      	ldr	r2, [pc, #592]	; (8001580 <HAL_GPIO_Init+0x2ac>)
 8001330:	4293      	cmp	r3, r2
 8001332:	d04c      	beq.n	80013ce <HAL_GPIO_Init+0xfa>
 8001334:	4a92      	ldr	r2, [pc, #584]	; (8001580 <HAL_GPIO_Init+0x2ac>)
 8001336:	4293      	cmp	r3, r2
 8001338:	d863      	bhi.n	8001402 <HAL_GPIO_Init+0x12e>
 800133a:	4a92      	ldr	r2, [pc, #584]	; (8001584 <HAL_GPIO_Init+0x2b0>)
 800133c:	4293      	cmp	r3, r2
 800133e:	d046      	beq.n	80013ce <HAL_GPIO_Init+0xfa>
 8001340:	4a90      	ldr	r2, [pc, #576]	; (8001584 <HAL_GPIO_Init+0x2b0>)
 8001342:	4293      	cmp	r3, r2
 8001344:	d85d      	bhi.n	8001402 <HAL_GPIO_Init+0x12e>
 8001346:	2b12      	cmp	r3, #18
 8001348:	d82a      	bhi.n	80013a0 <HAL_GPIO_Init+0xcc>
 800134a:	2b12      	cmp	r3, #18
 800134c:	d859      	bhi.n	8001402 <HAL_GPIO_Init+0x12e>
 800134e:	a201      	add	r2, pc, #4	; (adr r2, 8001354 <HAL_GPIO_Init+0x80>)
 8001350:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001354:	080013cf 	.word	0x080013cf
 8001358:	080013a9 	.word	0x080013a9
 800135c:	080013bb 	.word	0x080013bb
 8001360:	080013fd 	.word	0x080013fd
 8001364:	08001403 	.word	0x08001403
 8001368:	08001403 	.word	0x08001403
 800136c:	08001403 	.word	0x08001403
 8001370:	08001403 	.word	0x08001403
 8001374:	08001403 	.word	0x08001403
 8001378:	08001403 	.word	0x08001403
 800137c:	08001403 	.word	0x08001403
 8001380:	08001403 	.word	0x08001403
 8001384:	08001403 	.word	0x08001403
 8001388:	08001403 	.word	0x08001403
 800138c:	08001403 	.word	0x08001403
 8001390:	08001403 	.word	0x08001403
 8001394:	08001403 	.word	0x08001403
 8001398:	080013b1 	.word	0x080013b1
 800139c:	080013c5 	.word	0x080013c5
 80013a0:	4a79      	ldr	r2, [pc, #484]	; (8001588 <HAL_GPIO_Init+0x2b4>)
 80013a2:	4293      	cmp	r3, r2
 80013a4:	d013      	beq.n	80013ce <HAL_GPIO_Init+0xfa>
 80013a6:	e02c      	b.n	8001402 <HAL_GPIO_Init+0x12e>
 80013a8:	683b      	ldr	r3, [r7, #0]
 80013aa:	68db      	ldr	r3, [r3, #12]
 80013ac:	623b      	str	r3, [r7, #32]
 80013ae:	e029      	b.n	8001404 <HAL_GPIO_Init+0x130>
 80013b0:	683b      	ldr	r3, [r7, #0]
 80013b2:	68db      	ldr	r3, [r3, #12]
 80013b4:	3304      	adds	r3, #4
 80013b6:	623b      	str	r3, [r7, #32]
 80013b8:	e024      	b.n	8001404 <HAL_GPIO_Init+0x130>
 80013ba:	683b      	ldr	r3, [r7, #0]
 80013bc:	68db      	ldr	r3, [r3, #12]
 80013be:	3308      	adds	r3, #8
 80013c0:	623b      	str	r3, [r7, #32]
 80013c2:	e01f      	b.n	8001404 <HAL_GPIO_Init+0x130>
 80013c4:	683b      	ldr	r3, [r7, #0]
 80013c6:	68db      	ldr	r3, [r3, #12]
 80013c8:	330c      	adds	r3, #12
 80013ca:	623b      	str	r3, [r7, #32]
 80013cc:	e01a      	b.n	8001404 <HAL_GPIO_Init+0x130>
 80013ce:	683b      	ldr	r3, [r7, #0]
 80013d0:	689b      	ldr	r3, [r3, #8]
 80013d2:	2b00      	cmp	r3, #0
 80013d4:	d102      	bne.n	80013dc <HAL_GPIO_Init+0x108>
 80013d6:	2304      	movs	r3, #4
 80013d8:	623b      	str	r3, [r7, #32]
 80013da:	e013      	b.n	8001404 <HAL_GPIO_Init+0x130>
 80013dc:	683b      	ldr	r3, [r7, #0]
 80013de:	689b      	ldr	r3, [r3, #8]
 80013e0:	2b01      	cmp	r3, #1
 80013e2:	d105      	bne.n	80013f0 <HAL_GPIO_Init+0x11c>
 80013e4:	2308      	movs	r3, #8
 80013e6:	623b      	str	r3, [r7, #32]
 80013e8:	687b      	ldr	r3, [r7, #4]
 80013ea:	69fa      	ldr	r2, [r7, #28]
 80013ec:	611a      	str	r2, [r3, #16]
 80013ee:	e009      	b.n	8001404 <HAL_GPIO_Init+0x130>
 80013f0:	2308      	movs	r3, #8
 80013f2:	623b      	str	r3, [r7, #32]
 80013f4:	687b      	ldr	r3, [r7, #4]
 80013f6:	69fa      	ldr	r2, [r7, #28]
 80013f8:	615a      	str	r2, [r3, #20]
 80013fa:	e003      	b.n	8001404 <HAL_GPIO_Init+0x130>
 80013fc:	2300      	movs	r3, #0
 80013fe:	623b      	str	r3, [r7, #32]
 8001400:	e000      	b.n	8001404 <HAL_GPIO_Init+0x130>
 8001402:	bf00      	nop
 8001404:	69bb      	ldr	r3, [r7, #24]
 8001406:	2bff      	cmp	r3, #255	; 0xff
 8001408:	d801      	bhi.n	800140e <HAL_GPIO_Init+0x13a>
 800140a:	687b      	ldr	r3, [r7, #4]
 800140c:	e001      	b.n	8001412 <HAL_GPIO_Init+0x13e>
 800140e:	687b      	ldr	r3, [r7, #4]
 8001410:	3304      	adds	r3, #4
 8001412:	617b      	str	r3, [r7, #20]
 8001414:	69bb      	ldr	r3, [r7, #24]
 8001416:	2bff      	cmp	r3, #255	; 0xff
 8001418:	d802      	bhi.n	8001420 <HAL_GPIO_Init+0x14c>
 800141a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800141c:	009b      	lsls	r3, r3, #2
 800141e:	e002      	b.n	8001426 <HAL_GPIO_Init+0x152>
 8001420:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001422:	3b08      	subs	r3, #8
 8001424:	009b      	lsls	r3, r3, #2
 8001426:	613b      	str	r3, [r7, #16]
 8001428:	697b      	ldr	r3, [r7, #20]
 800142a:	681a      	ldr	r2, [r3, #0]
 800142c:	210f      	movs	r1, #15
 800142e:	693b      	ldr	r3, [r7, #16]
 8001430:	fa01 f303 	lsl.w	r3, r1, r3
 8001434:	43db      	mvns	r3, r3
 8001436:	401a      	ands	r2, r3
 8001438:	6a39      	ldr	r1, [r7, #32]
 800143a:	693b      	ldr	r3, [r7, #16]
 800143c:	fa01 f303 	lsl.w	r3, r1, r3
 8001440:	431a      	orrs	r2, r3
 8001442:	697b      	ldr	r3, [r7, #20]
 8001444:	601a      	str	r2, [r3, #0]
 8001446:	683b      	ldr	r3, [r7, #0]
 8001448:	685b      	ldr	r3, [r3, #4]
 800144a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800144e:	2b00      	cmp	r3, #0
 8001450:	f000 80b1 	beq.w	80015b6 <HAL_GPIO_Init+0x2e2>
 8001454:	4b4d      	ldr	r3, [pc, #308]	; (800158c <HAL_GPIO_Init+0x2b8>)
 8001456:	699b      	ldr	r3, [r3, #24]
 8001458:	4a4c      	ldr	r2, [pc, #304]	; (800158c <HAL_GPIO_Init+0x2b8>)
 800145a:	f043 0301 	orr.w	r3, r3, #1
 800145e:	6193      	str	r3, [r2, #24]
 8001460:	4b4a      	ldr	r3, [pc, #296]	; (800158c <HAL_GPIO_Init+0x2b8>)
 8001462:	699b      	ldr	r3, [r3, #24]
 8001464:	f003 0301 	and.w	r3, r3, #1
 8001468:	60bb      	str	r3, [r7, #8]
 800146a:	68bb      	ldr	r3, [r7, #8]
 800146c:	4a48      	ldr	r2, [pc, #288]	; (8001590 <HAL_GPIO_Init+0x2bc>)
 800146e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001470:	089b      	lsrs	r3, r3, #2
 8001472:	3302      	adds	r3, #2
 8001474:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001478:	60fb      	str	r3, [r7, #12]
 800147a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800147c:	f003 0303 	and.w	r3, r3, #3
 8001480:	009b      	lsls	r3, r3, #2
 8001482:	220f      	movs	r2, #15
 8001484:	fa02 f303 	lsl.w	r3, r2, r3
 8001488:	43db      	mvns	r3, r3
 800148a:	68fa      	ldr	r2, [r7, #12]
 800148c:	4013      	ands	r3, r2
 800148e:	60fb      	str	r3, [r7, #12]
 8001490:	687b      	ldr	r3, [r7, #4]
 8001492:	4a40      	ldr	r2, [pc, #256]	; (8001594 <HAL_GPIO_Init+0x2c0>)
 8001494:	4293      	cmp	r3, r2
 8001496:	d013      	beq.n	80014c0 <HAL_GPIO_Init+0x1ec>
 8001498:	687b      	ldr	r3, [r7, #4]
 800149a:	4a3f      	ldr	r2, [pc, #252]	; (8001598 <HAL_GPIO_Init+0x2c4>)
 800149c:	4293      	cmp	r3, r2
 800149e:	d00d      	beq.n	80014bc <HAL_GPIO_Init+0x1e8>
 80014a0:	687b      	ldr	r3, [r7, #4]
 80014a2:	4a3e      	ldr	r2, [pc, #248]	; (800159c <HAL_GPIO_Init+0x2c8>)
 80014a4:	4293      	cmp	r3, r2
 80014a6:	d007      	beq.n	80014b8 <HAL_GPIO_Init+0x1e4>
 80014a8:	687b      	ldr	r3, [r7, #4]
 80014aa:	4a3d      	ldr	r2, [pc, #244]	; (80015a0 <HAL_GPIO_Init+0x2cc>)
 80014ac:	4293      	cmp	r3, r2
 80014ae:	d101      	bne.n	80014b4 <HAL_GPIO_Init+0x1e0>
 80014b0:	2303      	movs	r3, #3
 80014b2:	e006      	b.n	80014c2 <HAL_GPIO_Init+0x1ee>
 80014b4:	2304      	movs	r3, #4
 80014b6:	e004      	b.n	80014c2 <HAL_GPIO_Init+0x1ee>
 80014b8:	2302      	movs	r3, #2
 80014ba:	e002      	b.n	80014c2 <HAL_GPIO_Init+0x1ee>
 80014bc:	2301      	movs	r3, #1
 80014be:	e000      	b.n	80014c2 <HAL_GPIO_Init+0x1ee>
 80014c0:	2300      	movs	r3, #0
 80014c2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80014c4:	f002 0203 	and.w	r2, r2, #3
 80014c8:	0092      	lsls	r2, r2, #2
 80014ca:	4093      	lsls	r3, r2
 80014cc:	68fa      	ldr	r2, [r7, #12]
 80014ce:	4313      	orrs	r3, r2
 80014d0:	60fb      	str	r3, [r7, #12]
 80014d2:	492f      	ldr	r1, [pc, #188]	; (8001590 <HAL_GPIO_Init+0x2bc>)
 80014d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80014d6:	089b      	lsrs	r3, r3, #2
 80014d8:	3302      	adds	r3, #2
 80014da:	68fa      	ldr	r2, [r7, #12]
 80014dc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80014e0:	683b      	ldr	r3, [r7, #0]
 80014e2:	685b      	ldr	r3, [r3, #4]
 80014e4:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80014e8:	2b00      	cmp	r3, #0
 80014ea:	d006      	beq.n	80014fa <HAL_GPIO_Init+0x226>
 80014ec:	4b2d      	ldr	r3, [pc, #180]	; (80015a4 <HAL_GPIO_Init+0x2d0>)
 80014ee:	689a      	ldr	r2, [r3, #8]
 80014f0:	492c      	ldr	r1, [pc, #176]	; (80015a4 <HAL_GPIO_Init+0x2d0>)
 80014f2:	69bb      	ldr	r3, [r7, #24]
 80014f4:	4313      	orrs	r3, r2
 80014f6:	608b      	str	r3, [r1, #8]
 80014f8:	e006      	b.n	8001508 <HAL_GPIO_Init+0x234>
 80014fa:	4b2a      	ldr	r3, [pc, #168]	; (80015a4 <HAL_GPIO_Init+0x2d0>)
 80014fc:	689a      	ldr	r2, [r3, #8]
 80014fe:	69bb      	ldr	r3, [r7, #24]
 8001500:	43db      	mvns	r3, r3
 8001502:	4928      	ldr	r1, [pc, #160]	; (80015a4 <HAL_GPIO_Init+0x2d0>)
 8001504:	4013      	ands	r3, r2
 8001506:	608b      	str	r3, [r1, #8]
 8001508:	683b      	ldr	r3, [r7, #0]
 800150a:	685b      	ldr	r3, [r3, #4]
 800150c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001510:	2b00      	cmp	r3, #0
 8001512:	d006      	beq.n	8001522 <HAL_GPIO_Init+0x24e>
 8001514:	4b23      	ldr	r3, [pc, #140]	; (80015a4 <HAL_GPIO_Init+0x2d0>)
 8001516:	68da      	ldr	r2, [r3, #12]
 8001518:	4922      	ldr	r1, [pc, #136]	; (80015a4 <HAL_GPIO_Init+0x2d0>)
 800151a:	69bb      	ldr	r3, [r7, #24]
 800151c:	4313      	orrs	r3, r2
 800151e:	60cb      	str	r3, [r1, #12]
 8001520:	e006      	b.n	8001530 <HAL_GPIO_Init+0x25c>
 8001522:	4b20      	ldr	r3, [pc, #128]	; (80015a4 <HAL_GPIO_Init+0x2d0>)
 8001524:	68da      	ldr	r2, [r3, #12]
 8001526:	69bb      	ldr	r3, [r7, #24]
 8001528:	43db      	mvns	r3, r3
 800152a:	491e      	ldr	r1, [pc, #120]	; (80015a4 <HAL_GPIO_Init+0x2d0>)
 800152c:	4013      	ands	r3, r2
 800152e:	60cb      	str	r3, [r1, #12]
 8001530:	683b      	ldr	r3, [r7, #0]
 8001532:	685b      	ldr	r3, [r3, #4]
 8001534:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001538:	2b00      	cmp	r3, #0
 800153a:	d006      	beq.n	800154a <HAL_GPIO_Init+0x276>
 800153c:	4b19      	ldr	r3, [pc, #100]	; (80015a4 <HAL_GPIO_Init+0x2d0>)
 800153e:	685a      	ldr	r2, [r3, #4]
 8001540:	4918      	ldr	r1, [pc, #96]	; (80015a4 <HAL_GPIO_Init+0x2d0>)
 8001542:	69bb      	ldr	r3, [r7, #24]
 8001544:	4313      	orrs	r3, r2
 8001546:	604b      	str	r3, [r1, #4]
 8001548:	e006      	b.n	8001558 <HAL_GPIO_Init+0x284>
 800154a:	4b16      	ldr	r3, [pc, #88]	; (80015a4 <HAL_GPIO_Init+0x2d0>)
 800154c:	685a      	ldr	r2, [r3, #4]
 800154e:	69bb      	ldr	r3, [r7, #24]
 8001550:	43db      	mvns	r3, r3
 8001552:	4914      	ldr	r1, [pc, #80]	; (80015a4 <HAL_GPIO_Init+0x2d0>)
 8001554:	4013      	ands	r3, r2
 8001556:	604b      	str	r3, [r1, #4]
 8001558:	683b      	ldr	r3, [r7, #0]
 800155a:	685b      	ldr	r3, [r3, #4]
 800155c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001560:	2b00      	cmp	r3, #0
 8001562:	d021      	beq.n	80015a8 <HAL_GPIO_Init+0x2d4>
 8001564:	4b0f      	ldr	r3, [pc, #60]	; (80015a4 <HAL_GPIO_Init+0x2d0>)
 8001566:	681a      	ldr	r2, [r3, #0]
 8001568:	490e      	ldr	r1, [pc, #56]	; (80015a4 <HAL_GPIO_Init+0x2d0>)
 800156a:	69bb      	ldr	r3, [r7, #24]
 800156c:	4313      	orrs	r3, r2
 800156e:	600b      	str	r3, [r1, #0]
 8001570:	e021      	b.n	80015b6 <HAL_GPIO_Init+0x2e2>
 8001572:	bf00      	nop
 8001574:	10320000 	.word	0x10320000
 8001578:	10310000 	.word	0x10310000
 800157c:	10220000 	.word	0x10220000
 8001580:	10210000 	.word	0x10210000
 8001584:	10120000 	.word	0x10120000
 8001588:	10110000 	.word	0x10110000
 800158c:	40021000 	.word	0x40021000
 8001590:	40010000 	.word	0x40010000
 8001594:	40010800 	.word	0x40010800
 8001598:	40010c00 	.word	0x40010c00
 800159c:	40011000 	.word	0x40011000
 80015a0:	40011400 	.word	0x40011400
 80015a4:	40010400 	.word	0x40010400
 80015a8:	4b0b      	ldr	r3, [pc, #44]	; (80015d8 <HAL_GPIO_Init+0x304>)
 80015aa:	681a      	ldr	r2, [r3, #0]
 80015ac:	69bb      	ldr	r3, [r7, #24]
 80015ae:	43db      	mvns	r3, r3
 80015b0:	4909      	ldr	r1, [pc, #36]	; (80015d8 <HAL_GPIO_Init+0x304>)
 80015b2:	4013      	ands	r3, r2
 80015b4:	600b      	str	r3, [r1, #0]
 80015b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80015b8:	3301      	adds	r3, #1
 80015ba:	627b      	str	r3, [r7, #36]	; 0x24
 80015bc:	683b      	ldr	r3, [r7, #0]
 80015be:	681a      	ldr	r2, [r3, #0]
 80015c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80015c2:	fa22 f303 	lsr.w	r3, r2, r3
 80015c6:	2b00      	cmp	r3, #0
 80015c8:	f47f ae8e 	bne.w	80012e8 <HAL_GPIO_Init+0x14>
 80015cc:	bf00      	nop
 80015ce:	bf00      	nop
 80015d0:	372c      	adds	r7, #44	; 0x2c
 80015d2:	46bd      	mov	sp, r7
 80015d4:	bc80      	pop	{r7}
 80015d6:	4770      	bx	lr
 80015d8:	40010400 	.word	0x40010400

080015dc <HAL_GPIO_ReadPin>:
 80015dc:	b480      	push	{r7}
 80015de:	b085      	sub	sp, #20
 80015e0:	af00      	add	r7, sp, #0
 80015e2:	6078      	str	r0, [r7, #4]
 80015e4:	460b      	mov	r3, r1
 80015e6:	807b      	strh	r3, [r7, #2]
 80015e8:	687b      	ldr	r3, [r7, #4]
 80015ea:	689a      	ldr	r2, [r3, #8]
 80015ec:	887b      	ldrh	r3, [r7, #2]
 80015ee:	4013      	ands	r3, r2
 80015f0:	2b00      	cmp	r3, #0
 80015f2:	d002      	beq.n	80015fa <HAL_GPIO_ReadPin+0x1e>
 80015f4:	2301      	movs	r3, #1
 80015f6:	73fb      	strb	r3, [r7, #15]
 80015f8:	e001      	b.n	80015fe <HAL_GPIO_ReadPin+0x22>
 80015fa:	2300      	movs	r3, #0
 80015fc:	73fb      	strb	r3, [r7, #15]
 80015fe:	7bfb      	ldrb	r3, [r7, #15]
 8001600:	4618      	mov	r0, r3
 8001602:	3714      	adds	r7, #20
 8001604:	46bd      	mov	sp, r7
 8001606:	bc80      	pop	{r7}
 8001608:	4770      	bx	lr

0800160a <HAL_GPIO_WritePin>:
 800160a:	b480      	push	{r7}
 800160c:	b083      	sub	sp, #12
 800160e:	af00      	add	r7, sp, #0
 8001610:	6078      	str	r0, [r7, #4]
 8001612:	460b      	mov	r3, r1
 8001614:	807b      	strh	r3, [r7, #2]
 8001616:	4613      	mov	r3, r2
 8001618:	707b      	strb	r3, [r7, #1]
 800161a:	787b      	ldrb	r3, [r7, #1]
 800161c:	2b00      	cmp	r3, #0
 800161e:	d003      	beq.n	8001628 <HAL_GPIO_WritePin+0x1e>
 8001620:	887a      	ldrh	r2, [r7, #2]
 8001622:	687b      	ldr	r3, [r7, #4]
 8001624:	611a      	str	r2, [r3, #16]
 8001626:	e003      	b.n	8001630 <HAL_GPIO_WritePin+0x26>
 8001628:	887b      	ldrh	r3, [r7, #2]
 800162a:	041a      	lsls	r2, r3, #16
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	611a      	str	r2, [r3, #16]
 8001630:	bf00      	nop
 8001632:	370c      	adds	r7, #12
 8001634:	46bd      	mov	sp, r7
 8001636:	bc80      	pop	{r7}
 8001638:	4770      	bx	lr
	...

0800163c <HAL_RCC_OscConfig>:
 800163c:	b580      	push	{r7, lr}
 800163e:	b086      	sub	sp, #24
 8001640:	af00      	add	r7, sp, #0
 8001642:	6078      	str	r0, [r7, #4]
 8001644:	687b      	ldr	r3, [r7, #4]
 8001646:	2b00      	cmp	r3, #0
 8001648:	d101      	bne.n	800164e <HAL_RCC_OscConfig+0x12>
 800164a:	2301      	movs	r3, #1
 800164c:	e272      	b.n	8001b34 <HAL_RCC_OscConfig+0x4f8>
 800164e:	687b      	ldr	r3, [r7, #4]
 8001650:	681b      	ldr	r3, [r3, #0]
 8001652:	f003 0301 	and.w	r3, r3, #1
 8001656:	2b00      	cmp	r3, #0
 8001658:	f000 8087 	beq.w	800176a <HAL_RCC_OscConfig+0x12e>
 800165c:	4b92      	ldr	r3, [pc, #584]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 800165e:	685b      	ldr	r3, [r3, #4]
 8001660:	f003 030c 	and.w	r3, r3, #12
 8001664:	2b04      	cmp	r3, #4
 8001666:	d00c      	beq.n	8001682 <HAL_RCC_OscConfig+0x46>
 8001668:	4b8f      	ldr	r3, [pc, #572]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 800166a:	685b      	ldr	r3, [r3, #4]
 800166c:	f003 030c 	and.w	r3, r3, #12
 8001670:	2b08      	cmp	r3, #8
 8001672:	d112      	bne.n	800169a <HAL_RCC_OscConfig+0x5e>
 8001674:	4b8c      	ldr	r3, [pc, #560]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 8001676:	685b      	ldr	r3, [r3, #4]
 8001678:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800167c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001680:	d10b      	bne.n	800169a <HAL_RCC_OscConfig+0x5e>
 8001682:	4b89      	ldr	r3, [pc, #548]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 8001684:	681b      	ldr	r3, [r3, #0]
 8001686:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800168a:	2b00      	cmp	r3, #0
 800168c:	d06c      	beq.n	8001768 <HAL_RCC_OscConfig+0x12c>
 800168e:	687b      	ldr	r3, [r7, #4]
 8001690:	685b      	ldr	r3, [r3, #4]
 8001692:	2b00      	cmp	r3, #0
 8001694:	d168      	bne.n	8001768 <HAL_RCC_OscConfig+0x12c>
 8001696:	2301      	movs	r3, #1
 8001698:	e24c      	b.n	8001b34 <HAL_RCC_OscConfig+0x4f8>
 800169a:	687b      	ldr	r3, [r7, #4]
 800169c:	685b      	ldr	r3, [r3, #4]
 800169e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80016a2:	d106      	bne.n	80016b2 <HAL_RCC_OscConfig+0x76>
 80016a4:	4b80      	ldr	r3, [pc, #512]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 80016a6:	681b      	ldr	r3, [r3, #0]
 80016a8:	4a7f      	ldr	r2, [pc, #508]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 80016aa:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80016ae:	6013      	str	r3, [r2, #0]
 80016b0:	e02e      	b.n	8001710 <HAL_RCC_OscConfig+0xd4>
 80016b2:	687b      	ldr	r3, [r7, #4]
 80016b4:	685b      	ldr	r3, [r3, #4]
 80016b6:	2b00      	cmp	r3, #0
 80016b8:	d10c      	bne.n	80016d4 <HAL_RCC_OscConfig+0x98>
 80016ba:	4b7b      	ldr	r3, [pc, #492]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 80016bc:	681b      	ldr	r3, [r3, #0]
 80016be:	4a7a      	ldr	r2, [pc, #488]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 80016c0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80016c4:	6013      	str	r3, [r2, #0]
 80016c6:	4b78      	ldr	r3, [pc, #480]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 80016c8:	681b      	ldr	r3, [r3, #0]
 80016ca:	4a77      	ldr	r2, [pc, #476]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 80016cc:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80016d0:	6013      	str	r3, [r2, #0]
 80016d2:	e01d      	b.n	8001710 <HAL_RCC_OscConfig+0xd4>
 80016d4:	687b      	ldr	r3, [r7, #4]
 80016d6:	685b      	ldr	r3, [r3, #4]
 80016d8:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80016dc:	d10c      	bne.n	80016f8 <HAL_RCC_OscConfig+0xbc>
 80016de:	4b72      	ldr	r3, [pc, #456]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 80016e0:	681b      	ldr	r3, [r3, #0]
 80016e2:	4a71      	ldr	r2, [pc, #452]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 80016e4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80016e8:	6013      	str	r3, [r2, #0]
 80016ea:	4b6f      	ldr	r3, [pc, #444]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 80016ec:	681b      	ldr	r3, [r3, #0]
 80016ee:	4a6e      	ldr	r2, [pc, #440]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 80016f0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80016f4:	6013      	str	r3, [r2, #0]
 80016f6:	e00b      	b.n	8001710 <HAL_RCC_OscConfig+0xd4>
 80016f8:	4b6b      	ldr	r3, [pc, #428]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 80016fa:	681b      	ldr	r3, [r3, #0]
 80016fc:	4a6a      	ldr	r2, [pc, #424]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 80016fe:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001702:	6013      	str	r3, [r2, #0]
 8001704:	4b68      	ldr	r3, [pc, #416]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 8001706:	681b      	ldr	r3, [r3, #0]
 8001708:	4a67      	ldr	r2, [pc, #412]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 800170a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800170e:	6013      	str	r3, [r2, #0]
 8001710:	687b      	ldr	r3, [r7, #4]
 8001712:	685b      	ldr	r3, [r3, #4]
 8001714:	2b00      	cmp	r3, #0
 8001716:	d013      	beq.n	8001740 <HAL_RCC_OscConfig+0x104>
 8001718:	f7ff fcc4 	bl	80010a4 <HAL_GetTick>
 800171c:	6138      	str	r0, [r7, #16]
 800171e:	e008      	b.n	8001732 <HAL_RCC_OscConfig+0xf6>
 8001720:	f7ff fcc0 	bl	80010a4 <HAL_GetTick>
 8001724:	4602      	mov	r2, r0
 8001726:	693b      	ldr	r3, [r7, #16]
 8001728:	1ad3      	subs	r3, r2, r3
 800172a:	2b64      	cmp	r3, #100	; 0x64
 800172c:	d901      	bls.n	8001732 <HAL_RCC_OscConfig+0xf6>
 800172e:	2303      	movs	r3, #3
 8001730:	e200      	b.n	8001b34 <HAL_RCC_OscConfig+0x4f8>
 8001732:	4b5d      	ldr	r3, [pc, #372]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 8001734:	681b      	ldr	r3, [r3, #0]
 8001736:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800173a:	2b00      	cmp	r3, #0
 800173c:	d0f0      	beq.n	8001720 <HAL_RCC_OscConfig+0xe4>
 800173e:	e014      	b.n	800176a <HAL_RCC_OscConfig+0x12e>
 8001740:	f7ff fcb0 	bl	80010a4 <HAL_GetTick>
 8001744:	6138      	str	r0, [r7, #16]
 8001746:	e008      	b.n	800175a <HAL_RCC_OscConfig+0x11e>
 8001748:	f7ff fcac 	bl	80010a4 <HAL_GetTick>
 800174c:	4602      	mov	r2, r0
 800174e:	693b      	ldr	r3, [r7, #16]
 8001750:	1ad3      	subs	r3, r2, r3
 8001752:	2b64      	cmp	r3, #100	; 0x64
 8001754:	d901      	bls.n	800175a <HAL_RCC_OscConfig+0x11e>
 8001756:	2303      	movs	r3, #3
 8001758:	e1ec      	b.n	8001b34 <HAL_RCC_OscConfig+0x4f8>
 800175a:	4b53      	ldr	r3, [pc, #332]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 800175c:	681b      	ldr	r3, [r3, #0]
 800175e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001762:	2b00      	cmp	r3, #0
 8001764:	d1f0      	bne.n	8001748 <HAL_RCC_OscConfig+0x10c>
 8001766:	e000      	b.n	800176a <HAL_RCC_OscConfig+0x12e>
 8001768:	bf00      	nop
 800176a:	687b      	ldr	r3, [r7, #4]
 800176c:	681b      	ldr	r3, [r3, #0]
 800176e:	f003 0302 	and.w	r3, r3, #2
 8001772:	2b00      	cmp	r3, #0
 8001774:	d063      	beq.n	800183e <HAL_RCC_OscConfig+0x202>
 8001776:	4b4c      	ldr	r3, [pc, #304]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 8001778:	685b      	ldr	r3, [r3, #4]
 800177a:	f003 030c 	and.w	r3, r3, #12
 800177e:	2b00      	cmp	r3, #0
 8001780:	d00b      	beq.n	800179a <HAL_RCC_OscConfig+0x15e>
 8001782:	4b49      	ldr	r3, [pc, #292]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 8001784:	685b      	ldr	r3, [r3, #4]
 8001786:	f003 030c 	and.w	r3, r3, #12
 800178a:	2b08      	cmp	r3, #8
 800178c:	d11c      	bne.n	80017c8 <HAL_RCC_OscConfig+0x18c>
 800178e:	4b46      	ldr	r3, [pc, #280]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 8001790:	685b      	ldr	r3, [r3, #4]
 8001792:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001796:	2b00      	cmp	r3, #0
 8001798:	d116      	bne.n	80017c8 <HAL_RCC_OscConfig+0x18c>
 800179a:	4b43      	ldr	r3, [pc, #268]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 800179c:	681b      	ldr	r3, [r3, #0]
 800179e:	f003 0302 	and.w	r3, r3, #2
 80017a2:	2b00      	cmp	r3, #0
 80017a4:	d005      	beq.n	80017b2 <HAL_RCC_OscConfig+0x176>
 80017a6:	687b      	ldr	r3, [r7, #4]
 80017a8:	691b      	ldr	r3, [r3, #16]
 80017aa:	2b01      	cmp	r3, #1
 80017ac:	d001      	beq.n	80017b2 <HAL_RCC_OscConfig+0x176>
 80017ae:	2301      	movs	r3, #1
 80017b0:	e1c0      	b.n	8001b34 <HAL_RCC_OscConfig+0x4f8>
 80017b2:	4b3d      	ldr	r3, [pc, #244]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 80017b4:	681b      	ldr	r3, [r3, #0]
 80017b6:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80017ba:	687b      	ldr	r3, [r7, #4]
 80017bc:	695b      	ldr	r3, [r3, #20]
 80017be:	00db      	lsls	r3, r3, #3
 80017c0:	4939      	ldr	r1, [pc, #228]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 80017c2:	4313      	orrs	r3, r2
 80017c4:	600b      	str	r3, [r1, #0]
 80017c6:	e03a      	b.n	800183e <HAL_RCC_OscConfig+0x202>
 80017c8:	687b      	ldr	r3, [r7, #4]
 80017ca:	691b      	ldr	r3, [r3, #16]
 80017cc:	2b00      	cmp	r3, #0
 80017ce:	d020      	beq.n	8001812 <HAL_RCC_OscConfig+0x1d6>
 80017d0:	4b36      	ldr	r3, [pc, #216]	; (80018ac <HAL_RCC_OscConfig+0x270>)
 80017d2:	2201      	movs	r2, #1
 80017d4:	601a      	str	r2, [r3, #0]
 80017d6:	f7ff fc65 	bl	80010a4 <HAL_GetTick>
 80017da:	6138      	str	r0, [r7, #16]
 80017dc:	e008      	b.n	80017f0 <HAL_RCC_OscConfig+0x1b4>
 80017de:	f7ff fc61 	bl	80010a4 <HAL_GetTick>
 80017e2:	4602      	mov	r2, r0
 80017e4:	693b      	ldr	r3, [r7, #16]
 80017e6:	1ad3      	subs	r3, r2, r3
 80017e8:	2b02      	cmp	r3, #2
 80017ea:	d901      	bls.n	80017f0 <HAL_RCC_OscConfig+0x1b4>
 80017ec:	2303      	movs	r3, #3
 80017ee:	e1a1      	b.n	8001b34 <HAL_RCC_OscConfig+0x4f8>
 80017f0:	4b2d      	ldr	r3, [pc, #180]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 80017f2:	681b      	ldr	r3, [r3, #0]
 80017f4:	f003 0302 	and.w	r3, r3, #2
 80017f8:	2b00      	cmp	r3, #0
 80017fa:	d0f0      	beq.n	80017de <HAL_RCC_OscConfig+0x1a2>
 80017fc:	4b2a      	ldr	r3, [pc, #168]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 80017fe:	681b      	ldr	r3, [r3, #0]
 8001800:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001804:	687b      	ldr	r3, [r7, #4]
 8001806:	695b      	ldr	r3, [r3, #20]
 8001808:	00db      	lsls	r3, r3, #3
 800180a:	4927      	ldr	r1, [pc, #156]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 800180c:	4313      	orrs	r3, r2
 800180e:	600b      	str	r3, [r1, #0]
 8001810:	e015      	b.n	800183e <HAL_RCC_OscConfig+0x202>
 8001812:	4b26      	ldr	r3, [pc, #152]	; (80018ac <HAL_RCC_OscConfig+0x270>)
 8001814:	2200      	movs	r2, #0
 8001816:	601a      	str	r2, [r3, #0]
 8001818:	f7ff fc44 	bl	80010a4 <HAL_GetTick>
 800181c:	6138      	str	r0, [r7, #16]
 800181e:	e008      	b.n	8001832 <HAL_RCC_OscConfig+0x1f6>
 8001820:	f7ff fc40 	bl	80010a4 <HAL_GetTick>
 8001824:	4602      	mov	r2, r0
 8001826:	693b      	ldr	r3, [r7, #16]
 8001828:	1ad3      	subs	r3, r2, r3
 800182a:	2b02      	cmp	r3, #2
 800182c:	d901      	bls.n	8001832 <HAL_RCC_OscConfig+0x1f6>
 800182e:	2303      	movs	r3, #3
 8001830:	e180      	b.n	8001b34 <HAL_RCC_OscConfig+0x4f8>
 8001832:	4b1d      	ldr	r3, [pc, #116]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 8001834:	681b      	ldr	r3, [r3, #0]
 8001836:	f003 0302 	and.w	r3, r3, #2
 800183a:	2b00      	cmp	r3, #0
 800183c:	d1f0      	bne.n	8001820 <HAL_RCC_OscConfig+0x1e4>
 800183e:	687b      	ldr	r3, [r7, #4]
 8001840:	681b      	ldr	r3, [r3, #0]
 8001842:	f003 0308 	and.w	r3, r3, #8
 8001846:	2b00      	cmp	r3, #0
 8001848:	d03a      	beq.n	80018c0 <HAL_RCC_OscConfig+0x284>
 800184a:	687b      	ldr	r3, [r7, #4]
 800184c:	699b      	ldr	r3, [r3, #24]
 800184e:	2b00      	cmp	r3, #0
 8001850:	d019      	beq.n	8001886 <HAL_RCC_OscConfig+0x24a>
 8001852:	4b17      	ldr	r3, [pc, #92]	; (80018b0 <HAL_RCC_OscConfig+0x274>)
 8001854:	2201      	movs	r2, #1
 8001856:	601a      	str	r2, [r3, #0]
 8001858:	f7ff fc24 	bl	80010a4 <HAL_GetTick>
 800185c:	6138      	str	r0, [r7, #16]
 800185e:	e008      	b.n	8001872 <HAL_RCC_OscConfig+0x236>
 8001860:	f7ff fc20 	bl	80010a4 <HAL_GetTick>
 8001864:	4602      	mov	r2, r0
 8001866:	693b      	ldr	r3, [r7, #16]
 8001868:	1ad3      	subs	r3, r2, r3
 800186a:	2b02      	cmp	r3, #2
 800186c:	d901      	bls.n	8001872 <HAL_RCC_OscConfig+0x236>
 800186e:	2303      	movs	r3, #3
 8001870:	e160      	b.n	8001b34 <HAL_RCC_OscConfig+0x4f8>
 8001872:	4b0d      	ldr	r3, [pc, #52]	; (80018a8 <HAL_RCC_OscConfig+0x26c>)
 8001874:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001876:	f003 0302 	and.w	r3, r3, #2
 800187a:	2b00      	cmp	r3, #0
 800187c:	d0f0      	beq.n	8001860 <HAL_RCC_OscConfig+0x224>
 800187e:	2001      	movs	r0, #1
 8001880:	f000 fa9c 	bl	8001dbc <RCC_Delay>
 8001884:	e01c      	b.n	80018c0 <HAL_RCC_OscConfig+0x284>
 8001886:	4b0a      	ldr	r3, [pc, #40]	; (80018b0 <HAL_RCC_OscConfig+0x274>)
 8001888:	2200      	movs	r2, #0
 800188a:	601a      	str	r2, [r3, #0]
 800188c:	f7ff fc0a 	bl	80010a4 <HAL_GetTick>
 8001890:	6138      	str	r0, [r7, #16]
 8001892:	e00f      	b.n	80018b4 <HAL_RCC_OscConfig+0x278>
 8001894:	f7ff fc06 	bl	80010a4 <HAL_GetTick>
 8001898:	4602      	mov	r2, r0
 800189a:	693b      	ldr	r3, [r7, #16]
 800189c:	1ad3      	subs	r3, r2, r3
 800189e:	2b02      	cmp	r3, #2
 80018a0:	d908      	bls.n	80018b4 <HAL_RCC_OscConfig+0x278>
 80018a2:	2303      	movs	r3, #3
 80018a4:	e146      	b.n	8001b34 <HAL_RCC_OscConfig+0x4f8>
 80018a6:	bf00      	nop
 80018a8:	40021000 	.word	0x40021000
 80018ac:	42420000 	.word	0x42420000
 80018b0:	42420480 	.word	0x42420480
 80018b4:	4b92      	ldr	r3, [pc, #584]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 80018b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80018b8:	f003 0302 	and.w	r3, r3, #2
 80018bc:	2b00      	cmp	r3, #0
 80018be:	d1e9      	bne.n	8001894 <HAL_RCC_OscConfig+0x258>
 80018c0:	687b      	ldr	r3, [r7, #4]
 80018c2:	681b      	ldr	r3, [r3, #0]
 80018c4:	f003 0304 	and.w	r3, r3, #4
 80018c8:	2b00      	cmp	r3, #0
 80018ca:	f000 80a6 	beq.w	8001a1a <HAL_RCC_OscConfig+0x3de>
 80018ce:	2300      	movs	r3, #0
 80018d0:	75fb      	strb	r3, [r7, #23]
 80018d2:	4b8b      	ldr	r3, [pc, #556]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 80018d4:	69db      	ldr	r3, [r3, #28]
 80018d6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80018da:	2b00      	cmp	r3, #0
 80018dc:	d10d      	bne.n	80018fa <HAL_RCC_OscConfig+0x2be>
 80018de:	4b88      	ldr	r3, [pc, #544]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 80018e0:	69db      	ldr	r3, [r3, #28]
 80018e2:	4a87      	ldr	r2, [pc, #540]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 80018e4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80018e8:	61d3      	str	r3, [r2, #28]
 80018ea:	4b85      	ldr	r3, [pc, #532]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 80018ec:	69db      	ldr	r3, [r3, #28]
 80018ee:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80018f2:	60bb      	str	r3, [r7, #8]
 80018f4:	68bb      	ldr	r3, [r7, #8]
 80018f6:	2301      	movs	r3, #1
 80018f8:	75fb      	strb	r3, [r7, #23]
 80018fa:	4b82      	ldr	r3, [pc, #520]	; (8001b04 <HAL_RCC_OscConfig+0x4c8>)
 80018fc:	681b      	ldr	r3, [r3, #0]
 80018fe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001902:	2b00      	cmp	r3, #0
 8001904:	d118      	bne.n	8001938 <HAL_RCC_OscConfig+0x2fc>
 8001906:	4b7f      	ldr	r3, [pc, #508]	; (8001b04 <HAL_RCC_OscConfig+0x4c8>)
 8001908:	681b      	ldr	r3, [r3, #0]
 800190a:	4a7e      	ldr	r2, [pc, #504]	; (8001b04 <HAL_RCC_OscConfig+0x4c8>)
 800190c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001910:	6013      	str	r3, [r2, #0]
 8001912:	f7ff fbc7 	bl	80010a4 <HAL_GetTick>
 8001916:	6138      	str	r0, [r7, #16]
 8001918:	e008      	b.n	800192c <HAL_RCC_OscConfig+0x2f0>
 800191a:	f7ff fbc3 	bl	80010a4 <HAL_GetTick>
 800191e:	4602      	mov	r2, r0
 8001920:	693b      	ldr	r3, [r7, #16]
 8001922:	1ad3      	subs	r3, r2, r3
 8001924:	2b64      	cmp	r3, #100	; 0x64
 8001926:	d901      	bls.n	800192c <HAL_RCC_OscConfig+0x2f0>
 8001928:	2303      	movs	r3, #3
 800192a:	e103      	b.n	8001b34 <HAL_RCC_OscConfig+0x4f8>
 800192c:	4b75      	ldr	r3, [pc, #468]	; (8001b04 <HAL_RCC_OscConfig+0x4c8>)
 800192e:	681b      	ldr	r3, [r3, #0]
 8001930:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001934:	2b00      	cmp	r3, #0
 8001936:	d0f0      	beq.n	800191a <HAL_RCC_OscConfig+0x2de>
 8001938:	687b      	ldr	r3, [r7, #4]
 800193a:	68db      	ldr	r3, [r3, #12]
 800193c:	2b01      	cmp	r3, #1
 800193e:	d106      	bne.n	800194e <HAL_RCC_OscConfig+0x312>
 8001940:	4b6f      	ldr	r3, [pc, #444]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001942:	6a1b      	ldr	r3, [r3, #32]
 8001944:	4a6e      	ldr	r2, [pc, #440]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001946:	f043 0301 	orr.w	r3, r3, #1
 800194a:	6213      	str	r3, [r2, #32]
 800194c:	e02d      	b.n	80019aa <HAL_RCC_OscConfig+0x36e>
 800194e:	687b      	ldr	r3, [r7, #4]
 8001950:	68db      	ldr	r3, [r3, #12]
 8001952:	2b00      	cmp	r3, #0
 8001954:	d10c      	bne.n	8001970 <HAL_RCC_OscConfig+0x334>
 8001956:	4b6a      	ldr	r3, [pc, #424]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001958:	6a1b      	ldr	r3, [r3, #32]
 800195a:	4a69      	ldr	r2, [pc, #420]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 800195c:	f023 0301 	bic.w	r3, r3, #1
 8001960:	6213      	str	r3, [r2, #32]
 8001962:	4b67      	ldr	r3, [pc, #412]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001964:	6a1b      	ldr	r3, [r3, #32]
 8001966:	4a66      	ldr	r2, [pc, #408]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001968:	f023 0304 	bic.w	r3, r3, #4
 800196c:	6213      	str	r3, [r2, #32]
 800196e:	e01c      	b.n	80019aa <HAL_RCC_OscConfig+0x36e>
 8001970:	687b      	ldr	r3, [r7, #4]
 8001972:	68db      	ldr	r3, [r3, #12]
 8001974:	2b05      	cmp	r3, #5
 8001976:	d10c      	bne.n	8001992 <HAL_RCC_OscConfig+0x356>
 8001978:	4b61      	ldr	r3, [pc, #388]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 800197a:	6a1b      	ldr	r3, [r3, #32]
 800197c:	4a60      	ldr	r2, [pc, #384]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 800197e:	f043 0304 	orr.w	r3, r3, #4
 8001982:	6213      	str	r3, [r2, #32]
 8001984:	4b5e      	ldr	r3, [pc, #376]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001986:	6a1b      	ldr	r3, [r3, #32]
 8001988:	4a5d      	ldr	r2, [pc, #372]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 800198a:	f043 0301 	orr.w	r3, r3, #1
 800198e:	6213      	str	r3, [r2, #32]
 8001990:	e00b      	b.n	80019aa <HAL_RCC_OscConfig+0x36e>
 8001992:	4b5b      	ldr	r3, [pc, #364]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001994:	6a1b      	ldr	r3, [r3, #32]
 8001996:	4a5a      	ldr	r2, [pc, #360]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001998:	f023 0301 	bic.w	r3, r3, #1
 800199c:	6213      	str	r3, [r2, #32]
 800199e:	4b58      	ldr	r3, [pc, #352]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 80019a0:	6a1b      	ldr	r3, [r3, #32]
 80019a2:	4a57      	ldr	r2, [pc, #348]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 80019a4:	f023 0304 	bic.w	r3, r3, #4
 80019a8:	6213      	str	r3, [r2, #32]
 80019aa:	687b      	ldr	r3, [r7, #4]
 80019ac:	68db      	ldr	r3, [r3, #12]
 80019ae:	2b00      	cmp	r3, #0
 80019b0:	d015      	beq.n	80019de <HAL_RCC_OscConfig+0x3a2>
 80019b2:	f7ff fb77 	bl	80010a4 <HAL_GetTick>
 80019b6:	6138      	str	r0, [r7, #16]
 80019b8:	e00a      	b.n	80019d0 <HAL_RCC_OscConfig+0x394>
 80019ba:	f7ff fb73 	bl	80010a4 <HAL_GetTick>
 80019be:	4602      	mov	r2, r0
 80019c0:	693b      	ldr	r3, [r7, #16]
 80019c2:	1ad3      	subs	r3, r2, r3
 80019c4:	f241 3288 	movw	r2, #5000	; 0x1388
 80019c8:	4293      	cmp	r3, r2
 80019ca:	d901      	bls.n	80019d0 <HAL_RCC_OscConfig+0x394>
 80019cc:	2303      	movs	r3, #3
 80019ce:	e0b1      	b.n	8001b34 <HAL_RCC_OscConfig+0x4f8>
 80019d0:	4b4b      	ldr	r3, [pc, #300]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 80019d2:	6a1b      	ldr	r3, [r3, #32]
 80019d4:	f003 0302 	and.w	r3, r3, #2
 80019d8:	2b00      	cmp	r3, #0
 80019da:	d0ee      	beq.n	80019ba <HAL_RCC_OscConfig+0x37e>
 80019dc:	e014      	b.n	8001a08 <HAL_RCC_OscConfig+0x3cc>
 80019de:	f7ff fb61 	bl	80010a4 <HAL_GetTick>
 80019e2:	6138      	str	r0, [r7, #16]
 80019e4:	e00a      	b.n	80019fc <HAL_RCC_OscConfig+0x3c0>
 80019e6:	f7ff fb5d 	bl	80010a4 <HAL_GetTick>
 80019ea:	4602      	mov	r2, r0
 80019ec:	693b      	ldr	r3, [r7, #16]
 80019ee:	1ad3      	subs	r3, r2, r3
 80019f0:	f241 3288 	movw	r2, #5000	; 0x1388
 80019f4:	4293      	cmp	r3, r2
 80019f6:	d901      	bls.n	80019fc <HAL_RCC_OscConfig+0x3c0>
 80019f8:	2303      	movs	r3, #3
 80019fa:	e09b      	b.n	8001b34 <HAL_RCC_OscConfig+0x4f8>
 80019fc:	4b40      	ldr	r3, [pc, #256]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 80019fe:	6a1b      	ldr	r3, [r3, #32]
 8001a00:	f003 0302 	and.w	r3, r3, #2
 8001a04:	2b00      	cmp	r3, #0
 8001a06:	d1ee      	bne.n	80019e6 <HAL_RCC_OscConfig+0x3aa>
 8001a08:	7dfb      	ldrb	r3, [r7, #23]
 8001a0a:	2b01      	cmp	r3, #1
 8001a0c:	d105      	bne.n	8001a1a <HAL_RCC_OscConfig+0x3de>
 8001a0e:	4b3c      	ldr	r3, [pc, #240]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001a10:	69db      	ldr	r3, [r3, #28]
 8001a12:	4a3b      	ldr	r2, [pc, #236]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001a14:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001a18:	61d3      	str	r3, [r2, #28]
 8001a1a:	687b      	ldr	r3, [r7, #4]
 8001a1c:	69db      	ldr	r3, [r3, #28]
 8001a1e:	2b00      	cmp	r3, #0
 8001a20:	f000 8087 	beq.w	8001b32 <HAL_RCC_OscConfig+0x4f6>
 8001a24:	4b36      	ldr	r3, [pc, #216]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001a26:	685b      	ldr	r3, [r3, #4]
 8001a28:	f003 030c 	and.w	r3, r3, #12
 8001a2c:	2b08      	cmp	r3, #8
 8001a2e:	d061      	beq.n	8001af4 <HAL_RCC_OscConfig+0x4b8>
 8001a30:	687b      	ldr	r3, [r7, #4]
 8001a32:	69db      	ldr	r3, [r3, #28]
 8001a34:	2b02      	cmp	r3, #2
 8001a36:	d146      	bne.n	8001ac6 <HAL_RCC_OscConfig+0x48a>
 8001a38:	4b33      	ldr	r3, [pc, #204]	; (8001b08 <HAL_RCC_OscConfig+0x4cc>)
 8001a3a:	2200      	movs	r2, #0
 8001a3c:	601a      	str	r2, [r3, #0]
 8001a3e:	f7ff fb31 	bl	80010a4 <HAL_GetTick>
 8001a42:	6138      	str	r0, [r7, #16]
 8001a44:	e008      	b.n	8001a58 <HAL_RCC_OscConfig+0x41c>
 8001a46:	f7ff fb2d 	bl	80010a4 <HAL_GetTick>
 8001a4a:	4602      	mov	r2, r0
 8001a4c:	693b      	ldr	r3, [r7, #16]
 8001a4e:	1ad3      	subs	r3, r2, r3
 8001a50:	2b02      	cmp	r3, #2
 8001a52:	d901      	bls.n	8001a58 <HAL_RCC_OscConfig+0x41c>
 8001a54:	2303      	movs	r3, #3
 8001a56:	e06d      	b.n	8001b34 <HAL_RCC_OscConfig+0x4f8>
 8001a58:	4b29      	ldr	r3, [pc, #164]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001a5a:	681b      	ldr	r3, [r3, #0]
 8001a5c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001a60:	2b00      	cmp	r3, #0
 8001a62:	d1f0      	bne.n	8001a46 <HAL_RCC_OscConfig+0x40a>
 8001a64:	687b      	ldr	r3, [r7, #4]
 8001a66:	6a1b      	ldr	r3, [r3, #32]
 8001a68:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001a6c:	d108      	bne.n	8001a80 <HAL_RCC_OscConfig+0x444>
 8001a6e:	4b24      	ldr	r3, [pc, #144]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001a70:	685b      	ldr	r3, [r3, #4]
 8001a72:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001a76:	687b      	ldr	r3, [r7, #4]
 8001a78:	689b      	ldr	r3, [r3, #8]
 8001a7a:	4921      	ldr	r1, [pc, #132]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001a7c:	4313      	orrs	r3, r2
 8001a7e:	604b      	str	r3, [r1, #4]
 8001a80:	4b1f      	ldr	r3, [pc, #124]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001a82:	685b      	ldr	r3, [r3, #4]
 8001a84:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001a88:	687b      	ldr	r3, [r7, #4]
 8001a8a:	6a19      	ldr	r1, [r3, #32]
 8001a8c:	687b      	ldr	r3, [r7, #4]
 8001a8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a90:	430b      	orrs	r3, r1
 8001a92:	491b      	ldr	r1, [pc, #108]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001a94:	4313      	orrs	r3, r2
 8001a96:	604b      	str	r3, [r1, #4]
 8001a98:	4b1b      	ldr	r3, [pc, #108]	; (8001b08 <HAL_RCC_OscConfig+0x4cc>)
 8001a9a:	2201      	movs	r2, #1
 8001a9c:	601a      	str	r2, [r3, #0]
 8001a9e:	f7ff fb01 	bl	80010a4 <HAL_GetTick>
 8001aa2:	6138      	str	r0, [r7, #16]
 8001aa4:	e008      	b.n	8001ab8 <HAL_RCC_OscConfig+0x47c>
 8001aa6:	f7ff fafd 	bl	80010a4 <HAL_GetTick>
 8001aaa:	4602      	mov	r2, r0
 8001aac:	693b      	ldr	r3, [r7, #16]
 8001aae:	1ad3      	subs	r3, r2, r3
 8001ab0:	2b02      	cmp	r3, #2
 8001ab2:	d901      	bls.n	8001ab8 <HAL_RCC_OscConfig+0x47c>
 8001ab4:	2303      	movs	r3, #3
 8001ab6:	e03d      	b.n	8001b34 <HAL_RCC_OscConfig+0x4f8>
 8001ab8:	4b11      	ldr	r3, [pc, #68]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001aba:	681b      	ldr	r3, [r3, #0]
 8001abc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001ac0:	2b00      	cmp	r3, #0
 8001ac2:	d0f0      	beq.n	8001aa6 <HAL_RCC_OscConfig+0x46a>
 8001ac4:	e035      	b.n	8001b32 <HAL_RCC_OscConfig+0x4f6>
 8001ac6:	4b10      	ldr	r3, [pc, #64]	; (8001b08 <HAL_RCC_OscConfig+0x4cc>)
 8001ac8:	2200      	movs	r2, #0
 8001aca:	601a      	str	r2, [r3, #0]
 8001acc:	f7ff faea 	bl	80010a4 <HAL_GetTick>
 8001ad0:	6138      	str	r0, [r7, #16]
 8001ad2:	e008      	b.n	8001ae6 <HAL_RCC_OscConfig+0x4aa>
 8001ad4:	f7ff fae6 	bl	80010a4 <HAL_GetTick>
 8001ad8:	4602      	mov	r2, r0
 8001ada:	693b      	ldr	r3, [r7, #16]
 8001adc:	1ad3      	subs	r3, r2, r3
 8001ade:	2b02      	cmp	r3, #2
 8001ae0:	d901      	bls.n	8001ae6 <HAL_RCC_OscConfig+0x4aa>
 8001ae2:	2303      	movs	r3, #3
 8001ae4:	e026      	b.n	8001b34 <HAL_RCC_OscConfig+0x4f8>
 8001ae6:	4b06      	ldr	r3, [pc, #24]	; (8001b00 <HAL_RCC_OscConfig+0x4c4>)
 8001ae8:	681b      	ldr	r3, [r3, #0]
 8001aea:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001aee:	2b00      	cmp	r3, #0
 8001af0:	d1f0      	bne.n	8001ad4 <HAL_RCC_OscConfig+0x498>
 8001af2:	e01e      	b.n	8001b32 <HAL_RCC_OscConfig+0x4f6>
 8001af4:	687b      	ldr	r3, [r7, #4]
 8001af6:	69db      	ldr	r3, [r3, #28]
 8001af8:	2b01      	cmp	r3, #1
 8001afa:	d107      	bne.n	8001b0c <HAL_RCC_OscConfig+0x4d0>
 8001afc:	2301      	movs	r3, #1
 8001afe:	e019      	b.n	8001b34 <HAL_RCC_OscConfig+0x4f8>
 8001b00:	40021000 	.word	0x40021000
 8001b04:	40007000 	.word	0x40007000
 8001b08:	42420060 	.word	0x42420060
 8001b0c:	4b0b      	ldr	r3, [pc, #44]	; (8001b3c <HAL_RCC_OscConfig+0x500>)
 8001b0e:	685b      	ldr	r3, [r3, #4]
 8001b10:	60fb      	str	r3, [r7, #12]
 8001b12:	68fb      	ldr	r3, [r7, #12]
 8001b14:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001b18:	687b      	ldr	r3, [r7, #4]
 8001b1a:	6a1b      	ldr	r3, [r3, #32]
 8001b1c:	429a      	cmp	r2, r3
 8001b1e:	d106      	bne.n	8001b2e <HAL_RCC_OscConfig+0x4f2>
 8001b20:	68fb      	ldr	r3, [r7, #12]
 8001b22:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001b26:	687b      	ldr	r3, [r7, #4]
 8001b28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001b2a:	429a      	cmp	r2, r3
 8001b2c:	d001      	beq.n	8001b32 <HAL_RCC_OscConfig+0x4f6>
 8001b2e:	2301      	movs	r3, #1
 8001b30:	e000      	b.n	8001b34 <HAL_RCC_OscConfig+0x4f8>
 8001b32:	2300      	movs	r3, #0
 8001b34:	4618      	mov	r0, r3
 8001b36:	3718      	adds	r7, #24
 8001b38:	46bd      	mov	sp, r7
 8001b3a:	bd80      	pop	{r7, pc}
 8001b3c:	40021000 	.word	0x40021000

08001b40 <HAL_RCC_ClockConfig>:
 8001b40:	b580      	push	{r7, lr}
 8001b42:	b084      	sub	sp, #16
 8001b44:	af00      	add	r7, sp, #0
 8001b46:	6078      	str	r0, [r7, #4]
 8001b48:	6039      	str	r1, [r7, #0]
 8001b4a:	687b      	ldr	r3, [r7, #4]
 8001b4c:	2b00      	cmp	r3, #0
 8001b4e:	d101      	bne.n	8001b54 <HAL_RCC_ClockConfig+0x14>
 8001b50:	2301      	movs	r3, #1
 8001b52:	e0d0      	b.n	8001cf6 <HAL_RCC_ClockConfig+0x1b6>
 8001b54:	4b6a      	ldr	r3, [pc, #424]	; (8001d00 <HAL_RCC_ClockConfig+0x1c0>)
 8001b56:	681b      	ldr	r3, [r3, #0]
 8001b58:	f003 0307 	and.w	r3, r3, #7
 8001b5c:	683a      	ldr	r2, [r7, #0]
 8001b5e:	429a      	cmp	r2, r3
 8001b60:	d910      	bls.n	8001b84 <HAL_RCC_ClockConfig+0x44>
 8001b62:	4b67      	ldr	r3, [pc, #412]	; (8001d00 <HAL_RCC_ClockConfig+0x1c0>)
 8001b64:	681b      	ldr	r3, [r3, #0]
 8001b66:	f023 0207 	bic.w	r2, r3, #7
 8001b6a:	4965      	ldr	r1, [pc, #404]	; (8001d00 <HAL_RCC_ClockConfig+0x1c0>)
 8001b6c:	683b      	ldr	r3, [r7, #0]
 8001b6e:	4313      	orrs	r3, r2
 8001b70:	600b      	str	r3, [r1, #0]
 8001b72:	4b63      	ldr	r3, [pc, #396]	; (8001d00 <HAL_RCC_ClockConfig+0x1c0>)
 8001b74:	681b      	ldr	r3, [r3, #0]
 8001b76:	f003 0307 	and.w	r3, r3, #7
 8001b7a:	683a      	ldr	r2, [r7, #0]
 8001b7c:	429a      	cmp	r2, r3
 8001b7e:	d001      	beq.n	8001b84 <HAL_RCC_ClockConfig+0x44>
 8001b80:	2301      	movs	r3, #1
 8001b82:	e0b8      	b.n	8001cf6 <HAL_RCC_ClockConfig+0x1b6>
 8001b84:	687b      	ldr	r3, [r7, #4]
 8001b86:	681b      	ldr	r3, [r3, #0]
 8001b88:	f003 0302 	and.w	r3, r3, #2
 8001b8c:	2b00      	cmp	r3, #0
 8001b8e:	d020      	beq.n	8001bd2 <HAL_RCC_ClockConfig+0x92>
 8001b90:	687b      	ldr	r3, [r7, #4]
 8001b92:	681b      	ldr	r3, [r3, #0]
 8001b94:	f003 0304 	and.w	r3, r3, #4
 8001b98:	2b00      	cmp	r3, #0
 8001b9a:	d005      	beq.n	8001ba8 <HAL_RCC_ClockConfig+0x68>
 8001b9c:	4b59      	ldr	r3, [pc, #356]	; (8001d04 <HAL_RCC_ClockConfig+0x1c4>)
 8001b9e:	685b      	ldr	r3, [r3, #4]
 8001ba0:	4a58      	ldr	r2, [pc, #352]	; (8001d04 <HAL_RCC_ClockConfig+0x1c4>)
 8001ba2:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001ba6:	6053      	str	r3, [r2, #4]
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	f003 0308 	and.w	r3, r3, #8
 8001bb0:	2b00      	cmp	r3, #0
 8001bb2:	d005      	beq.n	8001bc0 <HAL_RCC_ClockConfig+0x80>
 8001bb4:	4b53      	ldr	r3, [pc, #332]	; (8001d04 <HAL_RCC_ClockConfig+0x1c4>)
 8001bb6:	685b      	ldr	r3, [r3, #4]
 8001bb8:	4a52      	ldr	r2, [pc, #328]	; (8001d04 <HAL_RCC_ClockConfig+0x1c4>)
 8001bba:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8001bbe:	6053      	str	r3, [r2, #4]
 8001bc0:	4b50      	ldr	r3, [pc, #320]	; (8001d04 <HAL_RCC_ClockConfig+0x1c4>)
 8001bc2:	685b      	ldr	r3, [r3, #4]
 8001bc4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001bc8:	687b      	ldr	r3, [r7, #4]
 8001bca:	689b      	ldr	r3, [r3, #8]
 8001bcc:	494d      	ldr	r1, [pc, #308]	; (8001d04 <HAL_RCC_ClockConfig+0x1c4>)
 8001bce:	4313      	orrs	r3, r2
 8001bd0:	604b      	str	r3, [r1, #4]
 8001bd2:	687b      	ldr	r3, [r7, #4]
 8001bd4:	681b      	ldr	r3, [r3, #0]
 8001bd6:	f003 0301 	and.w	r3, r3, #1
 8001bda:	2b00      	cmp	r3, #0
 8001bdc:	d040      	beq.n	8001c60 <HAL_RCC_ClockConfig+0x120>
 8001bde:	687b      	ldr	r3, [r7, #4]
 8001be0:	685b      	ldr	r3, [r3, #4]
 8001be2:	2b01      	cmp	r3, #1
 8001be4:	d107      	bne.n	8001bf6 <HAL_RCC_ClockConfig+0xb6>
 8001be6:	4b47      	ldr	r3, [pc, #284]	; (8001d04 <HAL_RCC_ClockConfig+0x1c4>)
 8001be8:	681b      	ldr	r3, [r3, #0]
 8001bea:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001bee:	2b00      	cmp	r3, #0
 8001bf0:	d115      	bne.n	8001c1e <HAL_RCC_ClockConfig+0xde>
 8001bf2:	2301      	movs	r3, #1
 8001bf4:	e07f      	b.n	8001cf6 <HAL_RCC_ClockConfig+0x1b6>
 8001bf6:	687b      	ldr	r3, [r7, #4]
 8001bf8:	685b      	ldr	r3, [r3, #4]
 8001bfa:	2b02      	cmp	r3, #2
 8001bfc:	d107      	bne.n	8001c0e <HAL_RCC_ClockConfig+0xce>
 8001bfe:	4b41      	ldr	r3, [pc, #260]	; (8001d04 <HAL_RCC_ClockConfig+0x1c4>)
 8001c00:	681b      	ldr	r3, [r3, #0]
 8001c02:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001c06:	2b00      	cmp	r3, #0
 8001c08:	d109      	bne.n	8001c1e <HAL_RCC_ClockConfig+0xde>
 8001c0a:	2301      	movs	r3, #1
 8001c0c:	e073      	b.n	8001cf6 <HAL_RCC_ClockConfig+0x1b6>
 8001c0e:	4b3d      	ldr	r3, [pc, #244]	; (8001d04 <HAL_RCC_ClockConfig+0x1c4>)
 8001c10:	681b      	ldr	r3, [r3, #0]
 8001c12:	f003 0302 	and.w	r3, r3, #2
 8001c16:	2b00      	cmp	r3, #0
 8001c18:	d101      	bne.n	8001c1e <HAL_RCC_ClockConfig+0xde>
 8001c1a:	2301      	movs	r3, #1
 8001c1c:	e06b      	b.n	8001cf6 <HAL_RCC_ClockConfig+0x1b6>
 8001c1e:	4b39      	ldr	r3, [pc, #228]	; (8001d04 <HAL_RCC_ClockConfig+0x1c4>)
 8001c20:	685b      	ldr	r3, [r3, #4]
 8001c22:	f023 0203 	bic.w	r2, r3, #3
 8001c26:	687b      	ldr	r3, [r7, #4]
 8001c28:	685b      	ldr	r3, [r3, #4]
 8001c2a:	4936      	ldr	r1, [pc, #216]	; (8001d04 <HAL_RCC_ClockConfig+0x1c4>)
 8001c2c:	4313      	orrs	r3, r2
 8001c2e:	604b      	str	r3, [r1, #4]
 8001c30:	f7ff fa38 	bl	80010a4 <HAL_GetTick>
 8001c34:	60f8      	str	r0, [r7, #12]
 8001c36:	e00a      	b.n	8001c4e <HAL_RCC_ClockConfig+0x10e>
 8001c38:	f7ff fa34 	bl	80010a4 <HAL_GetTick>
 8001c3c:	4602      	mov	r2, r0
 8001c3e:	68fb      	ldr	r3, [r7, #12]
 8001c40:	1ad3      	subs	r3, r2, r3
 8001c42:	f241 3288 	movw	r2, #5000	; 0x1388
 8001c46:	4293      	cmp	r3, r2
 8001c48:	d901      	bls.n	8001c4e <HAL_RCC_ClockConfig+0x10e>
 8001c4a:	2303      	movs	r3, #3
 8001c4c:	e053      	b.n	8001cf6 <HAL_RCC_ClockConfig+0x1b6>
 8001c4e:	4b2d      	ldr	r3, [pc, #180]	; (8001d04 <HAL_RCC_ClockConfig+0x1c4>)
 8001c50:	685b      	ldr	r3, [r3, #4]
 8001c52:	f003 020c 	and.w	r2, r3, #12
 8001c56:	687b      	ldr	r3, [r7, #4]
 8001c58:	685b      	ldr	r3, [r3, #4]
 8001c5a:	009b      	lsls	r3, r3, #2
 8001c5c:	429a      	cmp	r2, r3
 8001c5e:	d1eb      	bne.n	8001c38 <HAL_RCC_ClockConfig+0xf8>
 8001c60:	4b27      	ldr	r3, [pc, #156]	; (8001d00 <HAL_RCC_ClockConfig+0x1c0>)
 8001c62:	681b      	ldr	r3, [r3, #0]
 8001c64:	f003 0307 	and.w	r3, r3, #7
 8001c68:	683a      	ldr	r2, [r7, #0]
 8001c6a:	429a      	cmp	r2, r3
 8001c6c:	d210      	bcs.n	8001c90 <HAL_RCC_ClockConfig+0x150>
 8001c6e:	4b24      	ldr	r3, [pc, #144]	; (8001d00 <HAL_RCC_ClockConfig+0x1c0>)
 8001c70:	681b      	ldr	r3, [r3, #0]
 8001c72:	f023 0207 	bic.w	r2, r3, #7
 8001c76:	4922      	ldr	r1, [pc, #136]	; (8001d00 <HAL_RCC_ClockConfig+0x1c0>)
 8001c78:	683b      	ldr	r3, [r7, #0]
 8001c7a:	4313      	orrs	r3, r2
 8001c7c:	600b      	str	r3, [r1, #0]
 8001c7e:	4b20      	ldr	r3, [pc, #128]	; (8001d00 <HAL_RCC_ClockConfig+0x1c0>)
 8001c80:	681b      	ldr	r3, [r3, #0]
 8001c82:	f003 0307 	and.w	r3, r3, #7
 8001c86:	683a      	ldr	r2, [r7, #0]
 8001c88:	429a      	cmp	r2, r3
 8001c8a:	d001      	beq.n	8001c90 <HAL_RCC_ClockConfig+0x150>
 8001c8c:	2301      	movs	r3, #1
 8001c8e:	e032      	b.n	8001cf6 <HAL_RCC_ClockConfig+0x1b6>
 8001c90:	687b      	ldr	r3, [r7, #4]
 8001c92:	681b      	ldr	r3, [r3, #0]
 8001c94:	f003 0304 	and.w	r3, r3, #4
 8001c98:	2b00      	cmp	r3, #0
 8001c9a:	d008      	beq.n	8001cae <HAL_RCC_ClockConfig+0x16e>
 8001c9c:	4b19      	ldr	r3, [pc, #100]	; (8001d04 <HAL_RCC_ClockConfig+0x1c4>)
 8001c9e:	685b      	ldr	r3, [r3, #4]
 8001ca0:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	68db      	ldr	r3, [r3, #12]
 8001ca8:	4916      	ldr	r1, [pc, #88]	; (8001d04 <HAL_RCC_ClockConfig+0x1c4>)
 8001caa:	4313      	orrs	r3, r2
 8001cac:	604b      	str	r3, [r1, #4]
 8001cae:	687b      	ldr	r3, [r7, #4]
 8001cb0:	681b      	ldr	r3, [r3, #0]
 8001cb2:	f003 0308 	and.w	r3, r3, #8
 8001cb6:	2b00      	cmp	r3, #0
 8001cb8:	d009      	beq.n	8001cce <HAL_RCC_ClockConfig+0x18e>
 8001cba:	4b12      	ldr	r3, [pc, #72]	; (8001d04 <HAL_RCC_ClockConfig+0x1c4>)
 8001cbc:	685b      	ldr	r3, [r3, #4]
 8001cbe:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	691b      	ldr	r3, [r3, #16]
 8001cc6:	00db      	lsls	r3, r3, #3
 8001cc8:	490e      	ldr	r1, [pc, #56]	; (8001d04 <HAL_RCC_ClockConfig+0x1c4>)
 8001cca:	4313      	orrs	r3, r2
 8001ccc:	604b      	str	r3, [r1, #4]
 8001cce:	f000 f821 	bl	8001d14 <HAL_RCC_GetSysClockFreq>
 8001cd2:	4602      	mov	r2, r0
 8001cd4:	4b0b      	ldr	r3, [pc, #44]	; (8001d04 <HAL_RCC_ClockConfig+0x1c4>)
 8001cd6:	685b      	ldr	r3, [r3, #4]
 8001cd8:	091b      	lsrs	r3, r3, #4
 8001cda:	f003 030f 	and.w	r3, r3, #15
 8001cde:	490a      	ldr	r1, [pc, #40]	; (8001d08 <HAL_RCC_ClockConfig+0x1c8>)
 8001ce0:	5ccb      	ldrb	r3, [r1, r3]
 8001ce2:	fa22 f303 	lsr.w	r3, r2, r3
 8001ce6:	4a09      	ldr	r2, [pc, #36]	; (8001d0c <HAL_RCC_ClockConfig+0x1cc>)
 8001ce8:	6013      	str	r3, [r2, #0]
 8001cea:	4b09      	ldr	r3, [pc, #36]	; (8001d10 <HAL_RCC_ClockConfig+0x1d0>)
 8001cec:	681b      	ldr	r3, [r3, #0]
 8001cee:	4618      	mov	r0, r3
 8001cf0:	f7ff f996 	bl	8001020 <HAL_InitTick>
 8001cf4:	2300      	movs	r3, #0
 8001cf6:	4618      	mov	r0, r3
 8001cf8:	3710      	adds	r7, #16
 8001cfa:	46bd      	mov	sp, r7
 8001cfc:	bd80      	pop	{r7, pc}
 8001cfe:	bf00      	nop
 8001d00:	40022000 	.word	0x40022000
 8001d04:	40021000 	.word	0x40021000
 8001d08:	08002664 	.word	0x08002664
 8001d0c:	20000060 	.word	0x20000060
 8001d10:	20000064 	.word	0x20000064

08001d14 <HAL_RCC_GetSysClockFreq>:
 8001d14:	b480      	push	{r7}
 8001d16:	b087      	sub	sp, #28
 8001d18:	af00      	add	r7, sp, #0
 8001d1a:	2300      	movs	r3, #0
 8001d1c:	60fb      	str	r3, [r7, #12]
 8001d1e:	2300      	movs	r3, #0
 8001d20:	60bb      	str	r3, [r7, #8]
 8001d22:	2300      	movs	r3, #0
 8001d24:	617b      	str	r3, [r7, #20]
 8001d26:	2300      	movs	r3, #0
 8001d28:	607b      	str	r3, [r7, #4]
 8001d2a:	2300      	movs	r3, #0
 8001d2c:	613b      	str	r3, [r7, #16]
 8001d2e:	4b1e      	ldr	r3, [pc, #120]	; (8001da8 <HAL_RCC_GetSysClockFreq+0x94>)
 8001d30:	685b      	ldr	r3, [r3, #4]
 8001d32:	60fb      	str	r3, [r7, #12]
 8001d34:	68fb      	ldr	r3, [r7, #12]
 8001d36:	f003 030c 	and.w	r3, r3, #12
 8001d3a:	2b04      	cmp	r3, #4
 8001d3c:	d002      	beq.n	8001d44 <HAL_RCC_GetSysClockFreq+0x30>
 8001d3e:	2b08      	cmp	r3, #8
 8001d40:	d003      	beq.n	8001d4a <HAL_RCC_GetSysClockFreq+0x36>
 8001d42:	e027      	b.n	8001d94 <HAL_RCC_GetSysClockFreq+0x80>
 8001d44:	4b19      	ldr	r3, [pc, #100]	; (8001dac <HAL_RCC_GetSysClockFreq+0x98>)
 8001d46:	613b      	str	r3, [r7, #16]
 8001d48:	e027      	b.n	8001d9a <HAL_RCC_GetSysClockFreq+0x86>
 8001d4a:	68fb      	ldr	r3, [r7, #12]
 8001d4c:	0c9b      	lsrs	r3, r3, #18
 8001d4e:	f003 030f 	and.w	r3, r3, #15
 8001d52:	4a17      	ldr	r2, [pc, #92]	; (8001db0 <HAL_RCC_GetSysClockFreq+0x9c>)
 8001d54:	5cd3      	ldrb	r3, [r2, r3]
 8001d56:	607b      	str	r3, [r7, #4]
 8001d58:	68fb      	ldr	r3, [r7, #12]
 8001d5a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001d5e:	2b00      	cmp	r3, #0
 8001d60:	d010      	beq.n	8001d84 <HAL_RCC_GetSysClockFreq+0x70>
 8001d62:	4b11      	ldr	r3, [pc, #68]	; (8001da8 <HAL_RCC_GetSysClockFreq+0x94>)
 8001d64:	685b      	ldr	r3, [r3, #4]
 8001d66:	0c5b      	lsrs	r3, r3, #17
 8001d68:	f003 0301 	and.w	r3, r3, #1
 8001d6c:	4a11      	ldr	r2, [pc, #68]	; (8001db4 <HAL_RCC_GetSysClockFreq+0xa0>)
 8001d6e:	5cd3      	ldrb	r3, [r2, r3]
 8001d70:	60bb      	str	r3, [r7, #8]
 8001d72:	687b      	ldr	r3, [r7, #4]
 8001d74:	4a0d      	ldr	r2, [pc, #52]	; (8001dac <HAL_RCC_GetSysClockFreq+0x98>)
 8001d76:	fb03 f202 	mul.w	r2, r3, r2
 8001d7a:	68bb      	ldr	r3, [r7, #8]
 8001d7c:	fbb2 f3f3 	udiv	r3, r2, r3
 8001d80:	617b      	str	r3, [r7, #20]
 8001d82:	e004      	b.n	8001d8e <HAL_RCC_GetSysClockFreq+0x7a>
 8001d84:	687b      	ldr	r3, [r7, #4]
 8001d86:	4a0c      	ldr	r2, [pc, #48]	; (8001db8 <HAL_RCC_GetSysClockFreq+0xa4>)
 8001d88:	fb02 f303 	mul.w	r3, r2, r3
 8001d8c:	617b      	str	r3, [r7, #20]
 8001d8e:	697b      	ldr	r3, [r7, #20]
 8001d90:	613b      	str	r3, [r7, #16]
 8001d92:	e002      	b.n	8001d9a <HAL_RCC_GetSysClockFreq+0x86>
 8001d94:	4b05      	ldr	r3, [pc, #20]	; (8001dac <HAL_RCC_GetSysClockFreq+0x98>)
 8001d96:	613b      	str	r3, [r7, #16]
 8001d98:	bf00      	nop
 8001d9a:	693b      	ldr	r3, [r7, #16]
 8001d9c:	4618      	mov	r0, r3
 8001d9e:	371c      	adds	r7, #28
 8001da0:	46bd      	mov	sp, r7
 8001da2:	bc80      	pop	{r7}
 8001da4:	4770      	bx	lr
 8001da6:	bf00      	nop
 8001da8:	40021000 	.word	0x40021000
 8001dac:	007a1200 	.word	0x007a1200
 8001db0:	08002674 	.word	0x08002674
 8001db4:	08002684 	.word	0x08002684
 8001db8:	003d0900 	.word	0x003d0900

08001dbc <RCC_Delay>:
 8001dbc:	b480      	push	{r7}
 8001dbe:	b085      	sub	sp, #20
 8001dc0:	af00      	add	r7, sp, #0
 8001dc2:	6078      	str	r0, [r7, #4]
 8001dc4:	4b0a      	ldr	r3, [pc, #40]	; (8001df0 <RCC_Delay+0x34>)
 8001dc6:	681b      	ldr	r3, [r3, #0]
 8001dc8:	4a0a      	ldr	r2, [pc, #40]	; (8001df4 <RCC_Delay+0x38>)
 8001dca:	fba2 2303 	umull	r2, r3, r2, r3
 8001dce:	0a5b      	lsrs	r3, r3, #9
 8001dd0:	687a      	ldr	r2, [r7, #4]
 8001dd2:	fb02 f303 	mul.w	r3, r2, r3
 8001dd6:	60fb      	str	r3, [r7, #12]
 8001dd8:	bf00      	nop
 8001dda:	68fb      	ldr	r3, [r7, #12]
 8001ddc:	1e5a      	subs	r2, r3, #1
 8001dde:	60fa      	str	r2, [r7, #12]
 8001de0:	2b00      	cmp	r3, #0
 8001de2:	d1f9      	bne.n	8001dd8 <RCC_Delay+0x1c>
 8001de4:	bf00      	nop
 8001de6:	bf00      	nop
 8001de8:	3714      	adds	r7, #20
 8001dea:	46bd      	mov	sp, r7
 8001dec:	bc80      	pop	{r7}
 8001dee:	4770      	bx	lr
 8001df0:	20000060 	.word	0x20000060
 8001df4:	10624dd3 	.word	0x10624dd3

08001df8 <HAL_TIM_Base_Init>:
 8001df8:	b580      	push	{r7, lr}
 8001dfa:	b082      	sub	sp, #8
 8001dfc:	af00      	add	r7, sp, #0
 8001dfe:	6078      	str	r0, [r7, #4]
 8001e00:	687b      	ldr	r3, [r7, #4]
 8001e02:	2b00      	cmp	r3, #0
 8001e04:	d101      	bne.n	8001e0a <HAL_TIM_Base_Init+0x12>
 8001e06:	2301      	movs	r3, #1
 8001e08:	e041      	b.n	8001e8e <HAL_TIM_Base_Init+0x96>
 8001e0a:	687b      	ldr	r3, [r7, #4]
 8001e0c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001e10:	b2db      	uxtb	r3, r3
 8001e12:	2b00      	cmp	r3, #0
 8001e14:	d106      	bne.n	8001e24 <HAL_TIM_Base_Init+0x2c>
 8001e16:	687b      	ldr	r3, [r7, #4]
 8001e18:	2200      	movs	r2, #0
 8001e1a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001e1e:	6878      	ldr	r0, [r7, #4]
 8001e20:	f7fe ffec 	bl	8000dfc <HAL_TIM_Base_MspInit>
 8001e24:	687b      	ldr	r3, [r7, #4]
 8001e26:	2202      	movs	r2, #2
 8001e28:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001e2c:	687b      	ldr	r3, [r7, #4]
 8001e2e:	681a      	ldr	r2, [r3, #0]
 8001e30:	687b      	ldr	r3, [r7, #4]
 8001e32:	3304      	adds	r3, #4
 8001e34:	4619      	mov	r1, r3
 8001e36:	4610      	mov	r0, r2
 8001e38:	f000 fa74 	bl	8002324 <TIM_Base_SetConfig>
 8001e3c:	687b      	ldr	r3, [r7, #4]
 8001e3e:	2201      	movs	r2, #1
 8001e40:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8001e44:	687b      	ldr	r3, [r7, #4]
 8001e46:	2201      	movs	r2, #1
 8001e48:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001e4c:	687b      	ldr	r3, [r7, #4]
 8001e4e:	2201      	movs	r2, #1
 8001e50:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8001e54:	687b      	ldr	r3, [r7, #4]
 8001e56:	2201      	movs	r2, #1
 8001e58:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	2201      	movs	r2, #1
 8001e60:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8001e64:	687b      	ldr	r3, [r7, #4]
 8001e66:	2201      	movs	r2, #1
 8001e68:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	2201      	movs	r2, #1
 8001e70:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8001e74:	687b      	ldr	r3, [r7, #4]
 8001e76:	2201      	movs	r2, #1
 8001e78:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8001e7c:	687b      	ldr	r3, [r7, #4]
 8001e7e:	2201      	movs	r2, #1
 8001e80:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8001e84:	687b      	ldr	r3, [r7, #4]
 8001e86:	2201      	movs	r2, #1
 8001e88:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001e8c:	2300      	movs	r3, #0
 8001e8e:	4618      	mov	r0, r3
 8001e90:	3708      	adds	r7, #8
 8001e92:	46bd      	mov	sp, r7
 8001e94:	bd80      	pop	{r7, pc}
	...

08001e98 <HAL_TIM_Base_Start_IT>:
 8001e98:	b480      	push	{r7}
 8001e9a:	b085      	sub	sp, #20
 8001e9c:	af00      	add	r7, sp, #0
 8001e9e:	6078      	str	r0, [r7, #4]
 8001ea0:	687b      	ldr	r3, [r7, #4]
 8001ea2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001ea6:	b2db      	uxtb	r3, r3
 8001ea8:	2b01      	cmp	r3, #1
 8001eaa:	d001      	beq.n	8001eb0 <HAL_TIM_Base_Start_IT+0x18>
 8001eac:	2301      	movs	r3, #1
 8001eae:	e03a      	b.n	8001f26 <HAL_TIM_Base_Start_IT+0x8e>
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	2202      	movs	r2, #2
 8001eb4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001eb8:	687b      	ldr	r3, [r7, #4]
 8001eba:	681b      	ldr	r3, [r3, #0]
 8001ebc:	68da      	ldr	r2, [r3, #12]
 8001ebe:	687b      	ldr	r3, [r7, #4]
 8001ec0:	681b      	ldr	r3, [r3, #0]
 8001ec2:	f042 0201 	orr.w	r2, r2, #1
 8001ec6:	60da      	str	r2, [r3, #12]
 8001ec8:	687b      	ldr	r3, [r7, #4]
 8001eca:	681b      	ldr	r3, [r3, #0]
 8001ecc:	4a18      	ldr	r2, [pc, #96]	; (8001f30 <HAL_TIM_Base_Start_IT+0x98>)
 8001ece:	4293      	cmp	r3, r2
 8001ed0:	d00e      	beq.n	8001ef0 <HAL_TIM_Base_Start_IT+0x58>
 8001ed2:	687b      	ldr	r3, [r7, #4]
 8001ed4:	681b      	ldr	r3, [r3, #0]
 8001ed6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001eda:	d009      	beq.n	8001ef0 <HAL_TIM_Base_Start_IT+0x58>
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	681b      	ldr	r3, [r3, #0]
 8001ee0:	4a14      	ldr	r2, [pc, #80]	; (8001f34 <HAL_TIM_Base_Start_IT+0x9c>)
 8001ee2:	4293      	cmp	r3, r2
 8001ee4:	d004      	beq.n	8001ef0 <HAL_TIM_Base_Start_IT+0x58>
 8001ee6:	687b      	ldr	r3, [r7, #4]
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	4a13      	ldr	r2, [pc, #76]	; (8001f38 <HAL_TIM_Base_Start_IT+0xa0>)
 8001eec:	4293      	cmp	r3, r2
 8001eee:	d111      	bne.n	8001f14 <HAL_TIM_Base_Start_IT+0x7c>
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	681b      	ldr	r3, [r3, #0]
 8001ef4:	689b      	ldr	r3, [r3, #8]
 8001ef6:	f003 0307 	and.w	r3, r3, #7
 8001efa:	60fb      	str	r3, [r7, #12]
 8001efc:	68fb      	ldr	r3, [r7, #12]
 8001efe:	2b06      	cmp	r3, #6
 8001f00:	d010      	beq.n	8001f24 <HAL_TIM_Base_Start_IT+0x8c>
 8001f02:	687b      	ldr	r3, [r7, #4]
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	681a      	ldr	r2, [r3, #0]
 8001f08:	687b      	ldr	r3, [r7, #4]
 8001f0a:	681b      	ldr	r3, [r3, #0]
 8001f0c:	f042 0201 	orr.w	r2, r2, #1
 8001f10:	601a      	str	r2, [r3, #0]
 8001f12:	e007      	b.n	8001f24 <HAL_TIM_Base_Start_IT+0x8c>
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	681b      	ldr	r3, [r3, #0]
 8001f18:	681a      	ldr	r2, [r3, #0]
 8001f1a:	687b      	ldr	r3, [r7, #4]
 8001f1c:	681b      	ldr	r3, [r3, #0]
 8001f1e:	f042 0201 	orr.w	r2, r2, #1
 8001f22:	601a      	str	r2, [r3, #0]
 8001f24:	2300      	movs	r3, #0
 8001f26:	4618      	mov	r0, r3
 8001f28:	3714      	adds	r7, #20
 8001f2a:	46bd      	mov	sp, r7
 8001f2c:	bc80      	pop	{r7}
 8001f2e:	4770      	bx	lr
 8001f30:	40012c00 	.word	0x40012c00
 8001f34:	40000400 	.word	0x40000400
 8001f38:	40000800 	.word	0x40000800

08001f3c <HAL_TIM_IRQHandler>:
 8001f3c:	b580      	push	{r7, lr}
 8001f3e:	b082      	sub	sp, #8
 8001f40:	af00      	add	r7, sp, #0
 8001f42:	6078      	str	r0, [r7, #4]
 8001f44:	687b      	ldr	r3, [r7, #4]
 8001f46:	681b      	ldr	r3, [r3, #0]
 8001f48:	691b      	ldr	r3, [r3, #16]
 8001f4a:	f003 0302 	and.w	r3, r3, #2
 8001f4e:	2b02      	cmp	r3, #2
 8001f50:	d122      	bne.n	8001f98 <HAL_TIM_IRQHandler+0x5c>
 8001f52:	687b      	ldr	r3, [r7, #4]
 8001f54:	681b      	ldr	r3, [r3, #0]
 8001f56:	68db      	ldr	r3, [r3, #12]
 8001f58:	f003 0302 	and.w	r3, r3, #2
 8001f5c:	2b02      	cmp	r3, #2
 8001f5e:	d11b      	bne.n	8001f98 <HAL_TIM_IRQHandler+0x5c>
 8001f60:	687b      	ldr	r3, [r7, #4]
 8001f62:	681b      	ldr	r3, [r3, #0]
 8001f64:	f06f 0202 	mvn.w	r2, #2
 8001f68:	611a      	str	r2, [r3, #16]
 8001f6a:	687b      	ldr	r3, [r7, #4]
 8001f6c:	2201      	movs	r2, #1
 8001f6e:	771a      	strb	r2, [r3, #28]
 8001f70:	687b      	ldr	r3, [r7, #4]
 8001f72:	681b      	ldr	r3, [r3, #0]
 8001f74:	699b      	ldr	r3, [r3, #24]
 8001f76:	f003 0303 	and.w	r3, r3, #3
 8001f7a:	2b00      	cmp	r3, #0
 8001f7c:	d003      	beq.n	8001f86 <HAL_TIM_IRQHandler+0x4a>
 8001f7e:	6878      	ldr	r0, [r7, #4]
 8001f80:	f000 f9b4 	bl	80022ec <HAL_TIM_IC_CaptureCallback>
 8001f84:	e005      	b.n	8001f92 <HAL_TIM_IRQHandler+0x56>
 8001f86:	6878      	ldr	r0, [r7, #4]
 8001f88:	f000 f9a7 	bl	80022da <HAL_TIM_OC_DelayElapsedCallback>
 8001f8c:	6878      	ldr	r0, [r7, #4]
 8001f8e:	f000 f9b6 	bl	80022fe <HAL_TIM_PWM_PulseFinishedCallback>
 8001f92:	687b      	ldr	r3, [r7, #4]
 8001f94:	2200      	movs	r2, #0
 8001f96:	771a      	strb	r2, [r3, #28]
 8001f98:	687b      	ldr	r3, [r7, #4]
 8001f9a:	681b      	ldr	r3, [r3, #0]
 8001f9c:	691b      	ldr	r3, [r3, #16]
 8001f9e:	f003 0304 	and.w	r3, r3, #4
 8001fa2:	2b04      	cmp	r3, #4
 8001fa4:	d122      	bne.n	8001fec <HAL_TIM_IRQHandler+0xb0>
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	681b      	ldr	r3, [r3, #0]
 8001faa:	68db      	ldr	r3, [r3, #12]
 8001fac:	f003 0304 	and.w	r3, r3, #4
 8001fb0:	2b04      	cmp	r3, #4
 8001fb2:	d11b      	bne.n	8001fec <HAL_TIM_IRQHandler+0xb0>
 8001fb4:	687b      	ldr	r3, [r7, #4]
 8001fb6:	681b      	ldr	r3, [r3, #0]
 8001fb8:	f06f 0204 	mvn.w	r2, #4
 8001fbc:	611a      	str	r2, [r3, #16]
 8001fbe:	687b      	ldr	r3, [r7, #4]
 8001fc0:	2202      	movs	r2, #2
 8001fc2:	771a      	strb	r2, [r3, #28]
 8001fc4:	687b      	ldr	r3, [r7, #4]
 8001fc6:	681b      	ldr	r3, [r3, #0]
 8001fc8:	699b      	ldr	r3, [r3, #24]
 8001fca:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8001fce:	2b00      	cmp	r3, #0
 8001fd0:	d003      	beq.n	8001fda <HAL_TIM_IRQHandler+0x9e>
 8001fd2:	6878      	ldr	r0, [r7, #4]
 8001fd4:	f000 f98a 	bl	80022ec <HAL_TIM_IC_CaptureCallback>
 8001fd8:	e005      	b.n	8001fe6 <HAL_TIM_IRQHandler+0xaa>
 8001fda:	6878      	ldr	r0, [r7, #4]
 8001fdc:	f000 f97d 	bl	80022da <HAL_TIM_OC_DelayElapsedCallback>
 8001fe0:	6878      	ldr	r0, [r7, #4]
 8001fe2:	f000 f98c 	bl	80022fe <HAL_TIM_PWM_PulseFinishedCallback>
 8001fe6:	687b      	ldr	r3, [r7, #4]
 8001fe8:	2200      	movs	r2, #0
 8001fea:	771a      	strb	r2, [r3, #28]
 8001fec:	687b      	ldr	r3, [r7, #4]
 8001fee:	681b      	ldr	r3, [r3, #0]
 8001ff0:	691b      	ldr	r3, [r3, #16]
 8001ff2:	f003 0308 	and.w	r3, r3, #8
 8001ff6:	2b08      	cmp	r3, #8
 8001ff8:	d122      	bne.n	8002040 <HAL_TIM_IRQHandler+0x104>
 8001ffa:	687b      	ldr	r3, [r7, #4]
 8001ffc:	681b      	ldr	r3, [r3, #0]
 8001ffe:	68db      	ldr	r3, [r3, #12]
 8002000:	f003 0308 	and.w	r3, r3, #8
 8002004:	2b08      	cmp	r3, #8
 8002006:	d11b      	bne.n	8002040 <HAL_TIM_IRQHandler+0x104>
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	681b      	ldr	r3, [r3, #0]
 800200c:	f06f 0208 	mvn.w	r2, #8
 8002010:	611a      	str	r2, [r3, #16]
 8002012:	687b      	ldr	r3, [r7, #4]
 8002014:	2204      	movs	r2, #4
 8002016:	771a      	strb	r2, [r3, #28]
 8002018:	687b      	ldr	r3, [r7, #4]
 800201a:	681b      	ldr	r3, [r3, #0]
 800201c:	69db      	ldr	r3, [r3, #28]
 800201e:	f003 0303 	and.w	r3, r3, #3
 8002022:	2b00      	cmp	r3, #0
 8002024:	d003      	beq.n	800202e <HAL_TIM_IRQHandler+0xf2>
 8002026:	6878      	ldr	r0, [r7, #4]
 8002028:	f000 f960 	bl	80022ec <HAL_TIM_IC_CaptureCallback>
 800202c:	e005      	b.n	800203a <HAL_TIM_IRQHandler+0xfe>
 800202e:	6878      	ldr	r0, [r7, #4]
 8002030:	f000 f953 	bl	80022da <HAL_TIM_OC_DelayElapsedCallback>
 8002034:	6878      	ldr	r0, [r7, #4]
 8002036:	f000 f962 	bl	80022fe <HAL_TIM_PWM_PulseFinishedCallback>
 800203a:	687b      	ldr	r3, [r7, #4]
 800203c:	2200      	movs	r2, #0
 800203e:	771a      	strb	r2, [r3, #28]
 8002040:	687b      	ldr	r3, [r7, #4]
 8002042:	681b      	ldr	r3, [r3, #0]
 8002044:	691b      	ldr	r3, [r3, #16]
 8002046:	f003 0310 	and.w	r3, r3, #16
 800204a:	2b10      	cmp	r3, #16
 800204c:	d122      	bne.n	8002094 <HAL_TIM_IRQHandler+0x158>
 800204e:	687b      	ldr	r3, [r7, #4]
 8002050:	681b      	ldr	r3, [r3, #0]
 8002052:	68db      	ldr	r3, [r3, #12]
 8002054:	f003 0310 	and.w	r3, r3, #16
 8002058:	2b10      	cmp	r3, #16
 800205a:	d11b      	bne.n	8002094 <HAL_TIM_IRQHandler+0x158>
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	681b      	ldr	r3, [r3, #0]
 8002060:	f06f 0210 	mvn.w	r2, #16
 8002064:	611a      	str	r2, [r3, #16]
 8002066:	687b      	ldr	r3, [r7, #4]
 8002068:	2208      	movs	r2, #8
 800206a:	771a      	strb	r2, [r3, #28]
 800206c:	687b      	ldr	r3, [r7, #4]
 800206e:	681b      	ldr	r3, [r3, #0]
 8002070:	69db      	ldr	r3, [r3, #28]
 8002072:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002076:	2b00      	cmp	r3, #0
 8002078:	d003      	beq.n	8002082 <HAL_TIM_IRQHandler+0x146>
 800207a:	6878      	ldr	r0, [r7, #4]
 800207c:	f000 f936 	bl	80022ec <HAL_TIM_IC_CaptureCallback>
 8002080:	e005      	b.n	800208e <HAL_TIM_IRQHandler+0x152>
 8002082:	6878      	ldr	r0, [r7, #4]
 8002084:	f000 f929 	bl	80022da <HAL_TIM_OC_DelayElapsedCallback>
 8002088:	6878      	ldr	r0, [r7, #4]
 800208a:	f000 f938 	bl	80022fe <HAL_TIM_PWM_PulseFinishedCallback>
 800208e:	687b      	ldr	r3, [r7, #4]
 8002090:	2200      	movs	r2, #0
 8002092:	771a      	strb	r2, [r3, #28]
 8002094:	687b      	ldr	r3, [r7, #4]
 8002096:	681b      	ldr	r3, [r3, #0]
 8002098:	691b      	ldr	r3, [r3, #16]
 800209a:	f003 0301 	and.w	r3, r3, #1
 800209e:	2b01      	cmp	r3, #1
 80020a0:	d10e      	bne.n	80020c0 <HAL_TIM_IRQHandler+0x184>
 80020a2:	687b      	ldr	r3, [r7, #4]
 80020a4:	681b      	ldr	r3, [r3, #0]
 80020a6:	68db      	ldr	r3, [r3, #12]
 80020a8:	f003 0301 	and.w	r3, r3, #1
 80020ac:	2b01      	cmp	r3, #1
 80020ae:	d107      	bne.n	80020c0 <HAL_TIM_IRQHandler+0x184>
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	681b      	ldr	r3, [r3, #0]
 80020b4:	f06f 0201 	mvn.w	r2, #1
 80020b8:	611a      	str	r2, [r3, #16]
 80020ba:	6878      	ldr	r0, [r7, #4]
 80020bc:	f7fe fe5a 	bl	8000d74 <HAL_TIM_PeriodElapsedCallback>
 80020c0:	687b      	ldr	r3, [r7, #4]
 80020c2:	681b      	ldr	r3, [r3, #0]
 80020c4:	691b      	ldr	r3, [r3, #16]
 80020c6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80020ca:	2b80      	cmp	r3, #128	; 0x80
 80020cc:	d10e      	bne.n	80020ec <HAL_TIM_IRQHandler+0x1b0>
 80020ce:	687b      	ldr	r3, [r7, #4]
 80020d0:	681b      	ldr	r3, [r3, #0]
 80020d2:	68db      	ldr	r3, [r3, #12]
 80020d4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80020d8:	2b80      	cmp	r3, #128	; 0x80
 80020da:	d107      	bne.n	80020ec <HAL_TIM_IRQHandler+0x1b0>
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80020e4:	611a      	str	r2, [r3, #16]
 80020e6:	6878      	ldr	r0, [r7, #4]
 80020e8:	f000 fa7b 	bl	80025e2 <HAL_TIMEx_BreakCallback>
 80020ec:	687b      	ldr	r3, [r7, #4]
 80020ee:	681b      	ldr	r3, [r3, #0]
 80020f0:	691b      	ldr	r3, [r3, #16]
 80020f2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80020f6:	2b40      	cmp	r3, #64	; 0x40
 80020f8:	d10e      	bne.n	8002118 <HAL_TIM_IRQHandler+0x1dc>
 80020fa:	687b      	ldr	r3, [r7, #4]
 80020fc:	681b      	ldr	r3, [r3, #0]
 80020fe:	68db      	ldr	r3, [r3, #12]
 8002100:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002104:	2b40      	cmp	r3, #64	; 0x40
 8002106:	d107      	bne.n	8002118 <HAL_TIM_IRQHandler+0x1dc>
 8002108:	687b      	ldr	r3, [r7, #4]
 800210a:	681b      	ldr	r3, [r3, #0]
 800210c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002110:	611a      	str	r2, [r3, #16]
 8002112:	6878      	ldr	r0, [r7, #4]
 8002114:	f000 f8fc 	bl	8002310 <HAL_TIM_TriggerCallback>
 8002118:	687b      	ldr	r3, [r7, #4]
 800211a:	681b      	ldr	r3, [r3, #0]
 800211c:	691b      	ldr	r3, [r3, #16]
 800211e:	f003 0320 	and.w	r3, r3, #32
 8002122:	2b20      	cmp	r3, #32
 8002124:	d10e      	bne.n	8002144 <HAL_TIM_IRQHandler+0x208>
 8002126:	687b      	ldr	r3, [r7, #4]
 8002128:	681b      	ldr	r3, [r3, #0]
 800212a:	68db      	ldr	r3, [r3, #12]
 800212c:	f003 0320 	and.w	r3, r3, #32
 8002130:	2b20      	cmp	r3, #32
 8002132:	d107      	bne.n	8002144 <HAL_TIM_IRQHandler+0x208>
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	681b      	ldr	r3, [r3, #0]
 8002138:	f06f 0220 	mvn.w	r2, #32
 800213c:	611a      	str	r2, [r3, #16]
 800213e:	6878      	ldr	r0, [r7, #4]
 8002140:	f000 fa46 	bl	80025d0 <HAL_TIMEx_CommutCallback>
 8002144:	bf00      	nop
 8002146:	3708      	adds	r7, #8
 8002148:	46bd      	mov	sp, r7
 800214a:	bd80      	pop	{r7, pc}

0800214c <HAL_TIM_ConfigClockSource>:
 800214c:	b580      	push	{r7, lr}
 800214e:	b084      	sub	sp, #16
 8002150:	af00      	add	r7, sp, #0
 8002152:	6078      	str	r0, [r7, #4]
 8002154:	6039      	str	r1, [r7, #0]
 8002156:	2300      	movs	r3, #0
 8002158:	73fb      	strb	r3, [r7, #15]
 800215a:	687b      	ldr	r3, [r7, #4]
 800215c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002160:	2b01      	cmp	r3, #1
 8002162:	d101      	bne.n	8002168 <HAL_TIM_ConfigClockSource+0x1c>
 8002164:	2302      	movs	r3, #2
 8002166:	e0b4      	b.n	80022d2 <HAL_TIM_ConfigClockSource+0x186>
 8002168:	687b      	ldr	r3, [r7, #4]
 800216a:	2201      	movs	r2, #1
 800216c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	2202      	movs	r2, #2
 8002174:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002178:	687b      	ldr	r3, [r7, #4]
 800217a:	681b      	ldr	r3, [r3, #0]
 800217c:	689b      	ldr	r3, [r3, #8]
 800217e:	60bb      	str	r3, [r7, #8]
 8002180:	68bb      	ldr	r3, [r7, #8]
 8002182:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8002186:	60bb      	str	r3, [r7, #8]
 8002188:	68bb      	ldr	r3, [r7, #8]
 800218a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800218e:	60bb      	str	r3, [r7, #8]
 8002190:	687b      	ldr	r3, [r7, #4]
 8002192:	681b      	ldr	r3, [r3, #0]
 8002194:	68ba      	ldr	r2, [r7, #8]
 8002196:	609a      	str	r2, [r3, #8]
 8002198:	683b      	ldr	r3, [r7, #0]
 800219a:	681b      	ldr	r3, [r3, #0]
 800219c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80021a0:	d03e      	beq.n	8002220 <HAL_TIM_ConfigClockSource+0xd4>
 80021a2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80021a6:	f200 8087 	bhi.w	80022b8 <HAL_TIM_ConfigClockSource+0x16c>
 80021aa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80021ae:	f000 8086 	beq.w	80022be <HAL_TIM_ConfigClockSource+0x172>
 80021b2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80021b6:	d87f      	bhi.n	80022b8 <HAL_TIM_ConfigClockSource+0x16c>
 80021b8:	2b70      	cmp	r3, #112	; 0x70
 80021ba:	d01a      	beq.n	80021f2 <HAL_TIM_ConfigClockSource+0xa6>
 80021bc:	2b70      	cmp	r3, #112	; 0x70
 80021be:	d87b      	bhi.n	80022b8 <HAL_TIM_ConfigClockSource+0x16c>
 80021c0:	2b60      	cmp	r3, #96	; 0x60
 80021c2:	d050      	beq.n	8002266 <HAL_TIM_ConfigClockSource+0x11a>
 80021c4:	2b60      	cmp	r3, #96	; 0x60
 80021c6:	d877      	bhi.n	80022b8 <HAL_TIM_ConfigClockSource+0x16c>
 80021c8:	2b50      	cmp	r3, #80	; 0x50
 80021ca:	d03c      	beq.n	8002246 <HAL_TIM_ConfigClockSource+0xfa>
 80021cc:	2b50      	cmp	r3, #80	; 0x50
 80021ce:	d873      	bhi.n	80022b8 <HAL_TIM_ConfigClockSource+0x16c>
 80021d0:	2b40      	cmp	r3, #64	; 0x40
 80021d2:	d058      	beq.n	8002286 <HAL_TIM_ConfigClockSource+0x13a>
 80021d4:	2b40      	cmp	r3, #64	; 0x40
 80021d6:	d86f      	bhi.n	80022b8 <HAL_TIM_ConfigClockSource+0x16c>
 80021d8:	2b30      	cmp	r3, #48	; 0x30
 80021da:	d064      	beq.n	80022a6 <HAL_TIM_ConfigClockSource+0x15a>
 80021dc:	2b30      	cmp	r3, #48	; 0x30
 80021de:	d86b      	bhi.n	80022b8 <HAL_TIM_ConfigClockSource+0x16c>
 80021e0:	2b20      	cmp	r3, #32
 80021e2:	d060      	beq.n	80022a6 <HAL_TIM_ConfigClockSource+0x15a>
 80021e4:	2b20      	cmp	r3, #32
 80021e6:	d867      	bhi.n	80022b8 <HAL_TIM_ConfigClockSource+0x16c>
 80021e8:	2b00      	cmp	r3, #0
 80021ea:	d05c      	beq.n	80022a6 <HAL_TIM_ConfigClockSource+0x15a>
 80021ec:	2b10      	cmp	r3, #16
 80021ee:	d05a      	beq.n	80022a6 <HAL_TIM_ConfigClockSource+0x15a>
 80021f0:	e062      	b.n	80022b8 <HAL_TIM_ConfigClockSource+0x16c>
 80021f2:	687b      	ldr	r3, [r7, #4]
 80021f4:	6818      	ldr	r0, [r3, #0]
 80021f6:	683b      	ldr	r3, [r7, #0]
 80021f8:	6899      	ldr	r1, [r3, #8]
 80021fa:	683b      	ldr	r3, [r7, #0]
 80021fc:	685a      	ldr	r2, [r3, #4]
 80021fe:	683b      	ldr	r3, [r7, #0]
 8002200:	68db      	ldr	r3, [r3, #12]
 8002202:	f000 f968 	bl	80024d6 <TIM_ETR_SetConfig>
 8002206:	687b      	ldr	r3, [r7, #4]
 8002208:	681b      	ldr	r3, [r3, #0]
 800220a:	689b      	ldr	r3, [r3, #8]
 800220c:	60bb      	str	r3, [r7, #8]
 800220e:	68bb      	ldr	r3, [r7, #8]
 8002210:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8002214:	60bb      	str	r3, [r7, #8]
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	681b      	ldr	r3, [r3, #0]
 800221a:	68ba      	ldr	r2, [r7, #8]
 800221c:	609a      	str	r2, [r3, #8]
 800221e:	e04f      	b.n	80022c0 <HAL_TIM_ConfigClockSource+0x174>
 8002220:	687b      	ldr	r3, [r7, #4]
 8002222:	6818      	ldr	r0, [r3, #0]
 8002224:	683b      	ldr	r3, [r7, #0]
 8002226:	6899      	ldr	r1, [r3, #8]
 8002228:	683b      	ldr	r3, [r7, #0]
 800222a:	685a      	ldr	r2, [r3, #4]
 800222c:	683b      	ldr	r3, [r7, #0]
 800222e:	68db      	ldr	r3, [r3, #12]
 8002230:	f000 f951 	bl	80024d6 <TIM_ETR_SetConfig>
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	681b      	ldr	r3, [r3, #0]
 8002238:	689a      	ldr	r2, [r3, #8]
 800223a:	687b      	ldr	r3, [r7, #4]
 800223c:	681b      	ldr	r3, [r3, #0]
 800223e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002242:	609a      	str	r2, [r3, #8]
 8002244:	e03c      	b.n	80022c0 <HAL_TIM_ConfigClockSource+0x174>
 8002246:	687b      	ldr	r3, [r7, #4]
 8002248:	6818      	ldr	r0, [r3, #0]
 800224a:	683b      	ldr	r3, [r7, #0]
 800224c:	6859      	ldr	r1, [r3, #4]
 800224e:	683b      	ldr	r3, [r7, #0]
 8002250:	68db      	ldr	r3, [r3, #12]
 8002252:	461a      	mov	r2, r3
 8002254:	f000 f8c8 	bl	80023e8 <TIM_TI1_ConfigInputStage>
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	2150      	movs	r1, #80	; 0x50
 800225e:	4618      	mov	r0, r3
 8002260:	f000 f91f 	bl	80024a2 <TIM_ITRx_SetConfig>
 8002264:	e02c      	b.n	80022c0 <HAL_TIM_ConfigClockSource+0x174>
 8002266:	687b      	ldr	r3, [r7, #4]
 8002268:	6818      	ldr	r0, [r3, #0]
 800226a:	683b      	ldr	r3, [r7, #0]
 800226c:	6859      	ldr	r1, [r3, #4]
 800226e:	683b      	ldr	r3, [r7, #0]
 8002270:	68db      	ldr	r3, [r3, #12]
 8002272:	461a      	mov	r2, r3
 8002274:	f000 f8e6 	bl	8002444 <TIM_TI2_ConfigInputStage>
 8002278:	687b      	ldr	r3, [r7, #4]
 800227a:	681b      	ldr	r3, [r3, #0]
 800227c:	2160      	movs	r1, #96	; 0x60
 800227e:	4618      	mov	r0, r3
 8002280:	f000 f90f 	bl	80024a2 <TIM_ITRx_SetConfig>
 8002284:	e01c      	b.n	80022c0 <HAL_TIM_ConfigClockSource+0x174>
 8002286:	687b      	ldr	r3, [r7, #4]
 8002288:	6818      	ldr	r0, [r3, #0]
 800228a:	683b      	ldr	r3, [r7, #0]
 800228c:	6859      	ldr	r1, [r3, #4]
 800228e:	683b      	ldr	r3, [r7, #0]
 8002290:	68db      	ldr	r3, [r3, #12]
 8002292:	461a      	mov	r2, r3
 8002294:	f000 f8a8 	bl	80023e8 <TIM_TI1_ConfigInputStage>
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	681b      	ldr	r3, [r3, #0]
 800229c:	2140      	movs	r1, #64	; 0x40
 800229e:	4618      	mov	r0, r3
 80022a0:	f000 f8ff 	bl	80024a2 <TIM_ITRx_SetConfig>
 80022a4:	e00c      	b.n	80022c0 <HAL_TIM_ConfigClockSource+0x174>
 80022a6:	687b      	ldr	r3, [r7, #4]
 80022a8:	681a      	ldr	r2, [r3, #0]
 80022aa:	683b      	ldr	r3, [r7, #0]
 80022ac:	681b      	ldr	r3, [r3, #0]
 80022ae:	4619      	mov	r1, r3
 80022b0:	4610      	mov	r0, r2
 80022b2:	f000 f8f6 	bl	80024a2 <TIM_ITRx_SetConfig>
 80022b6:	e003      	b.n	80022c0 <HAL_TIM_ConfigClockSource+0x174>
 80022b8:	2301      	movs	r3, #1
 80022ba:	73fb      	strb	r3, [r7, #15]
 80022bc:	e000      	b.n	80022c0 <HAL_TIM_ConfigClockSource+0x174>
 80022be:	bf00      	nop
 80022c0:	687b      	ldr	r3, [r7, #4]
 80022c2:	2201      	movs	r2, #1
 80022c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80022c8:	687b      	ldr	r3, [r7, #4]
 80022ca:	2200      	movs	r2, #0
 80022cc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80022d0:	7bfb      	ldrb	r3, [r7, #15]
 80022d2:	4618      	mov	r0, r3
 80022d4:	3710      	adds	r7, #16
 80022d6:	46bd      	mov	sp, r7
 80022d8:	bd80      	pop	{r7, pc}

080022da <HAL_TIM_OC_DelayElapsedCallback>:
 80022da:	b480      	push	{r7}
 80022dc:	b083      	sub	sp, #12
 80022de:	af00      	add	r7, sp, #0
 80022e0:	6078      	str	r0, [r7, #4]
 80022e2:	bf00      	nop
 80022e4:	370c      	adds	r7, #12
 80022e6:	46bd      	mov	sp, r7
 80022e8:	bc80      	pop	{r7}
 80022ea:	4770      	bx	lr

080022ec <HAL_TIM_IC_CaptureCallback>:
 80022ec:	b480      	push	{r7}
 80022ee:	b083      	sub	sp, #12
 80022f0:	af00      	add	r7, sp, #0
 80022f2:	6078      	str	r0, [r7, #4]
 80022f4:	bf00      	nop
 80022f6:	370c      	adds	r7, #12
 80022f8:	46bd      	mov	sp, r7
 80022fa:	bc80      	pop	{r7}
 80022fc:	4770      	bx	lr

080022fe <HAL_TIM_PWM_PulseFinishedCallback>:
 80022fe:	b480      	push	{r7}
 8002300:	b083      	sub	sp, #12
 8002302:	af00      	add	r7, sp, #0
 8002304:	6078      	str	r0, [r7, #4]
 8002306:	bf00      	nop
 8002308:	370c      	adds	r7, #12
 800230a:	46bd      	mov	sp, r7
 800230c:	bc80      	pop	{r7}
 800230e:	4770      	bx	lr

08002310 <HAL_TIM_TriggerCallback>:
 8002310:	b480      	push	{r7}
 8002312:	b083      	sub	sp, #12
 8002314:	af00      	add	r7, sp, #0
 8002316:	6078      	str	r0, [r7, #4]
 8002318:	bf00      	nop
 800231a:	370c      	adds	r7, #12
 800231c:	46bd      	mov	sp, r7
 800231e:	bc80      	pop	{r7}
 8002320:	4770      	bx	lr
	...

08002324 <TIM_Base_SetConfig>:
 8002324:	b480      	push	{r7}
 8002326:	b085      	sub	sp, #20
 8002328:	af00      	add	r7, sp, #0
 800232a:	6078      	str	r0, [r7, #4]
 800232c:	6039      	str	r1, [r7, #0]
 800232e:	687b      	ldr	r3, [r7, #4]
 8002330:	681b      	ldr	r3, [r3, #0]
 8002332:	60fb      	str	r3, [r7, #12]
 8002334:	687b      	ldr	r3, [r7, #4]
 8002336:	4a29      	ldr	r2, [pc, #164]	; (80023dc <TIM_Base_SetConfig+0xb8>)
 8002338:	4293      	cmp	r3, r2
 800233a:	d00b      	beq.n	8002354 <TIM_Base_SetConfig+0x30>
 800233c:	687b      	ldr	r3, [r7, #4]
 800233e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002342:	d007      	beq.n	8002354 <TIM_Base_SetConfig+0x30>
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	4a26      	ldr	r2, [pc, #152]	; (80023e0 <TIM_Base_SetConfig+0xbc>)
 8002348:	4293      	cmp	r3, r2
 800234a:	d003      	beq.n	8002354 <TIM_Base_SetConfig+0x30>
 800234c:	687b      	ldr	r3, [r7, #4]
 800234e:	4a25      	ldr	r2, [pc, #148]	; (80023e4 <TIM_Base_SetConfig+0xc0>)
 8002350:	4293      	cmp	r3, r2
 8002352:	d108      	bne.n	8002366 <TIM_Base_SetConfig+0x42>
 8002354:	68fb      	ldr	r3, [r7, #12]
 8002356:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800235a:	60fb      	str	r3, [r7, #12]
 800235c:	683b      	ldr	r3, [r7, #0]
 800235e:	685b      	ldr	r3, [r3, #4]
 8002360:	68fa      	ldr	r2, [r7, #12]
 8002362:	4313      	orrs	r3, r2
 8002364:	60fb      	str	r3, [r7, #12]
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	4a1c      	ldr	r2, [pc, #112]	; (80023dc <TIM_Base_SetConfig+0xb8>)
 800236a:	4293      	cmp	r3, r2
 800236c:	d00b      	beq.n	8002386 <TIM_Base_SetConfig+0x62>
 800236e:	687b      	ldr	r3, [r7, #4]
 8002370:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002374:	d007      	beq.n	8002386 <TIM_Base_SetConfig+0x62>
 8002376:	687b      	ldr	r3, [r7, #4]
 8002378:	4a19      	ldr	r2, [pc, #100]	; (80023e0 <TIM_Base_SetConfig+0xbc>)
 800237a:	4293      	cmp	r3, r2
 800237c:	d003      	beq.n	8002386 <TIM_Base_SetConfig+0x62>
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	4a18      	ldr	r2, [pc, #96]	; (80023e4 <TIM_Base_SetConfig+0xc0>)
 8002382:	4293      	cmp	r3, r2
 8002384:	d108      	bne.n	8002398 <TIM_Base_SetConfig+0x74>
 8002386:	68fb      	ldr	r3, [r7, #12]
 8002388:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800238c:	60fb      	str	r3, [r7, #12]
 800238e:	683b      	ldr	r3, [r7, #0]
 8002390:	68db      	ldr	r3, [r3, #12]
 8002392:	68fa      	ldr	r2, [r7, #12]
 8002394:	4313      	orrs	r3, r2
 8002396:	60fb      	str	r3, [r7, #12]
 8002398:	68fb      	ldr	r3, [r7, #12]
 800239a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800239e:	683b      	ldr	r3, [r7, #0]
 80023a0:	695b      	ldr	r3, [r3, #20]
 80023a2:	4313      	orrs	r3, r2
 80023a4:	60fb      	str	r3, [r7, #12]
 80023a6:	687b      	ldr	r3, [r7, #4]
 80023a8:	68fa      	ldr	r2, [r7, #12]
 80023aa:	601a      	str	r2, [r3, #0]
 80023ac:	683b      	ldr	r3, [r7, #0]
 80023ae:	689a      	ldr	r2, [r3, #8]
 80023b0:	687b      	ldr	r3, [r7, #4]
 80023b2:	62da      	str	r2, [r3, #44]	; 0x2c
 80023b4:	683b      	ldr	r3, [r7, #0]
 80023b6:	681a      	ldr	r2, [r3, #0]
 80023b8:	687b      	ldr	r3, [r7, #4]
 80023ba:	629a      	str	r2, [r3, #40]	; 0x28
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	4a07      	ldr	r2, [pc, #28]	; (80023dc <TIM_Base_SetConfig+0xb8>)
 80023c0:	4293      	cmp	r3, r2
 80023c2:	d103      	bne.n	80023cc <TIM_Base_SetConfig+0xa8>
 80023c4:	683b      	ldr	r3, [r7, #0]
 80023c6:	691a      	ldr	r2, [r3, #16]
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	631a      	str	r2, [r3, #48]	; 0x30
 80023cc:	687b      	ldr	r3, [r7, #4]
 80023ce:	2201      	movs	r2, #1
 80023d0:	615a      	str	r2, [r3, #20]
 80023d2:	bf00      	nop
 80023d4:	3714      	adds	r7, #20
 80023d6:	46bd      	mov	sp, r7
 80023d8:	bc80      	pop	{r7}
 80023da:	4770      	bx	lr
 80023dc:	40012c00 	.word	0x40012c00
 80023e0:	40000400 	.word	0x40000400
 80023e4:	40000800 	.word	0x40000800

080023e8 <TIM_TI1_ConfigInputStage>:
 80023e8:	b480      	push	{r7}
 80023ea:	b087      	sub	sp, #28
 80023ec:	af00      	add	r7, sp, #0
 80023ee:	60f8      	str	r0, [r7, #12]
 80023f0:	60b9      	str	r1, [r7, #8]
 80023f2:	607a      	str	r2, [r7, #4]
 80023f4:	68fb      	ldr	r3, [r7, #12]
 80023f6:	6a1b      	ldr	r3, [r3, #32]
 80023f8:	617b      	str	r3, [r7, #20]
 80023fa:	68fb      	ldr	r3, [r7, #12]
 80023fc:	6a1b      	ldr	r3, [r3, #32]
 80023fe:	f023 0201 	bic.w	r2, r3, #1
 8002402:	68fb      	ldr	r3, [r7, #12]
 8002404:	621a      	str	r2, [r3, #32]
 8002406:	68fb      	ldr	r3, [r7, #12]
 8002408:	699b      	ldr	r3, [r3, #24]
 800240a:	613b      	str	r3, [r7, #16]
 800240c:	693b      	ldr	r3, [r7, #16]
 800240e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002412:	613b      	str	r3, [r7, #16]
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	011b      	lsls	r3, r3, #4
 8002418:	693a      	ldr	r2, [r7, #16]
 800241a:	4313      	orrs	r3, r2
 800241c:	613b      	str	r3, [r7, #16]
 800241e:	697b      	ldr	r3, [r7, #20]
 8002420:	f023 030a 	bic.w	r3, r3, #10
 8002424:	617b      	str	r3, [r7, #20]
 8002426:	697a      	ldr	r2, [r7, #20]
 8002428:	68bb      	ldr	r3, [r7, #8]
 800242a:	4313      	orrs	r3, r2
 800242c:	617b      	str	r3, [r7, #20]
 800242e:	68fb      	ldr	r3, [r7, #12]
 8002430:	693a      	ldr	r2, [r7, #16]
 8002432:	619a      	str	r2, [r3, #24]
 8002434:	68fb      	ldr	r3, [r7, #12]
 8002436:	697a      	ldr	r2, [r7, #20]
 8002438:	621a      	str	r2, [r3, #32]
 800243a:	bf00      	nop
 800243c:	371c      	adds	r7, #28
 800243e:	46bd      	mov	sp, r7
 8002440:	bc80      	pop	{r7}
 8002442:	4770      	bx	lr

08002444 <TIM_TI2_ConfigInputStage>:
 8002444:	b480      	push	{r7}
 8002446:	b087      	sub	sp, #28
 8002448:	af00      	add	r7, sp, #0
 800244a:	60f8      	str	r0, [r7, #12]
 800244c:	60b9      	str	r1, [r7, #8]
 800244e:	607a      	str	r2, [r7, #4]
 8002450:	68fb      	ldr	r3, [r7, #12]
 8002452:	6a1b      	ldr	r3, [r3, #32]
 8002454:	617b      	str	r3, [r7, #20]
 8002456:	68fb      	ldr	r3, [r7, #12]
 8002458:	6a1b      	ldr	r3, [r3, #32]
 800245a:	f023 0210 	bic.w	r2, r3, #16
 800245e:	68fb      	ldr	r3, [r7, #12]
 8002460:	621a      	str	r2, [r3, #32]
 8002462:	68fb      	ldr	r3, [r7, #12]
 8002464:	699b      	ldr	r3, [r3, #24]
 8002466:	613b      	str	r3, [r7, #16]
 8002468:	693b      	ldr	r3, [r7, #16]
 800246a:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800246e:	613b      	str	r3, [r7, #16]
 8002470:	687b      	ldr	r3, [r7, #4]
 8002472:	031b      	lsls	r3, r3, #12
 8002474:	693a      	ldr	r2, [r7, #16]
 8002476:	4313      	orrs	r3, r2
 8002478:	613b      	str	r3, [r7, #16]
 800247a:	697b      	ldr	r3, [r7, #20]
 800247c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8002480:	617b      	str	r3, [r7, #20]
 8002482:	68bb      	ldr	r3, [r7, #8]
 8002484:	011b      	lsls	r3, r3, #4
 8002486:	697a      	ldr	r2, [r7, #20]
 8002488:	4313      	orrs	r3, r2
 800248a:	617b      	str	r3, [r7, #20]
 800248c:	68fb      	ldr	r3, [r7, #12]
 800248e:	693a      	ldr	r2, [r7, #16]
 8002490:	619a      	str	r2, [r3, #24]
 8002492:	68fb      	ldr	r3, [r7, #12]
 8002494:	697a      	ldr	r2, [r7, #20]
 8002496:	621a      	str	r2, [r3, #32]
 8002498:	bf00      	nop
 800249a:	371c      	adds	r7, #28
 800249c:	46bd      	mov	sp, r7
 800249e:	bc80      	pop	{r7}
 80024a0:	4770      	bx	lr

080024a2 <TIM_ITRx_SetConfig>:
 80024a2:	b480      	push	{r7}
 80024a4:	b085      	sub	sp, #20
 80024a6:	af00      	add	r7, sp, #0
 80024a8:	6078      	str	r0, [r7, #4]
 80024aa:	6039      	str	r1, [r7, #0]
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	689b      	ldr	r3, [r3, #8]
 80024b0:	60fb      	str	r3, [r7, #12]
 80024b2:	68fb      	ldr	r3, [r7, #12]
 80024b4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80024b8:	60fb      	str	r3, [r7, #12]
 80024ba:	683a      	ldr	r2, [r7, #0]
 80024bc:	68fb      	ldr	r3, [r7, #12]
 80024be:	4313      	orrs	r3, r2
 80024c0:	f043 0307 	orr.w	r3, r3, #7
 80024c4:	60fb      	str	r3, [r7, #12]
 80024c6:	687b      	ldr	r3, [r7, #4]
 80024c8:	68fa      	ldr	r2, [r7, #12]
 80024ca:	609a      	str	r2, [r3, #8]
 80024cc:	bf00      	nop
 80024ce:	3714      	adds	r7, #20
 80024d0:	46bd      	mov	sp, r7
 80024d2:	bc80      	pop	{r7}
 80024d4:	4770      	bx	lr

080024d6 <TIM_ETR_SetConfig>:
 80024d6:	b480      	push	{r7}
 80024d8:	b087      	sub	sp, #28
 80024da:	af00      	add	r7, sp, #0
 80024dc:	60f8      	str	r0, [r7, #12]
 80024de:	60b9      	str	r1, [r7, #8]
 80024e0:	607a      	str	r2, [r7, #4]
 80024e2:	603b      	str	r3, [r7, #0]
 80024e4:	68fb      	ldr	r3, [r7, #12]
 80024e6:	689b      	ldr	r3, [r3, #8]
 80024e8:	617b      	str	r3, [r7, #20]
 80024ea:	697b      	ldr	r3, [r7, #20]
 80024ec:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80024f0:	617b      	str	r3, [r7, #20]
 80024f2:	683b      	ldr	r3, [r7, #0]
 80024f4:	021a      	lsls	r2, r3, #8
 80024f6:	687b      	ldr	r3, [r7, #4]
 80024f8:	431a      	orrs	r2, r3
 80024fa:	68bb      	ldr	r3, [r7, #8]
 80024fc:	4313      	orrs	r3, r2
 80024fe:	697a      	ldr	r2, [r7, #20]
 8002500:	4313      	orrs	r3, r2
 8002502:	617b      	str	r3, [r7, #20]
 8002504:	68fb      	ldr	r3, [r7, #12]
 8002506:	697a      	ldr	r2, [r7, #20]
 8002508:	609a      	str	r2, [r3, #8]
 800250a:	bf00      	nop
 800250c:	371c      	adds	r7, #28
 800250e:	46bd      	mov	sp, r7
 8002510:	bc80      	pop	{r7}
 8002512:	4770      	bx	lr

08002514 <HAL_TIMEx_MasterConfigSynchronization>:
 8002514:	b480      	push	{r7}
 8002516:	b085      	sub	sp, #20
 8002518:	af00      	add	r7, sp, #0
 800251a:	6078      	str	r0, [r7, #4]
 800251c:	6039      	str	r1, [r7, #0]
 800251e:	687b      	ldr	r3, [r7, #4]
 8002520:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002524:	2b01      	cmp	r3, #1
 8002526:	d101      	bne.n	800252c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8002528:	2302      	movs	r3, #2
 800252a:	e046      	b.n	80025ba <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 800252c:	687b      	ldr	r3, [r7, #4]
 800252e:	2201      	movs	r2, #1
 8002530:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002534:	687b      	ldr	r3, [r7, #4]
 8002536:	2202      	movs	r2, #2
 8002538:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800253c:	687b      	ldr	r3, [r7, #4]
 800253e:	681b      	ldr	r3, [r3, #0]
 8002540:	685b      	ldr	r3, [r3, #4]
 8002542:	60fb      	str	r3, [r7, #12]
 8002544:	687b      	ldr	r3, [r7, #4]
 8002546:	681b      	ldr	r3, [r3, #0]
 8002548:	689b      	ldr	r3, [r3, #8]
 800254a:	60bb      	str	r3, [r7, #8]
 800254c:	68fb      	ldr	r3, [r7, #12]
 800254e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002552:	60fb      	str	r3, [r7, #12]
 8002554:	683b      	ldr	r3, [r7, #0]
 8002556:	681b      	ldr	r3, [r3, #0]
 8002558:	68fa      	ldr	r2, [r7, #12]
 800255a:	4313      	orrs	r3, r2
 800255c:	60fb      	str	r3, [r7, #12]
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	681b      	ldr	r3, [r3, #0]
 8002562:	68fa      	ldr	r2, [r7, #12]
 8002564:	605a      	str	r2, [r3, #4]
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	681b      	ldr	r3, [r3, #0]
 800256a:	4a16      	ldr	r2, [pc, #88]	; (80025c4 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 800256c:	4293      	cmp	r3, r2
 800256e:	d00e      	beq.n	800258e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002570:	687b      	ldr	r3, [r7, #4]
 8002572:	681b      	ldr	r3, [r3, #0]
 8002574:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002578:	d009      	beq.n	800258e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800257a:	687b      	ldr	r3, [r7, #4]
 800257c:	681b      	ldr	r3, [r3, #0]
 800257e:	4a12      	ldr	r2, [pc, #72]	; (80025c8 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8002580:	4293      	cmp	r3, r2
 8002582:	d004      	beq.n	800258e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002584:	687b      	ldr	r3, [r7, #4]
 8002586:	681b      	ldr	r3, [r3, #0]
 8002588:	4a10      	ldr	r2, [pc, #64]	; (80025cc <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 800258a:	4293      	cmp	r3, r2
 800258c:	d10c      	bne.n	80025a8 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 800258e:	68bb      	ldr	r3, [r7, #8]
 8002590:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002594:	60bb      	str	r3, [r7, #8]
 8002596:	683b      	ldr	r3, [r7, #0]
 8002598:	685b      	ldr	r3, [r3, #4]
 800259a:	68ba      	ldr	r2, [r7, #8]
 800259c:	4313      	orrs	r3, r2
 800259e:	60bb      	str	r3, [r7, #8]
 80025a0:	687b      	ldr	r3, [r7, #4]
 80025a2:	681b      	ldr	r3, [r3, #0]
 80025a4:	68ba      	ldr	r2, [r7, #8]
 80025a6:	609a      	str	r2, [r3, #8]
 80025a8:	687b      	ldr	r3, [r7, #4]
 80025aa:	2201      	movs	r2, #1
 80025ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80025b0:	687b      	ldr	r3, [r7, #4]
 80025b2:	2200      	movs	r2, #0
 80025b4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80025b8:	2300      	movs	r3, #0
 80025ba:	4618      	mov	r0, r3
 80025bc:	3714      	adds	r7, #20
 80025be:	46bd      	mov	sp, r7
 80025c0:	bc80      	pop	{r7}
 80025c2:	4770      	bx	lr
 80025c4:	40012c00 	.word	0x40012c00
 80025c8:	40000400 	.word	0x40000400
 80025cc:	40000800 	.word	0x40000800

080025d0 <HAL_TIMEx_CommutCallback>:
 80025d0:	b480      	push	{r7}
 80025d2:	b083      	sub	sp, #12
 80025d4:	af00      	add	r7, sp, #0
 80025d6:	6078      	str	r0, [r7, #4]
 80025d8:	bf00      	nop
 80025da:	370c      	adds	r7, #12
 80025dc:	46bd      	mov	sp, r7
 80025de:	bc80      	pop	{r7}
 80025e0:	4770      	bx	lr

080025e2 <HAL_TIMEx_BreakCallback>:
 80025e2:	b480      	push	{r7}
 80025e4:	b083      	sub	sp, #12
 80025e6:	af00      	add	r7, sp, #0
 80025e8:	6078      	str	r0, [r7, #4]
 80025ea:	bf00      	nop
 80025ec:	370c      	adds	r7, #12
 80025ee:	46bd      	mov	sp, r7
 80025f0:	bc80      	pop	{r7}
 80025f2:	4770      	bx	lr

080025f4 <memset>:
 80025f4:	4603      	mov	r3, r0
 80025f6:	4402      	add	r2, r0
 80025f8:	4293      	cmp	r3, r2
 80025fa:	d100      	bne.n	80025fe <memset+0xa>
 80025fc:	4770      	bx	lr
 80025fe:	f803 1b01 	strb.w	r1, [r3], #1
 8002602:	e7f9      	b.n	80025f8 <memset+0x4>

08002604 <__libc_init_array>:
 8002604:	b570      	push	{r4, r5, r6, lr}
 8002606:	2600      	movs	r6, #0
 8002608:	4d0c      	ldr	r5, [pc, #48]	; (800263c <__libc_init_array+0x38>)
 800260a:	4c0d      	ldr	r4, [pc, #52]	; (8002640 <__libc_init_array+0x3c>)
 800260c:	1b64      	subs	r4, r4, r5
 800260e:	10a4      	asrs	r4, r4, #2
 8002610:	42a6      	cmp	r6, r4
 8002612:	d109      	bne.n	8002628 <__libc_init_array+0x24>
 8002614:	f000 f81a 	bl	800264c <_init>
 8002618:	2600      	movs	r6, #0
 800261a:	4d0a      	ldr	r5, [pc, #40]	; (8002644 <__libc_init_array+0x40>)
 800261c:	4c0a      	ldr	r4, [pc, #40]	; (8002648 <__libc_init_array+0x44>)
 800261e:	1b64      	subs	r4, r4, r5
 8002620:	10a4      	asrs	r4, r4, #2
 8002622:	42a6      	cmp	r6, r4
 8002624:	d105      	bne.n	8002632 <__libc_init_array+0x2e>
 8002626:	bd70      	pop	{r4, r5, r6, pc}
 8002628:	f855 3b04 	ldr.w	r3, [r5], #4
 800262c:	4798      	blx	r3
 800262e:	3601      	adds	r6, #1
 8002630:	e7ee      	b.n	8002610 <__libc_init_array+0xc>
 8002632:	f855 3b04 	ldr.w	r3, [r5], #4
 8002636:	4798      	blx	r3
 8002638:	3601      	adds	r6, #1
 800263a:	e7f2      	b.n	8002622 <__libc_init_array+0x1e>
 800263c:	08002688 	.word	0x08002688
 8002640:	08002688 	.word	0x08002688
 8002644:	08002688 	.word	0x08002688
 8002648:	0800268c 	.word	0x0800268c

0800264c <_init>:
 800264c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800264e:	bf00      	nop
 8002650:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002652:	bc08      	pop	{r3}
 8002654:	469e      	mov	lr, r3
 8002656:	4770      	bx	lr

08002658 <_fini>:
 8002658:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800265a:	bf00      	nop
 800265c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800265e:	bc08      	pop	{r3}
 8002660:	469e      	mov	lr, r3
 8002662:	4770      	bx	lr
